{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/admin/users`;\n  }\n  getUsers(params = {}) {\n    let httpParams = new HttpParams();\n    if (params.page) {\n      httpParams = httpParams.set('page', params.page.toString());\n    }\n    if (params.limit) {\n      httpParams = httpParams.set('limit', params.limit.toString());\n    }\n    if (params.sort) {\n      httpParams = httpParams.set('sort', params.sort);\n    }\n    return this.http.get(this.apiUrl, {\n      params: httpParams\n    });\n  }\n  getUser(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createUser(userData) {\n    return this.http.post(this.apiUrl, userData);\n  }\n  updateUser(id, userData) {\n    return this.http.put(`${this.apiUrl}/${id}`, userData);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  assignPackage(userId, packageData) {\n    return this.http.post(`${this.apiUrl}/${userId}/assign-package`, packageData);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","environment","UserService","constructor","http","apiUrl","getUsers","params","httpParams","page","set","toString","limit","sort","get","getUser","id","createUser","userData","post","updateUser","put","deleteUser","delete","assignPackage","userId","packageData","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\winni\\OneDrive\\Desktop\\JINZ-Media-Full-Source\\frontend\\src\\app\\features\\user-management\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nexport interface User {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  role: 'user' | 'admin';\r\n  isActive: boolean;\r\n  subscription?: {\r\n    packageId: any;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    isActive: boolean;\r\n    isLifetime: boolean;\r\n  };\r\n  avatar?: string;\r\n  phone?: string;\r\n  lastLogin?: Date;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface UserResponse {\r\n  success: boolean;\r\n  count: number;\r\n  total: number;\r\n  pagination: {\r\n    next?: { page: number; limit: number };\r\n    prev?: { page: number; limit: number };\r\n  };\r\n  data: User[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = `${environment.apiUrl}/admin/users`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(params: { page?: number; limit?: number; sort?: string } = {}): Observable<UserResponse> {\r\n    let httpParams = new HttpParams();\r\n    \r\n    if (params.page) {\r\n      httpParams = httpParams.set('page', params.page.toString());\r\n    }\r\n    if (params.limit) {\r\n      httpParams = httpParams.set('limit', params.limit.toString());\r\n    }\r\n    if (params.sort) {\r\n      httpParams = httpParams.set('sort', params.sort);\r\n    }\r\n\r\n    return this.http.get<UserResponse>(this.apiUrl, { params: httpParams });\r\n  }\r\n\r\n  getUser(id: string): Observable<{ success: boolean; data: User }> {\r\n    return this.http.get<{ success: boolean; data: User }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createUser(userData: Partial<User>): Observable<{ success: boolean; data: User }> {\r\n    return this.http.post<{ success: boolean; data: User }>(this.apiUrl, userData);\r\n  }\r\n\r\n  updateUser(id: string, userData: Partial<User>): Observable<{ success: boolean; data: User }> {\r\n    return this.http.put<{ success: boolean; data: User }>(`${this.apiUrl}/${id}`, userData);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<{ success: boolean; data: {} }> {\r\n    return this.http.delete<{ success: boolean; data: {} }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  assignPackage(userId: string, packageData: { packageId: string; startDate: Date; customEndDate?: Date }): Observable<{ success: boolean; data: User }> {\r\n    return this.http.post<{ success: boolean; data: User }>(`${this.apiUrl}/${userId}/assign-package`, packageData);\r\n  }\r\n} "],"mappings":"AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAASC,WAAW,QAAQ,sCAAsC;;;AAoClE,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,cAAc;EAEb;EAEvCC,QAAQA,CAACC,MAAA,GAA2D,EAAE;IACpE,IAAIC,UAAU,GAAG,IAAIR,UAAU,EAAE;IAEjC,IAAIO,MAAM,CAACE,IAAI,EAAE;MACfD,UAAU,GAAGA,UAAU,CAACE,GAAG,CAAC,MAAM,EAAEH,MAAM,CAACE,IAAI,CAACE,QAAQ,EAAE,CAAC;IAC7D;IACA,IAAIJ,MAAM,CAACK,KAAK,EAAE;MAChBJ,UAAU,GAAGA,UAAU,CAACE,GAAG,CAAC,OAAO,EAAEH,MAAM,CAACK,KAAK,CAACD,QAAQ,EAAE,CAAC;IAC/D;IACA,IAAIJ,MAAM,CAACM,IAAI,EAAE;MACfL,UAAU,GAAGA,UAAU,CAACE,GAAG,CAAC,MAAM,EAAEH,MAAM,CAACM,IAAI,CAAC;IAClD;IAEA,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAe,IAAI,CAACT,MAAM,EAAE;MAAEE,MAAM,EAAEC;IAAU,CAAE,CAAC;EACzE;EAEAO,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACZ,IAAI,CAACU,GAAG,CAAmC,GAAG,IAAI,CAACT,MAAM,IAAIW,EAAE,EAAE,CAAC;EAChF;EAEAC,UAAUA,CAACC,QAAuB;IAChC,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAmC,IAAI,CAACd,MAAM,EAAEa,QAAQ,CAAC;EAChF;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,QAAuB;IAC5C,OAAO,IAAI,CAACd,IAAI,CAACiB,GAAG,CAAmC,GAAG,IAAI,CAAChB,MAAM,IAAIW,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAC1F;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACZ,IAAI,CAACmB,MAAM,CAAiC,GAAG,IAAI,CAAClB,MAAM,IAAIW,EAAE,EAAE,CAAC;EACjF;EAEAQ,aAAaA,CAACC,MAAc,EAAEC,WAAyE;IACrG,OAAO,IAAI,CAACtB,IAAI,CAACe,IAAI,CAAmC,GAAG,IAAI,CAACd,MAAM,IAAIoB,MAAM,iBAAiB,EAAEC,WAAW,CAAC;EACjH;EAAC,QAAAC,CAAA,G;qCAvCUzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}