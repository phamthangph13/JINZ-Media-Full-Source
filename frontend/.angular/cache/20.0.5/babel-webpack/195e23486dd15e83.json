{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/admin/users`;\n  }\n  // Lấy danh sách users với filtering và pagination\n  getUsers(filters) {\n    let params = new HttpParams();\n    if (filters) {\n      if (filters.page) params = params.set('page', filters.page.toString());\n      if (filters.limit) params = params.set('limit', filters.limit.toString());\n      if (filters.sort) params = params.set('sort', filters.sort);\n      if (filters.role) params = params.set('role', filters.role);\n      if (filters.isActive !== undefined) params = params.set('isActive', filters.isActive.toString());\n      if (filters.search) params = params.set('search', filters.search);\n    }\n    return this.http.get(this.apiUrl, {\n      params\n    });\n  }\n  // Lấy thông tin chi tiết một user\n  getUserById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  // Tạo user mới\n  createUser(userData) {\n    return this.http.post(this.apiUrl, userData);\n  }\n  // Cập nhật user\n  updateUser(id, userData) {\n    return this.http.put(`${this.apiUrl}/${id}`, userData);\n  }\n  // Xóa user\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  // Gán package cho user\n  assignPackage(userId, packageData) {\n    return this.http.post(`${this.apiUrl}/${userId}/assign-package`, packageData);\n  }\n  // Xóa package khỏi user\n  removePackage(userId) {\n    return this.http.post(`${this.apiUrl}/${userId}/remove-package`, {});\n  }\n  // Lấy thống kê users\n  getUserStats() {\n    return this.http.get(`${this.apiUrl}/stats`);\n  }\n  // Reset password cho user\n  resetUserPassword(userId) {\n    return this.http.post(`${this.apiUrl}/${userId}/reset-password`, {});\n  }\n  // Toggle active status\n  toggleUserStatus(userId, isActive) {\n    return this.http.put(`${this.apiUrl}/${userId}`, {\n      isActive\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","environment","UserService","constructor","http","apiUrl","getUsers","filters","params","page","set","toString","limit","sort","role","isActive","undefined","search","get","getUserById","id","createUser","userData","post","updateUser","put","deleteUser","delete","assignPackage","userId","packageData","removePackage","getUserStats","resetUserPassword","toggleUserStatus","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\winni\\OneDrive\\Desktop\\JINZ-Media-Full-Source\\frontend\\src\\app\\features\\user-management\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { \r\n  User, \r\n  UserStats, \r\n  CreateUserRequest, \r\n  UpdateUserRequest, \r\n  UsersResponse, \r\n  UserResponse,\r\n  AssignPackageRequest,\r\n  UserFilters \r\n} from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private readonly apiUrl = `${environment.apiUrl}/admin/users`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Lấy danh sách users với filtering và pagination\r\n  getUsers(filters?: UserFilters): Observable<UsersResponse> {\r\n    let params = new HttpParams();\r\n    \r\n    if (filters) {\r\n      if (filters.page) params = params.set('page', filters.page.toString());\r\n      if (filters.limit) params = params.set('limit', filters.limit.toString());\r\n      if (filters.sort) params = params.set('sort', filters.sort);\r\n      if (filters.role) params = params.set('role', filters.role);\r\n      if (filters.isActive !== undefined) params = params.set('isActive', filters.isActive.toString());\r\n      if (filters.search) params = params.set('search', filters.search);\r\n    }\r\n\r\n    return this.http.get<UsersResponse>(this.apiUrl, { params });\r\n  }\r\n\r\n  // Lấy thông tin chi tiết một user\r\n  getUserById(id: string): Observable<UserResponse> {\r\n    return this.http.get<UserResponse>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Tạo user mới\r\n  createUser(userData: CreateUserRequest): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>(this.apiUrl, userData);\r\n  }\r\n\r\n  // Cập nhật user\r\n  updateUser(id: string, userData: UpdateUserRequest): Observable<UserResponse> {\r\n    return this.http.put<UserResponse>(`${this.apiUrl}/${id}`, userData);\r\n  }\r\n\r\n  // Xóa user\r\n  deleteUser(id: string): Observable<{success: boolean, data: {}}> {\r\n    return this.http.delete<{success: boolean, data: {}}>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Gán package cho user\r\n  assignPackage(userId: string, packageData: AssignPackageRequest): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>(`${this.apiUrl}/${userId}/assign-package`, packageData);\r\n  }\r\n\r\n  // Xóa package khỏi user\r\n  removePackage(userId: string): Observable<UserResponse> {\r\n    return this.http.post<UserResponse>(`${this.apiUrl}/${userId}/remove-package`, {});\r\n  }\r\n\r\n  // Lấy thống kê users\r\n  getUserStats(): Observable<{success: boolean, data: UserStats}> {\r\n    return this.http.get<{success: boolean, data: UserStats}>(`${this.apiUrl}/stats`);\r\n  }\r\n\r\n  // Reset password cho user\r\n  resetUserPassword(userId: string): Observable<{success: boolean, message: string}> {\r\n    return this.http.post<{success: boolean, message: string}>(`${this.apiUrl}/${userId}/reset-password`, {});\r\n  }\r\n\r\n  // Toggle active status\r\n  toggleUserStatus(userId: string, isActive: boolean): Observable<UserResponse> {\r\n    return this.http.put<UserResponse>(`${this.apiUrl}/${userId}`, { isActive });\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}