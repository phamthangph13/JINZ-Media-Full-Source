{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nlet UserListComponent = class UserListComponent {\n  constructor(userService, modalService, fb, toastr) {\n    this.userService = userService;\n    this.modalService = modalService;\n    this.fb = fb;\n    this.toastr = toastr;\n    this.users = [];\n    this.totalItems = 0;\n    this.currentPage = 1;\n    this.pageSize = 10;\n    this.searchTerm = '';\n    this.selectedRole = '';\n    this.selectedStatus = '';\n    this.selectedUser = null;\n    this.packages = []; // You'll need to fetch this from your package service\n    this.Math = Math;\n    this.initForms();\n  }\n  ngOnInit() {\n    this.loadUsers();\n    // Load packages here from your package service\n  }\n  initForms() {\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.minLength(6)]],\n      phone: [''],\n      role: ['user'],\n      isActive: [true]\n    });\n    this.packageForm = this.fb.group({\n      packageId: ['', Validators.required],\n      startDate: ['', Validators.required],\n      isLifetime: [false],\n      customEndDate: ['']\n    });\n  }\n  loadUsers() {\n    this.userService.getUsers(this.currentPage, this.pageSize).subscribe({\n      next: response => {\n        this.users = response.data;\n        this.totalItems = response.total;\n      },\n      error: error => {\n        this.toastr.error('Không thể tải danh sách người dùng');\n      }\n    });\n  }\n  onSearch() {\n    // Implement search logic here\n    this.currentPage = 1;\n    this.loadUsers();\n  }\n  openUserModal(user) {\n    this.selectedUser = user || null;\n    if (user) {\n      this.userForm.patchValue({\n        name: user.name,\n        email: user.email,\n        phone: user.phone,\n        role: user.role,\n        isActive: user.isActive\n      });\n      this.userForm.get('password')?.clearValidators();\n    } else {\n      this.userForm.reset({\n        role: 'user',\n        isActive: true\n      });\n      this.userForm.get('password')?.setValidators([Validators.required, Validators.minLength(6)]);\n    }\n    this.userForm.get('password')?.updateValueAndValidity();\n    this.modalService.open(this.userModal, {\n      size: 'lg'\n    });\n  }\n  openPackageModal(user) {\n    this.selectedUser = user;\n    this.packageForm.reset();\n    if (user.subscription?.packageId) {\n      this.packageForm.patchValue({\n        packageId: user.subscription.packageId._id,\n        isLifetime: user.subscription.isLifetime,\n        startDate: user.subscription.startDate,\n        customEndDate: user.subscription.endDate\n      });\n    }\n    this.modalService.open(this.packageModal);\n  }\n  saveUser() {\n    if (this.userForm.invalid) return;\n    const userData = this.userForm.value;\n    if (this.selectedUser) {\n      this.userService.updateUser(this.selectedUser._id, userData).subscribe({\n        next: () => {\n          this.toastr.success('Cập nhật người dùng thành công');\n          this.modalService.dismissAll();\n          this.loadUsers();\n        },\n        error: error => {\n          this.toastr.error('Không thể cập nhật người dùng');\n        }\n      });\n    } else {\n      this.userService.createUser(userData).subscribe({\n        next: () => {\n          this.toastr.success('Thêm người dùng thành công');\n          this.modalService.dismissAll();\n          this.loadUsers();\n        },\n        error: error => {\n          this.toastr.error('Không thể thêm người dùng');\n        }\n      });\n    }\n  }\n  assignPackage() {\n    if (!this.selectedUser || this.packageForm.invalid) return;\n    const packageData = this.packageForm.value;\n    this.userService.assignPackage(this.selectedUser._id, packageData).subscribe({\n      next: () => {\n        this.toastr.success('Gán gói dịch vụ thành công');\n        this.modalService.dismissAll();\n        this.loadUsers();\n      },\n      error: error => {\n        this.toastr.error('Không thể gán gói dịch vụ');\n      }\n    });\n  }\n  toggleUserStatus(user) {\n    const userData = {\n      isActive: !user.isActive\n    };\n    this.userService.updateUser(user._id, userData).subscribe({\n      next: () => {\n        user.isActive = !user.isActive;\n        this.toastr.success('Cập nhật trạng thái thành công');\n      },\n      error: error => {\n        this.toastr.error('Không thể cập nhật trạng thái');\n      }\n    });\n  }\n  deleteUser(user) {\n    if (confirm(`Bạn có chắc chắn muốn xóa người dùng ${user.name}?`)) {\n      this.userService.deleteUser(user._id).subscribe({\n        next: () => {\n          this.toastr.success('Xóa người dùng thành công');\n          this.loadUsers();\n        },\n        error: error => {\n          this.toastr.error('Không thể xóa người dùng');\n        }\n      });\n    }\n  }\n};\nUserListComponent = __decorate([Component({\n  selector: 'app-user-list',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule],\n  template: `\n    <div class=\"container-fluid p-4\">\n      <!-- Header Section -->\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <h1 class=\"h3 mb-0 text-gray-800\">\n          <i class=\"fas fa-users me-2\"></i>Quản lý người dùng\n        </h1>\n        <button class=\"btn btn-primary\" (click)=\"openUserModal()\">\n          <i class=\"fas fa-plus me-2\"></i>Thêm người dùng\n        </button>\n      </div>\n\n      <!-- Search and Filter Section -->\n      <div class=\"card shadow mb-4\">\n        <div class=\"card-body\">\n          <div class=\"row g-3\">\n            <div class=\"col-md-4\">\n              <input \n                type=\"text\" \n                class=\"form-control\" \n                placeholder=\"Tìm kiếm theo tên hoặc email...\"\n                [(ngModel)]=\"searchTerm\"\n                (ngModelChange)=\"onSearch()\">\n            </div>\n            <div class=\"col-md-3\">\n              <select class=\"form-select\" [(ngModel)]=\"selectedRole\" (change)=\"loadUsers()\">\n                <option value=\"\">Tất cả vai trò</option>\n                <option value=\"user\">Người dùng</option>\n                <option value=\"admin\">Quản trị viên</option>\n              </select>\n            </div>\n            <div class=\"col-md-3\">\n              <select class=\"form-select\" [(ngModel)]=\"selectedStatus\" (change)=\"loadUsers()\">\n                <option value=\"\">Tất cả trạng thái</option>\n                <option value=\"true\">Đang hoạt động</option>\n                <option value=\"false\">Đã khóa</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Users Table -->\n      <div class=\"card shadow\">\n        <div class=\"card-body\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th>Tên</th>\n                  <th>Email</th>\n                  <th>Vai trò</th>\n                  <th>Gói dịch vụ</th>\n                  <th>Trạng thái</th>\n                  <th>Ngày tạo</th>\n                  <th>Thao tác</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let user of users\">\n                  <td>\n                    <div class=\"d-flex align-items-center\">\n                      <img \n                        [src]=\"user.avatar || 'assets/images/default-avatar.png'\" \n                        class=\"rounded-circle me-2\"\n                        width=\"40\"\n                        height=\"40\"\n                        [alt]=\"user.name\">\n                      {{ user.name }}\n                    </div>\n                  </td>\n                  <td>{{ user.email }}</td>\n                  <td>\n                    <span [class]=\"'badge ' + (user.role === 'admin' ? 'bg-danger' : 'bg-primary')\">\n                      {{ user.role === 'admin' ? 'Quản trị viên' : 'Người dùng' }}\n                    </span>\n                  </td>\n                  <td>\n                    <span *ngIf=\"user.subscription?.packageId\">\n                      {{ user.subscription.packageId.name }}\n                      <small class=\"d-block text-muted\">\n                        {{ user.subscription.isLifetime ? 'Vĩnh viễn' : \n                           (user.subscription.endDate | date:'dd/MM/yyyy') }}\n                      </small>\n                    </span>\n                    <span *ngIf=\"!user.subscription?.packageId\" class=\"text-muted\">\n                      Chưa có gói\n                    </span>\n                  </td>\n                  <td>\n                    <div class=\"form-check form-switch\">\n                      <input \n                        class=\"form-check-input\" \n                        type=\"checkbox\"\n                        [checked]=\"user.isActive\"\n                        (change)=\"toggleUserStatus(user)\">\n                    </div>\n                  </td>\n                  <td>{{ user.createdAt | date:'dd/MM/yyyy' }}</td>\n                  <td>\n                    <div class=\"btn-group\">\n                      <button \n                        class=\"btn btn-sm btn-outline-primary\" \n                        (click)=\"openUserModal(user)\">\n                        <i class=\"fas fa-edit\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-danger\" \n                        (click)=\"deleteUser(user)\">\n                        <i class=\"fas fa-trash\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-success\" \n                        (click)=\"openPackageModal(user)\">\n                        <i class=\"fas fa-box\"></i>\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Pagination -->\n          <div class=\"d-flex justify-content-between align-items-center mt-3\">\n            <div>\n              Hiển thị {{ (currentPage - 1) * pageSize + 1 }} - \n              {{ Math.min(currentPage * pageSize, totalItems) }} \n              trên {{ totalItems }} kết quả\n            </div>\n            <ngb-pagination\n              [collectionSize]=\"totalItems\"\n              [(page)]=\"currentPage\"\n              [pageSize]=\"pageSize\"\n              (pageChange)=\"loadUsers()\"\n              [maxSize]=\"5\"\n              [rotate]=\"true\"\n              [boundaryLinks]=\"true\">\n            </ngb-pagination>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- User Modal Template -->\n    <ng-template #userModal let-modal>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">{{ selectedUser ? 'Cập nhật người dùng' : 'Thêm người dùng mới' }}</h4>\n        <button type=\"button\" class=\"btn-close\" (click)=\"modal.dismiss()\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"userForm\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Họ và tên</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n            <div class=\"text-danger\" *ngIf=\"userForm.get('name')?.touched && userForm.get('name')?.invalid\">\n              Vui lòng nhập họ và tên\n            </div>\n          </div>\n          \n          <div class=\"mb-3\">\n            <label class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n            <div class=\"text-danger\" *ngIf=\"userForm.get('email')?.touched && userForm.get('email')?.invalid\">\n              Email không hợp lệ\n            </div>\n          </div>\n\n          <div class=\"mb-3\" *ngIf=\"!selectedUser\">\n            <label class=\"form-label\">Mật khẩu</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n            <div class=\"text-danger\" *ngIf=\"userForm.get('password')?.touched && userForm.get('password')?.invalid\">\n              Mật khẩu phải có ít nhất 6 ký tự\n            </div>\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Số điện thoại</label>\n            <input type=\"tel\" class=\"form-control\" formControlName=\"phone\">\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Vai trò</label>\n            <select class=\"form-select\" formControlName=\"role\">\n              <option value=\"user\">Người dùng</option>\n              <option value=\"admin\">Quản trị viên</option>\n            </select>\n          </div>\n\n          <div class=\"form-check mb-3\">\n            <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"isActive\">\n            <label class=\"form-check-label\">Kích hoạt tài khoản</label>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.dismiss()\">Hủy</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveUser()\" [disabled]=\"userForm.invalid\">\n          {{ selectedUser ? 'Cập nhật' : 'Thêm mới' }}\n        </button>\n      </div>\n    </ng-template>\n\n    <!-- Package Modal Template -->\n    <ng-template #packageModal let-modal>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Gán gói dịch vụ</h4>\n        <button type=\"button\" class=\"btn-close\" (click)=\"modal.dismiss()\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"packageForm\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Chọn gói</label>\n            <select class=\"form-select\" formControlName=\"packageId\">\n              <option value=\"\">-- Chọn gói --</option>\n              <option *ngFor=\"let pkg of packages\" [value]=\"pkg._id\">\n                {{ pkg.name }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Ngày bắt đầu</label>\n            <input type=\"date\" class=\"form-control\" formControlName=\"startDate\">\n          </div>\n\n          <div class=\"form-check mb-3\">\n            <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"isLifetime\">\n            <label class=\"form-check-label\">Gói vĩnh viễn</label>\n          </div>\n\n          <div class=\"mb-3\" *ngIf=\"!packageForm.get('isLifetime')?.value\">\n            <label class=\"form-label\">Ngày kết thúc</label>\n            <input type=\"date\" class=\"form-control\" formControlName=\"customEndDate\">\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.dismiss()\">Hủy</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"assignPackage()\" [disabled]=\"packageForm.invalid\">\n          Xác nhận\n        </button>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    :host {\n      display: block;\n      background-color: #f8f9fc;\n      min-height: 100vh;\n    }\n\n    .card {\n      border: none;\n      box-shadow: 0 0.15rem 1.75rem 0 rgb(58 59 69 / 15%);\n    }\n\n    .table th {\n      font-weight: 600;\n      background-color: #f8f9fc;\n      border-bottom: 2px solid #e3e6f0;\n    }\n\n    .table td {\n      vertical-align: middle;\n    }\n\n    .btn-group .btn {\n      padding: 0.25rem 0.5rem;\n      margin: 0 0.1rem;\n    }\n\n    .form-switch .form-check-input {\n      width: 2.5em;\n    }\n\n    .badge {\n      padding: 0.5em 0.8em;\n    }\n  `]\n})], UserListComponent);\nexport { UserListComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","ReactiveFormsModule","Validators","NgbModule","UserListComponent","constructor","userService","modalService","fb","toastr","users","totalItems","currentPage","pageSize","searchTerm","selectedRole","selectedStatus","selectedUser","packages","Math","initForms","ngOnInit","loadUsers","userForm","group","name","required","email","password","minLength","phone","role","isActive","packageForm","packageId","startDate","isLifetime","customEndDate","getUsers","subscribe","next","response","data","total","error","onSearch","openUserModal","user","patchValue","get","clearValidators","reset","setValidators","updateValueAndValidity","open","userModal","size","openPackageModal","subscription","_id","endDate","packageModal","saveUser","invalid","userData","value","updateUser","success","dismissAll","createUser","assignPackage","packageData","toggleUserStatus","deleteUser","confirm","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\winni\\OneDrive\\Desktop\\JINZ-Media-Full-Source\\frontend\\src\\app\\features\\user-management\\user-list\\user-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { User, UserResponse, UserCreateUpdate } from '../models/user.model';\nimport { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-user-list',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, NgbModule],\n  template: `\n    <div class=\"container-fluid p-4\">\n      <!-- Header Section -->\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <h1 class=\"h3 mb-0 text-gray-800\">\n          <i class=\"fas fa-users me-2\"></i>Quản lý người dùng\n        </h1>\n        <button class=\"btn btn-primary\" (click)=\"openUserModal()\">\n          <i class=\"fas fa-plus me-2\"></i>Thêm người dùng\n        </button>\n      </div>\n\n      <!-- Search and Filter Section -->\n      <div class=\"card shadow mb-4\">\n        <div class=\"card-body\">\n          <div class=\"row g-3\">\n            <div class=\"col-md-4\">\n              <input \n                type=\"text\" \n                class=\"form-control\" \n                placeholder=\"Tìm kiếm theo tên hoặc email...\"\n                [(ngModel)]=\"searchTerm\"\n                (ngModelChange)=\"onSearch()\">\n            </div>\n            <div class=\"col-md-3\">\n              <select class=\"form-select\" [(ngModel)]=\"selectedRole\" (change)=\"loadUsers()\">\n                <option value=\"\">Tất cả vai trò</option>\n                <option value=\"user\">Người dùng</option>\n                <option value=\"admin\">Quản trị viên</option>\n              </select>\n            </div>\n            <div class=\"col-md-3\">\n              <select class=\"form-select\" [(ngModel)]=\"selectedStatus\" (change)=\"loadUsers()\">\n                <option value=\"\">Tất cả trạng thái</option>\n                <option value=\"true\">Đang hoạt động</option>\n                <option value=\"false\">Đã khóa</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Users Table -->\n      <div class=\"card shadow\">\n        <div class=\"card-body\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-hover\">\n              <thead>\n                <tr>\n                  <th>Tên</th>\n                  <th>Email</th>\n                  <th>Vai trò</th>\n                  <th>Gói dịch vụ</th>\n                  <th>Trạng thái</th>\n                  <th>Ngày tạo</th>\n                  <th>Thao tác</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let user of users\">\n                  <td>\n                    <div class=\"d-flex align-items-center\">\n                      <img \n                        [src]=\"user.avatar || 'assets/images/default-avatar.png'\" \n                        class=\"rounded-circle me-2\"\n                        width=\"40\"\n                        height=\"40\"\n                        [alt]=\"user.name\">\n                      {{ user.name }}\n                    </div>\n                  </td>\n                  <td>{{ user.email }}</td>\n                  <td>\n                    <span [class]=\"'badge ' + (user.role === 'admin' ? 'bg-danger' : 'bg-primary')\">\n                      {{ user.role === 'admin' ? 'Quản trị viên' : 'Người dùng' }}\n                    </span>\n                  </td>\n                  <td>\n                    <span *ngIf=\"user.subscription?.packageId\">\n                      {{ user.subscription.packageId.name }}\n                      <small class=\"d-block text-muted\">\n                        {{ user.subscription.isLifetime ? 'Vĩnh viễn' : \n                           (user.subscription.endDate | date:'dd/MM/yyyy') }}\n                      </small>\n                    </span>\n                    <span *ngIf=\"!user.subscription?.packageId\" class=\"text-muted\">\n                      Chưa có gói\n                    </span>\n                  </td>\n                  <td>\n                    <div class=\"form-check form-switch\">\n                      <input \n                        class=\"form-check-input\" \n                        type=\"checkbox\"\n                        [checked]=\"user.isActive\"\n                        (change)=\"toggleUserStatus(user)\">\n                    </div>\n                  </td>\n                  <td>{{ user.createdAt | date:'dd/MM/yyyy' }}</td>\n                  <td>\n                    <div class=\"btn-group\">\n                      <button \n                        class=\"btn btn-sm btn-outline-primary\" \n                        (click)=\"openUserModal(user)\">\n                        <i class=\"fas fa-edit\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-danger\" \n                        (click)=\"deleteUser(user)\">\n                        <i class=\"fas fa-trash\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-success\" \n                        (click)=\"openPackageModal(user)\">\n                        <i class=\"fas fa-box\"></i>\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Pagination -->\n          <div class=\"d-flex justify-content-between align-items-center mt-3\">\n            <div>\n              Hiển thị {{ (currentPage - 1) * pageSize + 1 }} - \n              {{ Math.min(currentPage * pageSize, totalItems) }} \n              trên {{ totalItems }} kết quả\n            </div>\n            <ngb-pagination\n              [collectionSize]=\"totalItems\"\n              [(page)]=\"currentPage\"\n              [pageSize]=\"pageSize\"\n              (pageChange)=\"loadUsers()\"\n              [maxSize]=\"5\"\n              [rotate]=\"true\"\n              [boundaryLinks]=\"true\">\n            </ngb-pagination>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- User Modal Template -->\n    <ng-template #userModal let-modal>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">{{ selectedUser ? 'Cập nhật người dùng' : 'Thêm người dùng mới' }}</h4>\n        <button type=\"button\" class=\"btn-close\" (click)=\"modal.dismiss()\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"userForm\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Họ và tên</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n            <div class=\"text-danger\" *ngIf=\"userForm.get('name')?.touched && userForm.get('name')?.invalid\">\n              Vui lòng nhập họ và tên\n            </div>\n          </div>\n          \n          <div class=\"mb-3\">\n            <label class=\"form-label\">Email</label>\n            <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n            <div class=\"text-danger\" *ngIf=\"userForm.get('email')?.touched && userForm.get('email')?.invalid\">\n              Email không hợp lệ\n            </div>\n          </div>\n\n          <div class=\"mb-3\" *ngIf=\"!selectedUser\">\n            <label class=\"form-label\">Mật khẩu</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n            <div class=\"text-danger\" *ngIf=\"userForm.get('password')?.touched && userForm.get('password')?.invalid\">\n              Mật khẩu phải có ít nhất 6 ký tự\n            </div>\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Số điện thoại</label>\n            <input type=\"tel\" class=\"form-control\" formControlName=\"phone\">\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Vai trò</label>\n            <select class=\"form-select\" formControlName=\"role\">\n              <option value=\"user\">Người dùng</option>\n              <option value=\"admin\">Quản trị viên</option>\n            </select>\n          </div>\n\n          <div class=\"form-check mb-3\">\n            <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"isActive\">\n            <label class=\"form-check-label\">Kích hoạt tài khoản</label>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.dismiss()\">Hủy</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveUser()\" [disabled]=\"userForm.invalid\">\n          {{ selectedUser ? 'Cập nhật' : 'Thêm mới' }}\n        </button>\n      </div>\n    </ng-template>\n\n    <!-- Package Modal Template -->\n    <ng-template #packageModal let-modal>\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Gán gói dịch vụ</h4>\n        <button type=\"button\" class=\"btn-close\" (click)=\"modal.dismiss()\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form [formGroup]=\"packageForm\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Chọn gói</label>\n            <select class=\"form-select\" formControlName=\"packageId\">\n              <option value=\"\">-- Chọn gói --</option>\n              <option *ngFor=\"let pkg of packages\" [value]=\"pkg._id\">\n                {{ pkg.name }}\n              </option>\n            </select>\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Ngày bắt đầu</label>\n            <input type=\"date\" class=\"form-control\" formControlName=\"startDate\">\n          </div>\n\n          <div class=\"form-check mb-3\">\n            <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"isLifetime\">\n            <label class=\"form-check-label\">Gói vĩnh viễn</label>\n          </div>\n\n          <div class=\"mb-3\" *ngIf=\"!packageForm.get('isLifetime')?.value\">\n            <label class=\"form-label\">Ngày kết thúc</label>\n            <input type=\"date\" class=\"form-control\" formControlName=\"customEndDate\">\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.dismiss()\">Hủy</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"assignPackage()\" [disabled]=\"packageForm.invalid\">\n          Xác nhận\n        </button>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    :host {\n      display: block;\n      background-color: #f8f9fc;\n      min-height: 100vh;\n    }\n\n    .card {\n      border: none;\n      box-shadow: 0 0.15rem 1.75rem 0 rgb(58 59 69 / 15%);\n    }\n\n    .table th {\n      font-weight: 600;\n      background-color: #f8f9fc;\n      border-bottom: 2px solid #e3e6f0;\n    }\n\n    .table td {\n      vertical-align: middle;\n    }\n\n    .btn-group .btn {\n      padding: 0.25rem 0.5rem;\n      margin: 0 0.1rem;\n    }\n\n    .form-switch .form-check-input {\n      width: 2.5em;\n    }\n\n    .badge {\n      padding: 0.5em 0.8em;\n    }\n  `]\n})\nexport class UserListComponent implements OnInit {\n  users: User[] = [];\n  totalItems = 0;\n  currentPage = 1;\n  pageSize = 10;\n  searchTerm = '';\n  selectedRole = '';\n  selectedStatus = '';\n  selectedUser: User | null = null;\n  packages: any[] = []; // You'll need to fetch this from your package service\n  userForm: FormGroup;\n  packageForm: FormGroup;\n  Math = Math;\n\n  constructor(\n    private userService: UserService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private toastr: ToastrService\n  ) {\n    this.initForms();\n  }\n\n  ngOnInit() {\n    this.loadUsers();\n    // Load packages here from your package service\n  }\n\n  private initForms() {\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.minLength(6)]],\n      phone: [''],\n      role: ['user'],\n      isActive: [true]\n    });\n\n    this.packageForm = this.fb.group({\n      packageId: ['', Validators.required],\n      startDate: ['', Validators.required],\n      isLifetime: [false],\n      customEndDate: ['']\n    });\n  }\n\n  loadUsers() {\n    this.userService.getUsers(this.currentPage, this.pageSize).subscribe({\n      next: (response: UserResponse) => {\n        this.users = response.data;\n        this.totalItems = response.total;\n      },\n      error: (error) => {\n        this.toastr.error('Không thể tải danh sách người dùng');\n      }\n    });\n  }\n\n  onSearch() {\n    // Implement search logic here\n    this.currentPage = 1;\n    this.loadUsers();\n  }\n\n  openUserModal(user?: User) {\n    this.selectedUser = user || null;\n    if (user) {\n      this.userForm.patchValue({\n        name: user.name,\n        email: user.email,\n        phone: user.phone,\n        role: user.role,\n        isActive: user.isActive\n      });\n      this.userForm.get('password')?.clearValidators();\n    } else {\n      this.userForm.reset({ role: 'user', isActive: true });\n      this.userForm.get('password')?.setValidators([Validators.required, Validators.minLength(6)]);\n    }\n    this.userForm.get('password')?.updateValueAndValidity();\n    this.modalService.open(this.userModal, { size: 'lg' });\n  }\n\n  openPackageModal(user: User) {\n    this.selectedUser = user;\n    this.packageForm.reset();\n    if (user.subscription?.packageId) {\n      this.packageForm.patchValue({\n        packageId: user.subscription.packageId._id,\n        isLifetime: user.subscription.isLifetime,\n        startDate: user.subscription.startDate,\n        customEndDate: user.subscription.endDate\n      });\n    }\n    this.modalService.open(this.packageModal);\n  }\n\n  saveUser() {\n    if (this.userForm.invalid) return;\n\n    const userData: UserCreateUpdate = this.userForm.value;\n    \n    if (this.selectedUser) {\n      this.userService.updateUser(this.selectedUser._id, userData).subscribe({\n        next: () => {\n          this.toastr.success('Cập nhật người dùng thành công');\n          this.modalService.dismissAll();\n          this.loadUsers();\n        },\n        error: (error) => {\n          this.toastr.error('Không thể cập nhật người dùng');\n        }\n      });\n    } else {\n      this.userService.createUser(userData).subscribe({\n        next: () => {\n          this.toastr.success('Thêm người dùng thành công');\n          this.modalService.dismissAll();\n          this.loadUsers();\n        },\n        error: (error) => {\n          this.toastr.error('Không thể thêm người dùng');\n        }\n      });\n    }\n  }\n\n  assignPackage() {\n    if (!this.selectedUser || this.packageForm.invalid) return;\n\n    const packageData = this.packageForm.value;\n    this.userService.assignPackage(this.selectedUser._id, packageData).subscribe({\n      next: () => {\n        this.toastr.success('Gán gói dịch vụ thành công');\n        this.modalService.dismissAll();\n        this.loadUsers();\n      },\n      error: (error) => {\n        this.toastr.error('Không thể gán gói dịch vụ');\n      }\n    });\n  }\n\n  toggleUserStatus(user: User) {\n    const userData = { isActive: !user.isActive };\n    this.userService.updateUser(user._id, userData).subscribe({\n      next: () => {\n        user.isActive = !user.isActive;\n        this.toastr.success('Cập nhật trạng thái thành công');\n      },\n      error: (error) => {\n        this.toastr.error('Không thể cập nhật trạng thái');\n      }\n    });\n  }\n\n  deleteUser(user: User) {\n    if (confirm(`Bạn có chắc chắn muốn xóa người dùng ${user.name}?`)) {\n      this.userService.deleteUser(user._id).subscribe({\n        next: () => {\n          this.toastr.success('Xóa người dùng thành công');\n          this.loadUsers();\n        },\n        error: (error) => {\n          this.toastr.error('Không thể xóa người dùng');\n        }\n      });\n    }\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}