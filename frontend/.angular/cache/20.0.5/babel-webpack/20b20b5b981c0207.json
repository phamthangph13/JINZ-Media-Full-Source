{"ast":null,"code":"import { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/api/admin/users`;\n  }\n  getUsers(page = 1, limit = 10) {\n    return this.http.get(`${this.apiUrl}?page=${page}&limit=${limit}`);\n  }\n  getUser(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createUser(userData) {\n    return this.http.post(this.apiUrl, userData);\n  }\n  updateUser(id, userData) {\n    return this.http.put(`${this.apiUrl}/${id}`, userData);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  assignPackage(userId, packageData) {\n    return this.http.post(`${this.apiUrl}/${userId}/assign-package`, packageData);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","UserService","constructor","http","apiUrl","getUsers","page","limit","get","getUser","id","createUser","userData","post","updateUser","put","deleteUser","delete","assignPackage","userId","packageData","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\winni\\OneDrive\\Desktop\\JINZ-Media-Full-Source\\frontend\\src\\app\\features\\user-management\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nexport interface User {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n  isActive: boolean;\r\n  subscription: {\r\n    packageId: any;\r\n    isActive: boolean;\r\n    isLifetime: boolean;\r\n    startDate: Date;\r\n    endDate: Date;\r\n  };\r\n  lastLogin: Date;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface UserResponse {\r\n  success: boolean;\r\n  count: number;\r\n  total: number;\r\n  pagination: {\r\n    next?: {\r\n      page: number;\r\n      limit: number;\r\n    };\r\n    prev?: {\r\n      page: number;\r\n      limit: number;\r\n    };\r\n  };\r\n  data: User[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = `${environment.apiUrl}/api/admin/users`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(page: number = 1, limit: number = 10): Observable<UserResponse> {\r\n    return this.http.get<UserResponse>(`${this.apiUrl}?page=${page}&limit=${limit}`);\r\n  }\r\n\r\n  getUser(id: string): Observable<{success: boolean; data: User}> {\r\n    return this.http.get<{success: boolean; data: User}>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createUser(userData: Partial<User>): Observable<{success: boolean; data: User}> {\r\n    return this.http.post<{success: boolean; data: User}>(this.apiUrl, userData);\r\n  }\r\n\r\n  updateUser(id: string, userData: Partial<User>): Observable<{success: boolean; data: User}> {\r\n    return this.http.put<{success: boolean; data: User}>(`${this.apiUrl}/${id}`, userData);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<{success: boolean; data: {}}> {\r\n    return this.http.delete<{success: boolean; data: {}}>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  assignPackage(userId: string, packageData: {\r\n    packageId: string;\r\n    startDate: Date;\r\n    customEndDate?: Date;\r\n  }): Observable<{success: boolean; data: User}> {\r\n    return this.http.post<{success: boolean; data: User}>(\r\n      `${this.apiUrl}/${userId}/assign-package`,\r\n      packageData\r\n    );\r\n  }\r\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,sCAAsC;;;AAuClE,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,kBAAkB;EAEjB;EAEvCC,QAAQA,CAACC,IAAA,GAAe,CAAC,EAAEC,KAAA,GAAgB,EAAE;IAC3C,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAe,GAAG,IAAI,CAACJ,MAAM,SAASE,IAAI,UAAUC,KAAK,EAAE,CAAC;EAClF;EAEAE,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAiC,GAAG,IAAI,CAACJ,MAAM,IAAIM,EAAE,EAAE,CAAC;EAC9E;EAEAC,UAAUA,CAACC,QAAuB;IAChC,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAiC,IAAI,CAACT,MAAM,EAAEQ,QAAQ,CAAC;EAC9E;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,QAAuB;IAC5C,OAAO,IAAI,CAACT,IAAI,CAACY,GAAG,CAAiC,GAAG,IAAI,CAACX,MAAM,IAAIM,EAAE,EAAE,EAAEE,QAAQ,CAAC;EACxF;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACP,IAAI,CAACc,MAAM,CAA+B,GAAG,IAAI,CAACb,MAAM,IAAIM,EAAE,EAAE,CAAC;EAC/E;EAEAQ,aAAaA,CAACC,MAAc,EAAEC,WAI7B;IACC,OAAO,IAAI,CAACjB,IAAI,CAACU,IAAI,CACnB,GAAG,IAAI,CAACT,MAAM,IAAIe,MAAM,iBAAiB,EACzCC,WAAW,CACZ;EACH;EAAC,QAAAC,CAAA,G;qCAlCUpB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXzB,WAAW;IAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}