{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../../../environments/environment';\nimport { SERVICE_TYPES } from '../models/service.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/admin/services`;\n  }\n  // Get all services\n  getServices() {\n    return this.http.get(this.apiUrl).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  // Get single service by ID\n  getService(id) {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  // Create new service\n  createService(serviceData) {\n    const formData = this.createFormData(serviceData);\n    return this.http.post(this.apiUrl, formData).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  // Update service\n  updateService(id, serviceData) {\n    const formData = this.createFormData(serviceData);\n    return this.http.put(`${this.apiUrl}/${id}`, formData).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  // Delete service\n  deleteService(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n  // Toggle service status\n  toggleServiceStatus(id) {\n    return this.http.patch(`${this.apiUrl}/${id}/toggle-status`, {}).pipe(map(response => response.data), catchError(this.handleError));\n  }\n  // Helper method to create FormData for file uploads\n  createFormData(data) {\n    const formData = new FormData();\n    // Add basic fields\n    if (data.name) formData.append('name', data.name);\n    if (data.description) formData.append('description', data.description);\n    if (data.type) formData.append('type', data.type);\n    if (data.category) formData.append('category', data.category);\n    if (data.permission) formData.append('permission', data.permission);\n    if (data.isActive !== undefined) formData.append('isActive', data.isActive.toString());\n    // Add metadata if present\n    if (data.metadata) {\n      Object.keys(data.metadata).forEach(key => {\n        if (data.metadata[key]) {\n          formData.append(`metadata[${key}]`, data.metadata[key]);\n        }\n      });\n    }\n    // Add image file if present\n    if (data.image && data.image instanceof File) {\n      formData.append('image', data.image);\n    }\n    // Add tutorial video file if present\n    if (data.tutorialVideo && data.tutorialVideo instanceof File) {\n      formData.append('tutorialVideo', data.tutorialVideo);\n    }\n    return formData;\n  }\n  // Error handling\n  handleError(error) {\n    let errorMessage = 'Đã xảy ra lỗi không xác định';\n    if (error.error) {\n      if (error.error.message) {\n        errorMessage = error.error.message;\n      } else if (typeof error.error === 'string') {\n        errorMessage = error.error;\n      }\n    } else if (error.message) {\n      errorMessage = error.message;\n    }\n    console.error('Service Service Error:', error);\n    return throwError(() => new Error(errorMessage));\n  }\n  // Format service type for display\n  formatServiceType(type) {\n    const serviceType = SERVICE_TYPES.find(t => t.value === type);\n    return serviceType ? serviceType.label : type;\n  }\n  // Get service type color\n  getServiceTypeColor(type) {\n    const serviceType = SERVICE_TYPES.find(t => t.value === type);\n    return serviceType ? serviceType.color : '#6c757d';\n  }\n  // Format file size for display\n  formatFileSize(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n  // Check if file is valid image\n  isValidImageFile(file) {\n    const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\n    return validTypes.includes(file.type) && file.size <= 5 * 1024 * 1024; // 5MB limit\n  }\n  // Check if file is valid video\n  isValidVideoFile(file) {\n    const validTypes = ['video/mp4', 'video/avi', 'video/mov', 'video/wmv', 'video/webm'];\n    return validTypes.includes(file.type) && file.size <= 100 * 1024 * 1024; // 100MB limit\n  }\n  // Get file URL for display\n  getFileUrl(filePath) {\n    if (!filePath) return '';\n    return `http://localhost:5000/${filePath}`;\n  }\n  static #_ = this.ɵfac = function ServiceService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServiceService,\n    factory: ServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["throwError","catchError","map","environment","SERVICE_TYPES","ServiceService","constructor","http","apiUrl","getServices","get","pipe","response","data","handleError","getService","id","createService","serviceData","formData","createFormData","post","updateService","put","deleteService","delete","toggleServiceStatus","patch","FormData","name","append","description","type","category","permission","isActive","undefined","toString","metadata","Object","keys","forEach","key","image","File","tutorialVideo","error","errorMessage","message","console","Error","formatServiceType","serviceType","find","t","value","label","getServiceTypeColor","color","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","isValidImageFile","file","validTypes","includes","size","isValidVideoFile","getFileUrl","filePath","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\winni\\OneDrive\\Desktop\\JINZ-Media-Full-Source\\frontend\\src\\app\\features\\feature-management\\services\\service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { \r\n  Service, \r\n  CreateServiceRequest, \r\n  UpdateServiceRequest, \r\n  ServicesResponse, \r\n  ServiceResponse, \r\n  ApiResponse,\r\n  SERVICE_TYPES \r\n} from '../models/service.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceService {\r\n  private apiUrl = `${environment.apiUrl}/admin/services`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Get all services\r\n  getServices(): Observable<Service[]> {\r\n    return this.http.get<ServicesResponse>(this.apiUrl).pipe(\r\n      map(response => response.data),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Get single service by ID\r\n  getService(id: string): Observable<Service> {\r\n    return this.http.get<ServiceResponse>(`${this.apiUrl}/${id}`).pipe(\r\n      map(response => response.data),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Create new service\r\n  createService(serviceData: CreateServiceRequest): Observable<Service> {\r\n    const formData = this.createFormData(serviceData);\r\n    \r\n    return this.http.post<ServiceResponse>(this.apiUrl, formData).pipe(\r\n      map(response => response.data),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Update service\r\n  updateService(id: string, serviceData: UpdateServiceRequest): Observable<Service> {\r\n    const formData = this.createFormData(serviceData);\r\n    \r\n    return this.http.put<ServiceResponse>(`${this.apiUrl}/${id}`, formData).pipe(\r\n      map(response => response.data),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Delete service\r\n  deleteService(id: string): Observable<ApiResponse> {\r\n    return this.http.delete<ApiResponse>(`${this.apiUrl}/${id}`).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Toggle service status\r\n  toggleServiceStatus(id: string): Observable<Service> {\r\n    return this.http.patch<ServiceResponse>(`${this.apiUrl}/${id}/toggle-status`, {}).pipe(\r\n      map(response => response.data),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Helper method to create FormData for file uploads\r\n  private createFormData(data: CreateServiceRequest | UpdateServiceRequest): FormData {\r\n    const formData = new FormData();\r\n\r\n    // Add basic fields\r\n    if (data.name) formData.append('name', data.name);\r\n    if (data.description) formData.append('description', data.description);\r\n    if (data.type) formData.append('type', data.type);\r\n    if (data.category) formData.append('category', data.category);\r\n    if (data.permission) formData.append('permission', data.permission);\r\n    if (data.isActive !== undefined) formData.append('isActive', data.isActive.toString());\r\n\r\n    // Add metadata if present\r\n    if (data.metadata) {\r\n      Object.keys(data.metadata).forEach(key => {\r\n        if (data.metadata![key]) {\r\n          formData.append(`metadata[${key}]`, data.metadata![key]);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add image file if present\r\n    if (data.image && data.image instanceof File) {\r\n      formData.append('image', data.image);\r\n    }\r\n\r\n    // Add tutorial video file if present\r\n    if (data.tutorialVideo && data.tutorialVideo instanceof File) {\r\n      formData.append('tutorialVideo', data.tutorialVideo);\r\n    }\r\n\r\n    return formData;\r\n  }\r\n\r\n  // Error handling\r\n  private handleError(error: any): Observable<never> {\r\n    let errorMessage = 'Đã xảy ra lỗi không xác định';\r\n    \r\n    if (error.error) {\r\n      if (error.error.message) {\r\n        errorMessage = error.error.message;\r\n      } else if (typeof error.error === 'string') {\r\n        errorMessage = error.error;\r\n      }\r\n    } else if (error.message) {\r\n      errorMessage = error.message;\r\n    }\r\n\r\n    console.error('Service Service Error:', error);\r\n    return throwError(() => new Error(errorMessage));\r\n  }\r\n\r\n  // Format service type for display\r\n  formatServiceType(type: string): string {\r\n    const serviceType = SERVICE_TYPES.find(t => t.value === type);\r\n    return serviceType ? serviceType.label : type;\r\n  }\r\n\r\n  // Get service type color\r\n  getServiceTypeColor(type: string): string {\r\n    const serviceType = SERVICE_TYPES.find(t => t.value === type);\r\n    return serviceType ? serviceType.color : '#6c757d';\r\n  }\r\n\r\n  // Format file size for display\r\n  formatFileSize(bytes: number): string {\r\n    if (bytes === 0) return '0 Bytes';\r\n    \r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    \r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  // Check if file is valid image\r\n  isValidImageFile(file: File): boolean {\r\n    const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];\r\n    return validTypes.includes(file.type) && file.size <= 5 * 1024 * 1024; // 5MB limit\r\n  }\r\n\r\n  // Check if file is valid video\r\n  isValidVideoFile(file: File): boolean {\r\n    const validTypes = ['video/mp4', 'video/avi', 'video/mov', 'video/wmv', 'video/webm'];\r\n    return validTypes.includes(file.type) && file.size <= 100 * 1024 * 1024; // 100MB limit\r\n  }\r\n\r\n  // Get file URL for display\r\n  getFileUrl(filePath?: string): string {\r\n    if (!filePath) return '';\r\n    return `http://localhost:5000/${filePath}`;\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}