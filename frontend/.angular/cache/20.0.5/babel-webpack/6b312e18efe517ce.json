{"ast":null,"code":"import { importProvidersFrom, inject } from '@angular/core';\nimport { provideRouter, Router } from '@angular/router';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AuthService } from './core/services/auth.service';\nimport { catchError, throwError } from 'rxjs';\nimport { routes } from './app.routes';\n// Functional Auth Interceptor\nexport const authInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  // Get token from auth service\n  const token = authService.getToken();\n  // Clone the request and add the authorization header if token exists\n  if (token) {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  // Handle the request and catch errors\n  return next(req).pipe(catchError(error => {\n    if (error.status === 401) {\n      // Token expired or invalid, logout user\n      authService.logout();\n      router.navigate(['/auth']);\n    }\n    return throwError(() => error);\n  }));\n};\nexport const appConfig = {\n  providers: [provideRouter(routes), provideAnimationsAsync(), provideHttpClient(withInterceptors([authInterceptor])), importProvidersFrom(BrowserAnimationsModule, ToastrModule.forRoot({\n    timeOut: 3000,\n    positionClass: 'toast-top-right',\n    preventDuplicates: true,\n    progressBar: true\n  }))]\n};","map":{"version":3,"names":["importProvidersFrom","inject","provideRouter","Router","provideAnimationsAsync","provideHttpClient","withInterceptors","BrowserAnimationsModule","ToastrModule","AuthService","catchError","throwError","routes","authInterceptor","req","next","authService","router","token","getToken","clone","setHeaders","Authorization","pipe","error","status","logout","navigate","appConfig","providers","forRoot","timeOut","positionClass","preventDuplicates","progressBar"],"sources":["C:\\Users\\winni\\OneDrive\\Desktop\\JINZ-Media-Full-Source\\frontend\\src\\app\\app.config.ts"],"sourcesContent":["import { ApplicationConfig, importProvidersFrom, inject } from '@angular/core';\r\nimport { provideRouter, Router } from '@angular/router';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\nimport { provideHttpClient, withInterceptors, HttpInterceptorFn } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AuthService } from './core/services/auth.service';\r\nimport { catchError, throwError } from 'rxjs';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { routes } from './app.routes';\r\n\r\n// Functional Auth Interceptor\r\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n  \r\n  // Get token from auth service\r\n  const token = authService.getToken();\r\n  \r\n  // Clone the request and add the authorization header if token exists\r\n  if (token) {\r\n    req = req.clone({\r\n      setHeaders: {\r\n        Authorization: `Bearer ${token}`\r\n      }\r\n    });\r\n  }\r\n\r\n  // Handle the request and catch errors\r\n  return next(req).pipe(\r\n    catchError((error: HttpErrorResponse) => {\r\n      if (error.status === 401) {\r\n        // Token expired or invalid, logout user\r\n        authService.logout();\r\n        router.navigate(['/auth']);\r\n      }\r\n      return throwError(() => error);\r\n    })\r\n  );\r\n};\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideRouter(routes),\r\n    provideAnimationsAsync(),\r\n    provideHttpClient(withInterceptors([authInterceptor])),\r\n    importProvidersFrom(\r\n      BrowserAnimationsModule,\r\n      ToastrModule.forRoot({\r\n        timeOut: 3000,\r\n        positionClass: 'toast-top-right',\r\n        preventDuplicates: true,\r\n        progressBar: true\r\n      })\r\n    )\r\n  ]\r\n}; "],"mappings":"AAAA,SAA4BA,mBAAmB,EAAEC,MAAM,QAAQ,eAAe;AAC9E,SAASC,aAAa,EAAEC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,sBAAsB,QAAQ,4CAA4C;AACnF,SAASC,iBAAiB,EAAEC,gBAAgB,QAA2B,sBAAsB;AAC7F,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,UAAU,EAAEC,UAAU,QAAQ,MAAM;AAG7C,SAASC,MAAM,QAAQ,cAAc;AAErC;AACA,OAAO,MAAMC,eAAe,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EAC9D,MAAMC,WAAW,GAAGf,MAAM,CAACQ,WAAW,CAAC;EACvC,MAAMQ,MAAM,GAAGhB,MAAM,CAACE,MAAM,CAAC;EAE7B;EACA,MAAMe,KAAK,GAAGF,WAAW,CAACG,QAAQ,EAAE;EAEpC;EACA,IAAID,KAAK,EAAE;IACTJ,GAAG,GAAGA,GAAG,CAACM,KAAK,CAAC;MACdC,UAAU,EAAE;QACVC,aAAa,EAAE,UAAUJ,KAAK;;KAEjC,CAAC;EACJ;EAEA;EACA,OAAOH,IAAI,CAACD,GAAG,CAAC,CAACS,IAAI,CACnBb,UAAU,CAAEc,KAAwB,IAAI;IACtC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;MACxB;MACAT,WAAW,CAACU,MAAM,EAAE;MACpBT,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC5B;IACA,OAAOhB,UAAU,CAAC,MAAMa,KAAK,CAAC;EAChC,CAAC,CAAC,CACH;AACH,CAAC;AAED,OAAO,MAAMI,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACT3B,aAAa,CAACU,MAAM,CAAC,EACrBR,sBAAsB,EAAE,EACxBC,iBAAiB,CAACC,gBAAgB,CAAC,CAACO,eAAe,CAAC,CAAC,CAAC,EACtDb,mBAAmB,CACjBO,uBAAuB,EACvBC,YAAY,CAACsB,OAAO,CAAC;IACnBC,OAAO,EAAE,IAAI;IACbC,aAAa,EAAE,iBAAiB;IAChCC,iBAAiB,EAAE,IAAI;IACvBC,WAAW,EAAE;GACd,CAAC,CACH;CAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}