{"ast":null,"code":"import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BYgV4oZC.mjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatRippleLoader } from './ripple-loader-BnMiRtmT.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { k as MatFormFieldControl, h as MAT_FORM_FIELD } from './form-field-CFbrnFED.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChip_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipOption_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 9);\n    i0.ɵɵelement(4, \"path\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\";\nconst _c3 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"\", \"matChipEditInput\", \"\"]], \"*\", [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"mat-chip-avatar, [matChipAvatar]\", \"[matChipEditInput]\", \"*\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipRow_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 0);\n  }\n}\nfunction MatChipRow_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction MatChipRow_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, MatChipRow_Conditional_4_Conditional_0_Template, 1, 0)(1, MatChipRow_Conditional_4_Conditional_1_Template, 1, 0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.contentEditInput ? 0 : 1);\n  }\n}\nfunction MatChipRow_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatChipRow_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵprojection(1, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [\"*\"];\nconst _c6 = \".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    separatorKeyCodes: [ENTER]\n  })\n});\n/**\r\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\r\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\r\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\r\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\r\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\r\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\r\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\r\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\r\n * Section within a chip.\r\n * @docs-private\r\n */\nclass MatChipAction {\n  _elementRef = inject(ElementRef);\n  _parentChip = inject(MAT_CHIP);\n  /** Whether the action is interactive. */\n  isInteractive = true;\n  /** Whether this is the primary action in the chip. */\n  _isPrimary = true;\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip?.disabled || false;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Tab index of the action. */\n  tabIndex = -1;\n  /**\r\n   * Private API to allow focusing this chip when it is disabled.\r\n   */\n  _allowFocusWhenDisabled = false;\n  /**\r\n   * Determine the value of the disabled attribute for this chip action.\r\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n  /**\r\n   * Determine the value of the tabindex attribute for this chip action.\r\n   */\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n      this._elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  static ɵfac = function MatChipAction_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAction)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAction,\n    selectors: [[\"\", \"matChipAction\", \"\"]],\n    hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n    hostVars: 9,\n    hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary);\n      }\n    },\n    inputs: {\n      isInteractive: \"isInteractive\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? -1 : numberAttribute(value)],\n      _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], () => [], {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? -1 : numberAttribute(value)\n      }]\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n  static ɵfac = function MatChipAvatar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAvatar)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAvatar,\n    selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n    hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_AVATAR,\n      useExisting: MatChipAvatar\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }]\n    }]\n  }], null, null);\n})();\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  /**\r\n   * MDC considers all trailing actions as a remove icon,\r\n   * but we support non-interactive trailing icons.\r\n   */\n  isInteractive = false;\n  _isPrimary = false;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipTrailingIcon_BaseFactory;\n    return function MatChipTrailingIcon_Factory(__ngFactoryType__) {\n      return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(__ngFactoryType__ || MatChipTrailingIcon);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipTrailingIcon,\n    selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n    hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_TRAILING_ICON,\n      useExisting: MatChipTrailingIcon\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]\n    }]\n  }], null, null);\n})();\n/**\r\n * Directive to remove the parent chip when the trailing icon is clicked or\r\n * when the ENTER key is pressed on it.\r\n *\r\n * Recommended for use with the Material Design \"cancel\" icon\r\n * available at https://material.io/icons/#ic_cancel.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * <mat-chip>\r\n *   <mat-icon matChipRemove>cancel</mat-icon>\r\n * </mat-chip>\r\n * ```\r\n */\nclass MatChipRemove extends MatChipAction {\n  _isPrimary = false;\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipRemove_BaseFactory;\n    return function MatChipRemove_Factory(__ngFactoryType__) {\n      return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(__ngFactoryType__ || MatChipRemove);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipRemove,\n    selectors: [[\"\", \"matChipRemove\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    hostVars: 1,\n    hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", null);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_REMOVE,\n      useExisting: MatChipRemove\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Material design styled Chip base component. Used inside the MatChipSet component.\r\n *\r\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\r\n */\nclass MatChip {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _tagName = inject(HOST_TAG_NAME);\n  _ngZone = inject(NgZone);\n  _focusMonitor = inject(FocusMonitor);\n  _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n    optional: true\n  });\n  _document = inject(DOCUMENT);\n  /** Emits when the chip is focused. */\n  _onFocus = new Subject();\n  /** Emits when the chip is blurred. */\n  _onBlur = new Subject();\n  /** Whether this chip is a basic (unstyled) chip. */\n  _isBasicChip;\n  /** Role for the root of the chip. */\n  role = null;\n  /** Whether the chip has focus. */\n  _hasFocusInternal = false;\n  /** Whether moving focus into the chip is pending. */\n  _pendingFocus;\n  /** Subscription to changes in the chip's actions. */\n  _actionChanges;\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled = _animationsDisabled();\n  /** All avatars present in the chip. */\n  _allLeadingIcons;\n  /** All trailing icons present in the chip. */\n  _allTrailingIcons;\n  /** All remove icons present in the chip. */\n  _allRemoveIcons;\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n  /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-');\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA label for the content of the chip. */\n  ariaLabel = null;\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA description for the content of the chip. */\n  ariaDescription = null;\n  /** Id of a span that contains this chip's aria description. */\n  _ariaDescriptionId = `${this.id}-aria-description`;\n  /** Whether the chip list is disabled. */\n  _chipListDisabled = false;\n  _textElement;\n  /**\r\n   * The value of the chip. Defaults to the content inside\r\n   * the `mat-mdc-chip-action-label` element.\r\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value;\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\r\n   * Theme color of the chip. This API is supported in M2 themes only, it has no\r\n   * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\r\n   *\r\n   * For information on applying color variants in M3, see\r\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\r\n   */\n  color;\n  /**\r\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\r\n   */\n  removable = true;\n  /**\r\n   * Colors the chip for emphasis as if it were selected.\r\n   */\n  highlighted = false;\n  /** Whether the ripple effect is disabled or not. */\n  disableRipple = false;\n  /** Whether the chip is disabled. */\n  get disabled() {\n    return this._disabled || this._chipListDisabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Emitted when a chip is to be removed. */\n  removed = new EventEmitter();\n  /** Emitted when the chip is destroyed. */\n  destroyed = new EventEmitter();\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip';\n  /** The chip's leading icon. */\n  leadingIcon;\n  /** The chip's trailing icon. */\n  trailingIcon;\n  /** The chip's trailing remove icon. */\n  removeIcon;\n  /** Action receiving the primary set of user interactions. */\n  primaryAction;\n  /**\r\n   * Handles the lazy creation of the MatChip ripple.\r\n   * Used to improve initial load time of large applications.\r\n   */\n  _rippleLoader = inject(MatRippleLoader);\n  _injector = inject(Injector);\n  constructor() {\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    this._monitorFocus();\n    this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n      className: 'mat-mdc-chip-ripple',\n      disabled: this._isRippleDisabled()\n    });\n  }\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    this._isBasicChip = this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) || this._tagName.toLowerCase() === this.basicChipAttrName;\n  }\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  ngDoCheck() {\n    this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n  /**\r\n   * Allows for programmatic removal of the chip.\r\n   *\r\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\r\n   */\n  remove() {\n    if (this.removable) {\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !!this._globalRippleOptions?.disabled;\n  }\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    // Ignore backspace events where the user is holding down the key\n    // so that we don't accidentally remove too many chips.\n    if (event.keyCode === BACKSPACE && !event.repeat || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus to the next item. To work around the issue, we defer marking the chip\n          // as not focused until after the next render.\n          this._changeDetectorRef.markForCheck();\n          setTimeout(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n  static ɵfac = function MatChip_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChip)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChip,\n    selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n    contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n      }\n    },\n    viewQuery: function MatChip_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipAction, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\"],\n    hostVars: 31,\n    hostBindings: function MatChip_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      role: \"role\",\n      id: \"id\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaDescription: [0, \"aria-description\", \"ariaDescription\"],\n      value: \"value\",\n      color: \"color\",\n      removable: [2, \"removable\", \"removable\", booleanAttribute],\n      highlighted: [2, \"highlighted\", \"highlighted\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      removed: \"removed\",\n      destroyed: \"destroyed\"\n    },\n    exportAs: [\"matChip\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP,\n      useExisting: MatChip\n    }])],\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n    template: function MatChip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n        i0.ɵɵconditionalCreate(3, MatChip_Conditional_3_Template, 2, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵconditionalCreate(7, MatChip_Conditional_7_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"isInteractive\", false);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], () => [], {\n    role: [{\n      type: Input\n    }],\n    _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {\n        descendants: true\n      }]\n    }],\n    _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {\n        descendants: true\n      }]\n    }],\n    _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {\n        descendants: true\n      }]\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }],\n    value: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    highlighted: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  source;\n  selected;\n  isUserInput;\n  constructor(/** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\r\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\r\n *\r\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\r\n * user cannot click disabled chips.\r\n */\nclass MatChipOption extends MatChip {\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the chip list is selectable. */\n  chipListSelectable = true;\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple = false;\n  /** Whether the chip list hides single-selection indicator. */\n  _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /**\r\n   * Whether or not the chip is selectable.\r\n   *\r\n   * When a chip is not selectable, changes to its selected state are always\r\n   * ignored. By default an option chip is selectable, and it becomes\r\n   * non-selectable if its parent chip list is not selectable.\r\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  _selectable = true;\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._setSelectedState(value, false, true);\n  }\n  _selected = false;\n  /**\r\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\r\n   * interaction patterns.\r\n   *\r\n   * From [WAI ARIA Listbox authoring practices guide](\r\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\r\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\r\n   *  set to true. All options that are selectable but not selected have either aria-selected or\r\n   *  aria-checked set to false.\"\r\n   *\r\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\r\n   * VoiceOver reading every option as \"selected\" (#25736).\r\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip-option';\n  /** Emitted when the chip is selected or deselected. */\n  selectionChange = new EventEmitter();\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n  _handlePrimaryActionInteraction() {\n    if (!this.disabled) {\n      // Interacting with the primary action implies that the chip already has focus, however\n      // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n      // We work around it by explicitly focusing the primary action of the current chip.\n      this.focus();\n      if (this.selectable) {\n        this.toggleSelected(true);\n      }\n    }\n  }\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipOption_BaseFactory;\n    return function MatChipOption_Factory(__ngFactoryType__) {\n      return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(__ngFactoryType__ || MatChipOption);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipOption,\n    selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n    hostVars: 37,\n    hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      selected: [2, \"selected\", \"selected\", booleanAttribute]\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipOption\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipOption\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 10,\n    vars: 8,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"_allowFocusWhenDisabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"]],\n    template: function MatChipOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"button\", 2);\n        i0.ɵɵconditionalCreate(3, MatChipOption_Conditional_3_Template, 5, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵconditionalCreate(7, MatChipOption_Conditional_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"_allowFocusWhenDisabled\", true);\n        i0.ɵɵattribute(\"aria-selected\", ctx.ariaSelected)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasLeadingGraphic() ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(ctx.ariaDescription);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\r\n * A directive that makes a span editable and exposes functions to modify and retrieve the\r\n * element's contents.\r\n */\nclass MatChipEditInput {\n  _elementRef = inject(ElementRef);\n  _document = inject(DOCUMENT);\n  constructor() {}\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n  static ɵfac = function MatChipEditInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipEditInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipEditInput,\n    selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n    hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\r\n * An extension of the MatChip component used with MatChipGrid and\r\n * the matChipInputFor directive.\r\n */\nclass MatChipRow extends MatChip {\n  basicChipAttrName = 'mat-basic-chip-row';\n  /**\r\n   * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\r\n   * event might occur which will interrupt the editing. This flag is used to avoid interruptions\r\n   * while the editing action is being initialized.\r\n   */\n  _editStartPending = false;\n  editable = false;\n  /** Emitted when the chip is edited. */\n  edited = new EventEmitter();\n  /** The default chip edit input that is used if none is projected into this chip row. */\n  defaultEditInput;\n  /** The projected chip edit input. */\n  contentEditInput;\n  _isEditing = false;\n  constructor() {\n    super();\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n    });\n  }\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = this._editStartPending = true;\n    // Defer initializing the input until after it has been added to the DOM.\n    afterNextRender(() => {\n      this._getEditInput().initialize(value);\n      this._editStartPending = false;\n    }, {\n      injector: this._injector\n    });\n  }\n  _onEditFinish() {\n    this._isEditing = this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    });\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  _isRippleDisabled() {\n    return super._isRippleDisabled() || this._isEditing;\n  }\n  /**\r\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\r\n   * two values is guaranteed to be defined.\r\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n  static ɵfac = function MatChipRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipRow)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipRow,\n    selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n    contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n      }\n    },\n    viewQuery: function MatChipRow_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n    hostVars: 27,\n    hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n          return ctx._handleDoubleclick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      editable: \"editable\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipRow\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c4,\n    decls: 10,\n    vars: 9,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [\"role\", \"gridcell\", \"matChipAction\", \"\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\", 3, \"disabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [\"matChipEditInput\", \"\"]],\n    template: function MatChipRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵconditionalCreate(0, MatChipRow_Conditional_0_Template, 1, 0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵconditionalCreate(2, MatChipRow_Conditional_2_Template, 2, 0, \"span\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵconditionalCreate(4, MatChipRow_Conditional_4_Template, 2, 1)(5, MatChipRow_Conditional_5_Template, 1, 0);\n        i0.ɵɵelement(6, \"span\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵconditionalCreate(7, MatChipRow_Conditional_7_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementStart(8, \"span\", 6);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(!ctx._isEditing ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 2 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._isEditing ? 4 : 5);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate(ctx.ariaDescription);\n      }\n    },\n    dependencies: [MatChipAction, MatChipEditInput],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus()',\n        '(dblclick)': '_handleDoubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction, MatChipEditInput],\n      template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], () => [], {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n\n/**\r\n * Basic container component for the MatChip component.\r\n *\r\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\r\n */\nclass MatChipSet {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  /** Index of the last destroyed chip that had focus. */\n  _lastDestroyedFocusedChipIndex = null;\n  /** Used to manage focus within the chip list. */\n  _keyManager;\n  /** Subject that emits when the component has been destroyed. */\n  _destroyed = new Subject();\n  /** Role to use if it hasn't been overwritten by the user. */\n  _defaultRole = 'presentation';\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n  /** Combined stream of all of the child chips' destroy events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n  /** Combined stream of all of the child chips' remove events. */\n  get chipRemovedChanges() {\n    return this._getChipStream(chip => chip.removed);\n  }\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n  }\n  _disabled = false;\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return !this._chips || this._chips.length === 0;\n  }\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n  /** Tabindex of the chip set. */\n  tabIndex = 0;\n  set role(value) {\n    this._explicitRole = value;\n  }\n  _explicitRole = null;\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n  /** The chips that are part of this chip set. */\n  _chips;\n  /** Flat list of all the actions contained within the chips. */\n  _chipActions = new QueryList();\n  constructor() {}\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    this._chips?.forEach(chip => {\n      chip._chipListDisabled = this._disabled;\n      chip._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {}\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\r\n   * Utility to ensure all indexes are valid.\r\n   *\r\n   * @param index The index to be checked.\r\n   * @returns True if the index is valid for our list of chips.\r\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n  /**\r\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\r\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\r\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n   */\n  _allowFocusEscape() {\n    const previous = this._elementRef.nativeElement.tabIndex;\n    if (previous !== -1) {\n      // Set the tabindex directly on the element, instead of going through\n      // the data binding, because we aren't guaranteed that change detection\n      // will run quickly enough to allow focus to escape.\n      this._elementRef.nativeElement.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => this._elementRef.nativeElement.tabIndex = previous);\n    }\n  }\n  /**\r\n   * Gets a stream of events from all the chips within the set.\r\n   * The stream will automatically incorporate any newly-added chips.\r\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n  /**\r\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n   * non-interactive and disabled actions since the user can't do anything with them.\r\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n  /**\r\n   * Finds the next appropriate chip to move focus to,\r\n   * if the currently-focused chip is destroyed.\r\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n  static ɵfac = function MatChipSet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipSet)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipSet,\n    selectors: [[\"mat-chip-set\"]],\n    contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n    hostVars: 1,\n    hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      role: \"role\",\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n    },\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipSet_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    role: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  source;\n  value;\n  constructor(/** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\r\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)].\r\n * @docs-private\r\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\r\n * An extension of the MatChipSet component that supports chip selection.\r\n * Used with MatChipOption chips.\r\n */\nclass MatChipListbox extends MatChipSet {\n  /**\r\n   * Function when touched. Set as part of ControlValueAccessor implementation.\r\n   * @docs-private\r\n   */\n  _onTouched = () => {};\n  /**\r\n   * Function when changed. Set as part of ControlValueAccessor implementation.\r\n   * @docs-private\r\n   */\n  _onChange = () => {};\n  // TODO: MDC uses `grid` here\n  _defaultRole = 'listbox';\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._syncListboxProperties();\n  }\n  _multiple = false;\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n  /** Orientation of the chip list. */\n  ariaOrientation = 'horizontal';\n  /**\r\n   * Whether or not this chip listbox is selectable.\r\n   *\r\n   * When a chip listbox is not selectable, the selected states for all\r\n   * the chips inside the chip listbox are always ignored.\r\n   */\n  get selectable() {\n    return this._selectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._syncListboxProperties();\n  }\n  _selectable = true;\n  /**\r\n   * A function to compare the option values with the selected values. The first argument\r\n   * is a value from an option. The second is a value from the selection. A boolean\r\n   * should be returned.\r\n   */\n  compareWith = (o1, o2) => o1 === o2;\n  /** Whether this chip listbox is required. */\n  required = false;\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncListboxProperties();\n  }\n  _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    if (this._chips && this._chips.length) {\n      this._setSelectionByValue(value, false);\n    }\n    this._value = value;\n  }\n  _value;\n  /** Event emitted when the selected chip listbox value has been changed by the user. */\n  change = new EventEmitter();\n  _chips = undefined;\n  ngAfterContentInit() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.value !== undefined) {\n        Promise.resolve().then(() => {\n          this._setSelectionByValue(this.value, false);\n        });\n      }\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n  /**\r\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\r\n   * are no selected chips.\r\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  writeValue(value) {\n    if (value != null) {\n      this.value = value;\n    } else {\n      this.value = undefined;\n    }\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\r\n   * Deselects every chip in the listbox.\r\n   * @param skip Chip that should not be deselected.\r\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n  /**\r\n   * Finds and selects the chip based on its value.\r\n   * @returns Chip that has the corresponding value.\r\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n  /**\r\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n   * non-interactive actions since the user can't do anything with them.\r\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipListbox_BaseFactory;\n    return function MatChipListbox_Factory(__ngFactoryType__) {\n      return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(__ngFactoryType__ || MatChipListbox);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipListbox,\n    selectors: [[\"mat-chip-listbox\"]],\n    contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n    hostVars: 10,\n    hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"tabIndex\", ctx.disabled || ctx.empty ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      ariaOrientation: [0, \"aria-orientation\", \"ariaOrientation\"],\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      compareWith: \"compareWith\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      value: \"value\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipListbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  source;\n  value;\n  constructor(/** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\r\n * An extension of the MatChipSet component used with MatChipRow chips and\r\n * the matChipInputFor directive.\r\n */\nclass MatChipGrid extends MatChipSet {\n  ngControl = inject(NgControl, {\n    optional: true,\n    self: true\n  });\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  controlType = 'mat-chip-grid';\n  /** The chip input to add more chips */\n  _chipInput;\n  _defaultRole = 'grid';\n  _errorStateTracker;\n  /**\r\n   * List of element ids to propagate to the chipInput's aria-describedby attribute.\r\n   */\n  _ariaDescribedbyIds = [];\n  /**\r\n   * Function when touched. Set as part of ControlValueAccessor implementation.\r\n   * @docs-private\r\n   */\n  _onTouched = () => {};\n  /**\r\n   * Function when changed. Set as part of ControlValueAccessor implementation.\r\n   * @docs-private\r\n   */\n  _onChange = () => {};\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n    this.stateChanges.next();\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  _placeholder;\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  _required;\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value = [];\n  /** An object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** Emits when the chip grid value has been changed by the user. */\n  change = new EventEmitter();\n  /**\r\n   * Emits whenever the raw value of the chip-grid changes. This is here primarily\r\n   * to facilitate the two-way binding for the `value` input.\r\n   * @docs-private\r\n   */\n  valueChange = new EventEmitter();\n  _chips = undefined;\n  /**\r\n   * Emits whenever the component state changes and should cause the parent\r\n   * form-field to update. Implemented as part of `MatFormFieldControl`.\r\n   * @docs-private\r\n   */\n  stateChanges = new Subject();\n  /** Whether the chip grid is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor() {\n    super();\n    const parentForm = inject(NgForm, {\n      optional: true\n    });\n    const parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n  }\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n  /**\r\n   * Focuses the first chip in this chip grid, or the associated input when there\r\n   * are no eligible chips.\r\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else {\n      const activeItem = this._keyManager.activeItem;\n      if (activeItem) {\n        activeItem.focus();\n      } else {\n        this._keyManager.setFirstItemActive();\n      }\n    }\n    this.stateChanges.next();\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  get describedByIds() {\n    return this._chipInput?.describedByIds || [];\n  }\n  /**\r\n   * Implemented as part of MatFormFieldControl.\r\n   * @docs-private\r\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n  /** Refreshes the error state of the chip grid. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  /**\r\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\r\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\r\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const activeItem = this._keyManager.activeItem;\n    if (keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n        if (activeItem) {\n          this._keyManager.setActiveItem(activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      // The up and down arrows are supposed to navigate between the individual rows in the grid.\n      // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n      // flag as the active action and moving focus between them ourseles instead of delegating\n      // to the key manager. For more information, see #29359 and:\n      // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n      if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n        const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n        const currentIndex = eligibleActions.indexOf(activeItem);\n        const delta = event.keyCode === UP_ARROW ? -1 : 1;\n        event.preventDefault();\n        if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n          this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n        }\n      } else {\n        super._handleKeydown(event);\n      }\n    }\n    this.stateChanges.next();\n  }\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  static ɵfac = function MatChipGrid_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipGrid)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipGrid,\n    selectors: [[\"mat-chip-grid\"]],\n    contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n    hostVars: 10,\n    hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n          return ctx._blur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.disabled || ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      placeholder: \"placeholder\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      value: \"value\",\n      errorStateMatcher: \"errorStateMatcher\"\n    },\n    outputs: {\n      change: \"change\",\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatChipGrid\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipGrid_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\r\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\r\n * May be placed inside or outside of a `<mat-chip-grid>`.\r\n */\nclass MatChipInput {\n  _elementRef = inject(ElementRef);\n  /** Whether the control is focused. */\n  focused = false;\n  /** Register input for chip list */\n  get chipGrid() {\n    return this._chipGrid;\n  }\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n  _chipGrid;\n  /**\r\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\r\n   */\n  addOnBlur = false;\n  /**\r\n   * The list of key codes that will trigger a chipEnd event.\r\n   *\r\n   * Defaults to `[ENTER]`.\r\n   */\n  separatorKeyCodes;\n  /** Emitted when a chip is to be added. */\n  chipEnd = new EventEmitter();\n  /** The input's placeholder text. */\n  placeholder = '';\n  /** Unique id for the input. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Whether the input is readonly. */\n  readonly = false;\n  /** Whether the input should remain interactive when it is disabled. */\n  disabledInteractive;\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n  /** The native input element to which this directive is attached. */\n  inputElement;\n  constructor() {\n    const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n    const formField = inject(MAT_FORM_FIELD, {\n      optional: true\n    });\n    this.inputElement = this._elementRef.nativeElement;\n    this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n    this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (this.empty && event.keyCode === BACKSPACE) {\n      // Ignore events where the user is holding down backspace\n      // so that we don't accidentally remove too many chips.\n      if (!event.repeat) {\n        this._chipGrid._focusLastChip();\n      }\n      event.preventDefault();\n    } else {\n      this._emitChipEnd(event);\n    }\n  }\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n  _focus() {\n    this.focused = true;\n    this._chipGrid.stateChanges.next();\n  }\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event) && !event.repeat) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event?.preventDefault();\n    }\n  }\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n  }\n  /**\r\n   * Implemented as part of MatChipTextControl.\r\n   * @docs-private\r\n   */\n  get describedByIds() {\n    const element = this._elementRef.nativeElement;\n    const existingDescribedBy = element.getAttribute('aria-describedby');\n    return existingDescribedBy?.split(' ') || [];\n  }\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n  /** Gets the value to set on the `readonly` attribute. */\n  _getReadonlyAttribute() {\n    return this.readonly || this.disabled && this.disabledInteractive ? 'true' : null;\n  }\n  static ɵfac = function MatChipInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipInput,\n    selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n    hostVars: 8,\n    hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n          return ctx._focus();\n        })(\"input\", function MatChipInput_input_HostBindingHandler() {\n          return ctx._onInput();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"disabled\", ctx.disabled && !ctx.disabledInteractive ? \"\" : null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null)(\"readonly\", ctx._getReadonlyAttribute())(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n      }\n    },\n    inputs: {\n      chipGrid: [0, \"matChipInputFor\", \"chipGrid\"],\n      addOnBlur: [2, \"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute],\n      separatorKeyCodes: [0, \"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n      placeholder: \"placeholder\",\n      id: \"id\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      readonly: [2, \"readonly\", \"readonly\", booleanAttribute],\n      disabledInteractive: [2, \"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute]\n    },\n    outputs: {\n      chipEnd: \"matChipInputTokenEnd\"\n    },\n    exportAs: [\"matChipInput\", \"matChipInputFor\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n        '[attr.readonly]': '_getReadonlyAttribute()',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      }\n    }]\n  }], () => [], {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputAddOnBlur',\n        transform: booleanAttribute\n      }]\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    readonly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputDisabledInteractive',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nclass MatChipsModule {\n  static ɵfac = function MatChipsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipsModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatChipsModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ErrorStateMatcher, {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      }\n    }],\n    imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };","map":{"version":3,"names":["FocusMonitor","_IdGenerator","FocusKeyManager","ENTER","SPACE","BACKSPACE","DELETE","TAB","hasModifierKey","UP_ARROW","DOWN_ARROW","_CdkPrivateStyleLoader","_VisuallyHiddenLoader","i0","InjectionToken","inject","ElementRef","booleanAttribute","numberAttribute","Directive","Input","ChangeDetectorRef","HOST_TAG_NAME","NgZone","DOCUMENT","EventEmitter","Injector","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","Output","ContentChild","ViewChild","afterNextRender","QueryList","forwardRef","NgModule","Subject","merge","_","_StructuralStylesLoader","a","MAT_RIPPLE_GLOBAL_OPTIONS","_animationsDisabled","M","MatRippleLoader","takeUntil","startWith","switchMap","Directionality","NG_VALUE_ACCESSOR","NgControl","Validators","NgForm","FormGroupDirective","E","ErrorStateMatcher","_ErrorStateTracker","k","MatFormFieldControl","h","MAT_FORM_FIELD","MatCommonModule","MatRippleModule","_c0","_c1","MatChip_Conditional_3_Template","rf","ctx","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","MatChip_Conditional_7_Template","MatChipOption_Conditional_3_Template","ɵɵnamespaceSVG","ɵɵelement","MatChipOption_Conditional_7_Template","_c2","_c3","_c4","MatChipRow_Conditional_0_Template","MatChipRow_Conditional_2_Template","MatChipRow_Conditional_4_Conditional_0_Template","MatChipRow_Conditional_4_Conditional_1_Template","MatChipRow_Conditional_4_Template","ɵɵconditionalCreate","ctx_r0","ɵɵnextContext","ɵɵconditional","contentEditInput","MatChipRow_Conditional_5_Template","MatChipRow_Conditional_7_Template","_c5","_c6","MAT_CHIPS_DEFAULT_OPTIONS","providedIn","factory","separatorKeyCodes","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","MatChipAction","_elementRef","_parentChip","isInteractive","_isPrimary","disabled","_disabled","value","tabIndex","_allowFocusWhenDisabled","_getDisabledAttribute","_getTabindex","toString","constructor","load","nativeElement","nodeName","setAttribute","focus","_handleClick","event","preventDefault","_handlePrimaryActionInteraction","_handleKeydown","keyCode","_isEditing","ɵfac","MatChipAction_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatChipAction_HostBindings","ɵɵlistener","MatChipAction_click_HostBindingHandler","$event","MatChipAction_keydown_HostBindingHandler","ɵɵattribute","ɵɵclassProp","inputs","ngDevMode","ɵsetClassMetadata","args","selector","host","transform","MatChipAvatar","MatChipAvatar_Factory","features","ɵɵProvidersFeature","provide","useExisting","providers","MatChipTrailingIcon","ɵMatChipTrailingIcon_BaseFactory","MatChipTrailingIcon_Factory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","MatChipRemove","stopPropagation","remove","ɵMatChipRemove_BaseFactory","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChip","_changeDetectorRef","_tagName","_ngZone","_focusMonitor","_globalRippleOptions","optional","_document","_onFocus","_onBlur","_isBasicChip","role","_hasFocusInternal","_pendingFocus","_actionChanges","_allLeadingIcons","_allTrailingIcons","_allRemoveIcons","_hasFocus","id","getId","ariaLabel","ariaDescription","_ariaDescriptionId","_chipListDisabled","_textElement","_value","undefined","textContent","trim","color","removable","highlighted","disableRipple","removed","destroyed","basicChipAttrName","leadingIcon","trailingIcon","removeIcon","primaryAction","_rippleLoader","_injector","styleLoader","_monitorFocus","configureRipple","className","_isRippleDisabled","ngOnInit","hasAttribute","toLowerCase","ngAfterViewInit","querySelector","ngAfterContentInit","changes","subscribe","markForCheck","ngDoCheck","setDisabled","ngOnDestroy","stopMonitoring","destroyRipple","unsubscribe","emit","chip","complete","_hasTrailingIcon","repeat","_getSourceAction","target","_getActions","find","action","element","contains","result","push","monitor","origin","hasFocus","next","setTimeout","run","MatChip_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatChip_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatChip_Query","ɵɵviewQuery","MatChip_HostBindings","MatChip_keydown_HostBindingHandler","ɵɵdomProperty","ɵɵclassMap","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","MatChip_Template","ɵɵprojectionDef","ɵɵadvance","ɵɵproperty","dependencies","styles","encapsulation","changeDetection","None","OnPush","imports","descendants","MatChipSelectionChange","source","selected","isUserInput","MatChipOption","_defaultOptions","chipListSelectable","_chipListMultiple","_chipListHideSingleSelectionIndicator","hideSingleSelectionIndicator","selectable","_selectable","_selected","_setSelectedState","ariaSelected","selectionChange","select","deselect","selectViaInteraction","toggleSelected","_hasLeadingGraphic","isSelected","emitEvent","ɵMatChipOption_BaseFactory","MatChipOption_Factory","MatChipOption_HostBindings","MatChipOption_Template","ɵɵtext","ɵɵtextInterpolate","MatChipEditInput","initialize","initialValue","getNativeElement","setValue","_moveCursorToEndOfInput","getValue","range","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","MatChipEditInput_Factory","MatChipRow","_editStartPending","editable","edited","defaultEditInput","pipe","_onEditFinish","_handleFocus","_startEditing","_handleDoubleclick","_getEditInput","injector","activeElement","body","MatChipRow_Factory","MatChipRow_ContentQueries","MatChipRow_Query","MatChipRow_HostBindings","MatChipRow_focus_HostBindingHandler","MatChipRow_dblclick_HostBindingHandler","MatChipRow_Template","MatChipSet","_dir","_lastDestroyedFocusedChipIndex","_keyManager","_destroyed","_defaultRole","chipFocusChanges","_getChipStream","chipDestroyedChanges","chipRemovedChanges","_syncChipsState","empty","_chips","length","_explicitRole","focused","_hasFocusedChip","_chipActions","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","destroy","some","forEach","_originatesFromChip","onKeydown","_isValidIndex","index","_allowFocusEscape","previous","mappingFunction","map","currentElement","classList","parentElement","chips","actions","reset","notifyOnChanges","withVerticalOrientation","withHorizontalOrientation","withHomeAndEnd","skipPredicate","_skipPredicate","document","updateActiveItem","change","direction","Promise","resolve","then","_redirectDestroyedChipFocus","chipArray","toArray","chipIndex","indexOf","newIndex","Math","min","chipToFocus","setPreviousItemActive","MatChipSet_Factory","MatChipSet_ContentQueries","MatChipSet_HostBindings","MatChipSet_keydown_HostBindingHandler","MatChipSet_Template","MatChipListboxChange","MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR","MatChipListbox","multi","_onTouched","_onChange","multiple","_multiple","_syncListboxProperties","selectedChips","filter","ariaOrientation","compareWith","o1","o2","required","_hideSingleSelectionIndicator","chipSelectionChanges","chipBlurChanges","_setSelectionByValue","_blur","_propagateChanges","firstSelectedChip","_getFirstSelectedChip","setFirstItemActive","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_clearSelection","Array","isArray","currentValue","_selectValue","_markAsTouched","_keydown","valueToEmit","skip","correspondingChip","ɵMatChipListbox_BaseFactory","MatChipListbox_Factory","MatChipListbox_ContentQueries","MatChipListbox_HostBindings","MatChipListbox_focus_HostBindingHandler","MatChipListbox_blur_HostBindingHandler","MatChipListbox_keydown_HostBindingHandler","MatChipListbox_Template","MatChipGridChange","MatChipGrid","ngControl","self","controlType","_chipInput","_errorStateTracker","_ariaDescribedbyIds","stateChanges","placeholder","_placeholder","_required","control","hasValidator","shouldLabelFloat","errorStateMatcher","matcher","valueChange","errorState","parentForm","parentFormGroup","defaultErrorStateMatcher","valueAccessor","Error","updateErrorState","registerInput","inputElement","setDescribedByIds","onContainerClick","activeItem","describedByIds","ids","last","setActiveItem","_focusLastChip","eligibleActions","currentIndex","delta","MatChipGrid_Factory","MatChipGrid_ContentQueries","MatChipGrid_HostBindings","MatChipGrid_focus_HostBindingHandler","MatChipGrid_blur_HostBindingHandler","MatChipGrid_Template","MatChipInput","chipGrid","_chipGrid","addOnBlur","chipEnd","readonly","disabledInteractive","defaultOptions","formField","inputDisabledInteractive","add","ngOnChanges","_emitChipEnd","_focus","_isSeparatorKey","input","chipInput","_onInput","clear","existingDescribedBy","getAttribute","split","join","removeAttribute","Set","has","_getReadonlyAttribute","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","MatChipInput_input_HostBindingHandler","invalid","ɵɵNgOnChangesFeature","alias","CHIP_DECLARATIONS","MatChipsModule","MatChipsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","useValue","exports"],"sources":["C:/Users/winni/OneDrive/Desktop/JINZ-Media-Full-Source/frontend/node_modules/@angular/material/fesm2022/chips.mjs"],"sourcesContent":["import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\r\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\r\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\r\nimport * as i0 from '@angular/core';\r\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\r\nimport { Subject, merge } from 'rxjs';\r\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\r\nimport { a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BYgV4oZC.mjs';\r\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\r\nimport { M as MatRippleLoader } from './ripple-loader-BnMiRtmT.mjs';\r\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\r\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\r\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\r\nimport { k as MatFormFieldControl, h as MAT_FORM_FIELD } from './form-field-CFbrnFED.mjs';\r\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\r\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\r\nimport '@angular/cdk/platform';\r\nimport '@angular/cdk/coercion';\r\nimport '@angular/cdk/layout';\r\nimport '@angular/common';\r\nimport '@angular/cdk/observers/private';\r\n\r\n/** Injection token to be used to override the default options for the chips module. */\r\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\r\n    providedIn: 'root',\r\n    factory: () => ({\r\n        separatorKeyCodes: [ENTER],\r\n    }),\r\n});\r\n/**\r\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\r\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\r\n/**\r\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\r\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\r\n/**\r\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\r\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\r\n/**\r\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\r\n */\r\nconst MAT_CHIP = new InjectionToken('MatChip');\r\n\r\n/**\r\n * Section within a chip.\r\n * @docs-private\r\n */\r\nclass MatChipAction {\r\n    _elementRef = inject(ElementRef);\r\n    _parentChip = inject(MAT_CHIP);\r\n    /** Whether the action is interactive. */\r\n    isInteractive = true;\r\n    /** Whether this is the primary action in the chip. */\r\n    _isPrimary = true;\r\n    /** Whether the action is disabled. */\r\n    get disabled() {\r\n        return this._disabled || this._parentChip?.disabled || false;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = value;\r\n    }\r\n    _disabled = false;\r\n    /** Tab index of the action. */\r\n    tabIndex = -1;\r\n    /**\r\n     * Private API to allow focusing this chip when it is disabled.\r\n     */\r\n    _allowFocusWhenDisabled = false;\r\n    /**\r\n     * Determine the value of the disabled attribute for this chip action.\r\n     */\r\n    _getDisabledAttribute() {\r\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\r\n        // string to indicate that disabled attribute should be included.\r\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\r\n    }\r\n    /**\r\n     * Determine the value of the tabindex attribute for this chip action.\r\n     */\r\n    _getTabindex() {\r\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\r\n            ? null\r\n            : this.tabIndex.toString();\r\n    }\r\n    constructor() {\r\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\r\n        if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\r\n            this._elementRef.nativeElement.setAttribute('type', 'button');\r\n        }\r\n    }\r\n    focus() {\r\n        this._elementRef.nativeElement.focus();\r\n    }\r\n    _handleClick(event) {\r\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\r\n            event.preventDefault();\r\n            this._parentChip._handlePrimaryActionInteraction();\r\n        }\r\n    }\r\n    _handleKeydown(event) {\r\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\r\n            !this.disabled &&\r\n            this.isInteractive &&\r\n            this._isPrimary &&\r\n            !this._parentChip._isEditing) {\r\n            event.preventDefault();\r\n            this._parentChip._handlePrimaryActionInteraction();\r\n        }\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAction, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipAction, isStandalone: true, selector: \"[matChipAction]\", inputs: { isInteractive: \"isInteractive\", disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? -1 : numberAttribute(value))], _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAction, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[matChipAction]',\r\n                    host: {\r\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\r\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\r\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\r\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary',\r\n                        '[attr.tabindex]': '_getTabindex()',\r\n                        '[attr.disabled]': '_getDisabledAttribute()',\r\n                        '[attr.aria-disabled]': 'disabled',\r\n                        '(click)': '_handleClick($event)',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                    },\r\n                }]\r\n        }], ctorParameters: () => [], propDecorators: { isInteractive: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], tabIndex: [{\r\n                type: Input,\r\n                args: [{\r\n                        transform: (value) => (value == null ? -1 : numberAttribute(value)),\r\n                    }]\r\n            }], _allowFocusWhenDisabled: [{\r\n                type: Input\r\n            }] } });\r\n\r\n/** Avatar image within a chip. */\r\nclass MatChipAvatar {\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipAvatar, isStandalone: true, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAvatar, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\r\n                    host: {\r\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\r\n                        'role': 'img',\r\n                    },\r\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\r\n                }]\r\n        }] });\r\n/** Non-interactive trailing icon in a chip. */\r\nclass MatChipTrailingIcon extends MatChipAction {\r\n    /**\r\n     * MDC considers all trailing actions as a remove icon,\r\n     * but we support non-interactive trailing icons.\r\n     */\r\n    isInteractive = false;\r\n    _isPrimary = false;\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipTrailingIcon, isStandalone: true, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\r\n                    host: {\r\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\r\n                        'aria-hidden': 'true',\r\n                    },\r\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\r\n                }]\r\n        }] });\r\n/**\r\n * Directive to remove the parent chip when the trailing icon is clicked or\r\n * when the ENTER key is pressed on it.\r\n *\r\n * Recommended for use with the Material Design \"cancel\" icon\r\n * available at https://material.io/icons/#ic_cancel.\r\n *\r\n * Example:\r\n *\r\n * ```\r\n * <mat-chip>\r\n *   <mat-icon matChipRemove>cancel</mat-icon>\r\n * </mat-chip>\r\n * ```\r\n */\r\nclass MatChipRemove extends MatChipAction {\r\n    _isPrimary = false;\r\n    _handleClick(event) {\r\n        if (!this.disabled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this._parentChip.remove();\r\n        }\r\n    }\r\n    _handleKeydown(event) {\r\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this._parentChip.remove();\r\n        }\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipRemove, isStandalone: true, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRemove, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[matChipRemove]',\r\n                    host: {\r\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' +\r\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\r\n                        'role': 'button',\r\n                        '[attr.aria-hidden]': 'null',\r\n                    },\r\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\r\n                }]\r\n        }] });\r\n\r\n/**\r\n * Material design styled Chip base component. Used inside the MatChipSet component.\r\n *\r\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\r\n */\r\nclass MatChip {\r\n    _changeDetectorRef = inject(ChangeDetectorRef);\r\n    _elementRef = inject(ElementRef);\r\n    _tagName = inject(HOST_TAG_NAME);\r\n    _ngZone = inject(NgZone);\r\n    _focusMonitor = inject(FocusMonitor);\r\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\r\n        optional: true,\r\n    });\r\n    _document = inject(DOCUMENT);\r\n    /** Emits when the chip is focused. */\r\n    _onFocus = new Subject();\r\n    /** Emits when the chip is blurred. */\r\n    _onBlur = new Subject();\r\n    /** Whether this chip is a basic (unstyled) chip. */\r\n    _isBasicChip;\r\n    /** Role for the root of the chip. */\r\n    role = null;\r\n    /** Whether the chip has focus. */\r\n    _hasFocusInternal = false;\r\n    /** Whether moving focus into the chip is pending. */\r\n    _pendingFocus;\r\n    /** Subscription to changes in the chip's actions. */\r\n    _actionChanges;\r\n    /** Whether animations for the chip are enabled. */\r\n    _animationsDisabled = _animationsDisabled();\r\n    /** All avatars present in the chip. */\r\n    _allLeadingIcons;\r\n    /** All trailing icons present in the chip. */\r\n    _allTrailingIcons;\r\n    /** All remove icons present in the chip. */\r\n    _allRemoveIcons;\r\n    _hasFocus() {\r\n        return this._hasFocusInternal;\r\n    }\r\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\r\n    id = inject(_IdGenerator).getId('mat-mdc-chip-');\r\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\r\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\r\n    // datepicker's use case.\r\n    /** ARIA label for the content of the chip. */\r\n    ariaLabel = null;\r\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\r\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\r\n    // datepicker's use case.\r\n    /** ARIA description for the content of the chip. */\r\n    ariaDescription = null;\r\n    /** Id of a span that contains this chip's aria description. */\r\n    _ariaDescriptionId = `${this.id}-aria-description`;\r\n    /** Whether the chip list is disabled. */\r\n    _chipListDisabled = false;\r\n    _textElement;\r\n    /**\r\n     * The value of the chip. Defaults to the content inside\r\n     * the `mat-mdc-chip-action-label` element.\r\n     */\r\n    get value() {\r\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\r\n    }\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    _value;\r\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\r\n    /**\r\n     * Theme color of the chip. This API is supported in M2 themes only, it has no\r\n     * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\r\n     *\r\n     * For information on applying color variants in M3, see\r\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\r\n     */\r\n    color;\r\n    /**\r\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\r\n     */\r\n    removable = true;\r\n    /**\r\n     * Colors the chip for emphasis as if it were selected.\r\n     */\r\n    highlighted = false;\r\n    /** Whether the ripple effect is disabled or not. */\r\n    disableRipple = false;\r\n    /** Whether the chip is disabled. */\r\n    get disabled() {\r\n        return this._disabled || this._chipListDisabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = value;\r\n    }\r\n    _disabled = false;\r\n    /** Emitted when a chip is to be removed. */\r\n    removed = new EventEmitter();\r\n    /** Emitted when the chip is destroyed. */\r\n    destroyed = new EventEmitter();\r\n    /** The unstyled chip selector for this component. */\r\n    basicChipAttrName = 'mat-basic-chip';\r\n    /** The chip's leading icon. */\r\n    leadingIcon;\r\n    /** The chip's trailing icon. */\r\n    trailingIcon;\r\n    /** The chip's trailing remove icon. */\r\n    removeIcon;\r\n    /** Action receiving the primary set of user interactions. */\r\n    primaryAction;\r\n    /**\r\n     * Handles the lazy creation of the MatChip ripple.\r\n     * Used to improve initial load time of large applications.\r\n     */\r\n    _rippleLoader = inject(MatRippleLoader);\r\n    _injector = inject(Injector);\r\n    constructor() {\r\n        const styleLoader = inject(_CdkPrivateStyleLoader);\r\n        styleLoader.load(_StructuralStylesLoader);\r\n        styleLoader.load(_VisuallyHiddenLoader);\r\n        this._monitorFocus();\r\n        this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\r\n            className: 'mat-mdc-chip-ripple',\r\n            disabled: this._isRippleDisabled(),\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        // This check needs to happen in `ngOnInit` so the overridden value of\r\n        // `basicChipAttrName` coming from base classes can be picked up.\r\n        this._isBasicChip =\r\n            this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) ||\r\n                this._tagName.toLowerCase() === this.basicChipAttrName;\r\n    }\r\n    ngAfterViewInit() {\r\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\r\n        if (this._pendingFocus) {\r\n            this._pendingFocus = false;\r\n            this.focus();\r\n        }\r\n    }\r\n    ngAfterContentInit() {\r\n        // Since the styling depends on the presence of some\r\n        // actions, we have to mark for check on changes.\r\n        this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\r\n    }\r\n    ngDoCheck() {\r\n        this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\r\n    }\r\n    ngOnDestroy() {\r\n        this._focusMonitor.stopMonitoring(this._elementRef);\r\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\r\n        this._actionChanges?.unsubscribe();\r\n        this.destroyed.emit({ chip: this });\r\n        this.destroyed.complete();\r\n    }\r\n    /**\r\n     * Allows for programmatic removal of the chip.\r\n     *\r\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\r\n     */\r\n    remove() {\r\n        if (this.removable) {\r\n            this.removed.emit({ chip: this });\r\n        }\r\n    }\r\n    /** Whether or not the ripple should be disabled. */\r\n    _isRippleDisabled() {\r\n        return (this.disabled ||\r\n            this.disableRipple ||\r\n            this._animationsDisabled ||\r\n            this._isBasicChip ||\r\n            !!this._globalRippleOptions?.disabled);\r\n    }\r\n    /** Returns whether the chip has a trailing icon. */\r\n    _hasTrailingIcon() {\r\n        return !!(this.trailingIcon || this.removeIcon);\r\n    }\r\n    /** Handles keyboard events on the chip. */\r\n    _handleKeydown(event) {\r\n        // Ignore backspace events where the user is holding down the key\r\n        // so that we don't accidentally remove too many chips.\r\n        if ((event.keyCode === BACKSPACE && !event.repeat) || event.keyCode === DELETE) {\r\n            event.preventDefault();\r\n            this.remove();\r\n        }\r\n    }\r\n    /** Allows for programmatic focusing of the chip. */\r\n    focus() {\r\n        if (!this.disabled) {\r\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\r\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\r\n            // Queue the method to be called again on init.\r\n            if (this.primaryAction) {\r\n                this.primaryAction.focus();\r\n            }\r\n            else {\r\n                this._pendingFocus = true;\r\n            }\r\n        }\r\n    }\r\n    /** Gets the action that contains a specific target node. */\r\n    _getSourceAction(target) {\r\n        return this._getActions().find(action => {\r\n            const element = action._elementRef.nativeElement;\r\n            return element === target || element.contains(target);\r\n        });\r\n    }\r\n    /** Gets all of the actions within the chip. */\r\n    _getActions() {\r\n        const result = [];\r\n        if (this.primaryAction) {\r\n            result.push(this.primaryAction);\r\n        }\r\n        if (this.removeIcon) {\r\n            result.push(this.removeIcon);\r\n        }\r\n        if (this.trailingIcon) {\r\n            result.push(this.trailingIcon);\r\n        }\r\n        return result;\r\n    }\r\n    /** Handles interactions with the primary action of the chip. */\r\n    _handlePrimaryActionInteraction() {\r\n        // Empty here, but is overwritten in child classes.\r\n    }\r\n    /** Starts the focus monitoring process on the chip. */\r\n    _monitorFocus() {\r\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\r\n            const hasFocus = origin !== null;\r\n            if (hasFocus !== this._hasFocusInternal) {\r\n                this._hasFocusInternal = hasFocus;\r\n                if (hasFocus) {\r\n                    this._onFocus.next({ chip: this });\r\n                }\r\n                else {\r\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\r\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\r\n                    // that moves focus to the next item. To work around the issue, we defer marking the chip\r\n                    // as not focused until after the next render.\r\n                    this._changeDetectorRef.markForCheck();\r\n                    setTimeout(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChip, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChip, isStandalone: true, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", color: \"color\", removable: [\"removable\", \"removable\", booleanAttribute], highlighted: [\"highlighted\", \"highlighted\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\", \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }, { propertyName: \"_allLeadingIcons\", predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"_allTrailingIcons\", predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChip, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]', exportAs: 'matChip', host: {\r\n                        'class': 'mat-mdc-chip',\r\n                        '[class]': '\"mat-\" + (color || \"primary\")',\r\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\r\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\r\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\r\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\r\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\r\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\r\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\r\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\r\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\r\n                        '[id]': 'id',\r\n                        '[attr.role]': 'role',\r\n                        '[attr.aria-label]': 'ariaLabel',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\r\n        }], ctorParameters: () => [], propDecorators: { role: [{\r\n                type: Input\r\n            }], _allLeadingIcons: [{\r\n                type: ContentChildren,\r\n                args: [MAT_CHIP_AVATAR, { descendants: true }]\r\n            }], _allTrailingIcons: [{\r\n                type: ContentChildren,\r\n                args: [MAT_CHIP_TRAILING_ICON, { descendants: true }]\r\n            }], _allRemoveIcons: [{\r\n                type: ContentChildren,\r\n                args: [MAT_CHIP_REMOVE, { descendants: true }]\r\n            }], id: [{\r\n                type: Input\r\n            }], ariaLabel: [{\r\n                type: Input,\r\n                args: ['aria-label']\r\n            }], ariaDescription: [{\r\n                type: Input,\r\n                args: ['aria-description']\r\n            }], value: [{\r\n                type: Input\r\n            }], color: [{\r\n                type: Input\r\n            }], removable: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], highlighted: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], disableRipple: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], disabled: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], removed: [{\r\n                type: Output\r\n            }], destroyed: [{\r\n                type: Output\r\n            }], leadingIcon: [{\r\n                type: ContentChild,\r\n                args: [MAT_CHIP_AVATAR]\r\n            }], trailingIcon: [{\r\n                type: ContentChild,\r\n                args: [MAT_CHIP_TRAILING_ICON]\r\n            }], removeIcon: [{\r\n                type: ContentChild,\r\n                args: [MAT_CHIP_REMOVE]\r\n            }], primaryAction: [{\r\n                type: ViewChild,\r\n                args: [MatChipAction]\r\n            }] } });\r\n\r\n/** Event object emitted by MatChipOption when selected or deselected. */\r\nclass MatChipSelectionChange {\r\n    source;\r\n    selected;\r\n    isUserInput;\r\n    constructor(\r\n    /** Reference to the chip that emitted the event. */\r\n    source, \r\n    /** Whether the chip that emitted the event is selected. */\r\n    selected, \r\n    /** Whether the selection change was a result of a user interaction. */\r\n    isUserInput = false) {\r\n        this.source = source;\r\n        this.selected = selected;\r\n        this.isUserInput = isUserInput;\r\n    }\r\n}\r\n/**\r\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\r\n *\r\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\r\n * user cannot click disabled chips.\r\n */\r\nclass MatChipOption extends MatChip {\r\n    /** Default chip options. */\r\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\r\n    /** Whether the chip list is selectable. */\r\n    chipListSelectable = true;\r\n    /** Whether the chip list is in multi-selection mode. */\r\n    _chipListMultiple = false;\r\n    /** Whether the chip list hides single-selection indicator. */\r\n    _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\r\n    /**\r\n     * Whether or not the chip is selectable.\r\n     *\r\n     * When a chip is not selectable, changes to its selected state are always\r\n     * ignored. By default an option chip is selectable, and it becomes\r\n     * non-selectable if its parent chip list is not selectable.\r\n     */\r\n    get selectable() {\r\n        return this._selectable && this.chipListSelectable;\r\n    }\r\n    set selectable(value) {\r\n        this._selectable = value;\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    _selectable = true;\r\n    /** Whether the chip is selected. */\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n    set selected(value) {\r\n        this._setSelectedState(value, false, true);\r\n    }\r\n    _selected = false;\r\n    /**\r\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\r\n     * interaction patterns.\r\n     *\r\n     * From [WAI ARIA Listbox authoring practices guide](\r\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\r\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\r\n     *  set to true. All options that are selectable but not selected have either aria-selected or\r\n     *  aria-checked set to false.\"\r\n     *\r\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\r\n     * VoiceOver reading every option as \"selected\" (#25736).\r\n     */\r\n    get ariaSelected() {\r\n        return this.selectable ? this.selected.toString() : null;\r\n    }\r\n    /** The unstyled chip selector for this component. */\r\n    basicChipAttrName = 'mat-basic-chip-option';\r\n    /** Emitted when the chip is selected or deselected. */\r\n    selectionChange = new EventEmitter();\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n        this.role = 'presentation';\r\n    }\r\n    /** Selects the chip. */\r\n    select() {\r\n        this._setSelectedState(true, false, true);\r\n    }\r\n    /** Deselects the chip. */\r\n    deselect() {\r\n        this._setSelectedState(false, false, true);\r\n    }\r\n    /** Selects this chip and emits userInputSelection event */\r\n    selectViaInteraction() {\r\n        this._setSelectedState(true, true, true);\r\n    }\r\n    /** Toggles the current selected state of this chip. */\r\n    toggleSelected(isUserInput = false) {\r\n        this._setSelectedState(!this.selected, isUserInput, true);\r\n        return this.selected;\r\n    }\r\n    _handlePrimaryActionInteraction() {\r\n        if (!this.disabled) {\r\n            // Interacting with the primary action implies that the chip already has focus, however\r\n            // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\r\n            // We work around it by explicitly focusing the primary action of the current chip.\r\n            this.focus();\r\n            if (this.selectable) {\r\n                this.toggleSelected(true);\r\n            }\r\n        }\r\n    }\r\n    _hasLeadingGraphic() {\r\n        if (this.leadingIcon) {\r\n            return true;\r\n        }\r\n        // The checkmark graphic communicates selected state for both single-select and multi-select.\r\n        // Include checkmark in single-select to fix a11y issue where selected state is communicated\r\n        // visually only using color (#25886).\r\n        return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\r\n    }\r\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\r\n        if (isSelected !== this.selected) {\r\n            this._selected = isSelected;\r\n            if (emitEvent) {\r\n                this.selectionChange.emit({\r\n                    source: this,\r\n                    isUserInput,\r\n                    selected: this.selected,\r\n                });\r\n            }\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChipOption, isStandalone: true, selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\", inputs: { selectable: [\"selectable\", \"selectable\", booleanAttribute], selected: [\"selected\", \"selected\", booleanAttribute] }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\", \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\", \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\" }, providers: [\r\n            { provide: MatChip, useExisting: MatChipOption },\r\n            { provide: MAT_CHIP, useExisting: MatChipOption },\r\n        ], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipOption, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]', host: {\r\n                        'class': 'mat-mdc-chip mat-mdc-chip-option',\r\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\r\n                        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\r\n                        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\r\n                        '[class.mat-mdc-chip-selected]': 'selected',\r\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\r\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\r\n                        '[class.mdc-evolution-chip--selected]': 'selected',\r\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\r\n                        // starts and removes it once the animation is finished. We don't need to go through all\r\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\r\n                        // because they also have an exit animation that we don't care about.\r\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\r\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\r\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\r\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\r\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\r\n                        '[attr.tabindex]': 'null',\r\n                        '[attr.aria-label]': 'null',\r\n                        '[attr.aria-description]': 'null',\r\n                        '[attr.role]': 'role',\r\n                        '[id]': 'id',\r\n                    }, providers: [\r\n                        { provide: MatChip, useExisting: MatChipOption },\r\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\r\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\r\n        }], propDecorators: { selectable: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], selected: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], selectionChange: [{\r\n                type: Output\r\n            }] } });\r\n\r\n/**\r\n * A directive that makes a span editable and exposes functions to modify and retrieve the\r\n * element's contents.\r\n */\r\nclass MatChipEditInput {\r\n    _elementRef = inject(ElementRef);\r\n    _document = inject(DOCUMENT);\r\n    constructor() { }\r\n    initialize(initialValue) {\r\n        this.getNativeElement().focus();\r\n        this.setValue(initialValue);\r\n    }\r\n    getNativeElement() {\r\n        return this._elementRef.nativeElement;\r\n    }\r\n    setValue(value) {\r\n        this.getNativeElement().textContent = value;\r\n        this._moveCursorToEndOfInput();\r\n    }\r\n    getValue() {\r\n        return this.getNativeElement().textContent || '';\r\n    }\r\n    _moveCursorToEndOfInput() {\r\n        const range = this._document.createRange();\r\n        range.selectNodeContents(this.getNativeElement());\r\n        range.collapse(false);\r\n        const sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEditInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipEditInput, isStandalone: true, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEditInput, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'span[matChipEditInput]',\r\n                    host: {\r\n                        'class': 'mat-chip-edit-input',\r\n                        'role': 'textbox',\r\n                        'tabindex': '-1',\r\n                        'contenteditable': 'true',\r\n                    },\r\n                }]\r\n        }], ctorParameters: () => [] });\r\n\r\n/**\r\n * An extension of the MatChip component used with MatChipGrid and\r\n * the matChipInputFor directive.\r\n */\r\nclass MatChipRow extends MatChip {\r\n    basicChipAttrName = 'mat-basic-chip-row';\r\n    /**\r\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\r\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\r\n     * while the editing action is being initialized.\r\n     */\r\n    _editStartPending = false;\r\n    editable = false;\r\n    /** Emitted when the chip is edited. */\r\n    edited = new EventEmitter();\r\n    /** The default chip edit input that is used if none is projected into this chip row. */\r\n    defaultEditInput;\r\n    /** The projected chip edit input. */\r\n    contentEditInput;\r\n    _isEditing = false;\r\n    constructor() {\r\n        super();\r\n        this.role = 'row';\r\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\r\n            if (this._isEditing && !this._editStartPending) {\r\n                this._onEditFinish();\r\n            }\r\n        });\r\n    }\r\n    _hasTrailingIcon() {\r\n        // The trailing icon is hidden while editing.\r\n        return !this._isEditing && super._hasTrailingIcon();\r\n    }\r\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\r\n    _handleFocus() {\r\n        if (!this._isEditing && !this.disabled) {\r\n            this.focus();\r\n        }\r\n    }\r\n    _handleKeydown(event) {\r\n        if (event.keyCode === ENTER && !this.disabled) {\r\n            if (this._isEditing) {\r\n                event.preventDefault();\r\n                this._onEditFinish();\r\n            }\r\n            else if (this.editable) {\r\n                this._startEditing(event);\r\n            }\r\n        }\r\n        else if (this._isEditing) {\r\n            // Stop the event from reaching the chip set in order to avoid navigating.\r\n            event.stopPropagation();\r\n        }\r\n        else {\r\n            super._handleKeydown(event);\r\n        }\r\n    }\r\n    _handleDoubleclick(event) {\r\n        if (!this.disabled && this.editable) {\r\n            this._startEditing(event);\r\n        }\r\n    }\r\n    _startEditing(event) {\r\n        if (!this.primaryAction ||\r\n            (this.removeIcon && this._getSourceAction(event.target) === this.removeIcon)) {\r\n            return;\r\n        }\r\n        // The value depends on the DOM so we need to extract it before we flip the flag.\r\n        const value = this.value;\r\n        this._isEditing = this._editStartPending = true;\r\n        // Defer initializing the input until after it has been added to the DOM.\r\n        afterNextRender(() => {\r\n            this._getEditInput().initialize(value);\r\n            this._editStartPending = false;\r\n        }, { injector: this._injector });\r\n    }\r\n    _onEditFinish() {\r\n        this._isEditing = this._editStartPending = false;\r\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\r\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\r\n        // return focus to the chip contents.\r\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\r\n            this._document.activeElement === this._document.body) {\r\n            this.primaryAction.focus();\r\n        }\r\n    }\r\n    _isRippleDisabled() {\r\n        return super._isRippleDisabled() || this._isEditing;\r\n    }\r\n    /**\r\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\r\n     * two values is guaranteed to be defined.\r\n     */\r\n    _getEditInput() {\r\n        return this.contentEditInput || this.defaultEditInput;\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChipRow, isStandalone: true, selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\", inputs: { editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"dblclick\": \"_handleDoubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"disabled ? null : -1\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\r\n            { provide: MatChip, useExisting: MatChipRow },\r\n            { provide: MAT_CHIP, useExisting: MatChipRow },\r\n        ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRow, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]', host: {\r\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\r\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\r\n                        '[class.mat-mdc-chip-editable]': 'editable',\r\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\r\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\r\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\r\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\r\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\r\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\r\n                        '[id]': 'id',\r\n                        // Has to have a negative tabindex in order to capture\r\n                        // focus and redirect it to the primary action.\r\n                        '[attr.tabindex]': 'disabled ? null : -1',\r\n                        '[attr.aria-label]': 'null',\r\n                        '[attr.aria-description]': 'null',\r\n                        '[attr.role]': 'role',\r\n                        '(focus)': '_handleFocus()',\r\n                        '(dblclick)': '_handleDoubleclick($event)',\r\n                    }, providers: [\r\n                        { provide: MatChip, useExisting: MatChipRow },\r\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\r\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction, MatChipEditInput], template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\r\n        }], ctorParameters: () => [], propDecorators: { editable: [{\r\n                type: Input\r\n            }], edited: [{\r\n                type: Output\r\n            }], defaultEditInput: [{\r\n                type: ViewChild,\r\n                args: [MatChipEditInput]\r\n            }], contentEditInput: [{\r\n                type: ContentChild,\r\n                args: [MatChipEditInput]\r\n            }] } });\r\n\r\n/**\r\n * Basic container component for the MatChip component.\r\n *\r\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\r\n */\r\nclass MatChipSet {\r\n    _elementRef = inject(ElementRef);\r\n    _changeDetectorRef = inject(ChangeDetectorRef);\r\n    _dir = inject(Directionality, { optional: true });\r\n    /** Index of the last destroyed chip that had focus. */\r\n    _lastDestroyedFocusedChipIndex = null;\r\n    /** Used to manage focus within the chip list. */\r\n    _keyManager;\r\n    /** Subject that emits when the component has been destroyed. */\r\n    _destroyed = new Subject();\r\n    /** Role to use if it hasn't been overwritten by the user. */\r\n    _defaultRole = 'presentation';\r\n    /** Combined stream of all of the child chips' focus events. */\r\n    get chipFocusChanges() {\r\n        return this._getChipStream(chip => chip._onFocus);\r\n    }\r\n    /** Combined stream of all of the child chips' destroy events. */\r\n    get chipDestroyedChanges() {\r\n        return this._getChipStream(chip => chip.destroyed);\r\n    }\r\n    /** Combined stream of all of the child chips' remove events. */\r\n    get chipRemovedChanges() {\r\n        return this._getChipStream(chip => chip.removed);\r\n    }\r\n    /** Whether the chip set is disabled. */\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = value;\r\n        this._syncChipsState();\r\n    }\r\n    _disabled = false;\r\n    /** Whether the chip list contains chips or not. */\r\n    get empty() {\r\n        return !this._chips || this._chips.length === 0;\r\n    }\r\n    /** The ARIA role applied to the chip set. */\r\n    get role() {\r\n        if (this._explicitRole) {\r\n            return this._explicitRole;\r\n        }\r\n        return this.empty ? null : this._defaultRole;\r\n    }\r\n    /** Tabindex of the chip set. */\r\n    tabIndex = 0;\r\n    set role(value) {\r\n        this._explicitRole = value;\r\n    }\r\n    _explicitRole = null;\r\n    /** Whether any of the chips inside of this chip-set has focus. */\r\n    get focused() {\r\n        return this._hasFocusedChip();\r\n    }\r\n    /** The chips that are part of this chip set. */\r\n    _chips;\r\n    /** Flat list of all the actions contained within the chips. */\r\n    _chipActions = new QueryList();\r\n    constructor() { }\r\n    ngAfterViewInit() {\r\n        this._setUpFocusManagement();\r\n        this._trackChipSetChanges();\r\n        this._trackDestroyedFocusedChip();\r\n    }\r\n    ngOnDestroy() {\r\n        this._keyManager?.destroy();\r\n        this._chipActions.destroy();\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /** Checks whether any of the chips is focused. */\r\n    _hasFocusedChip() {\r\n        return this._chips && this._chips.some(chip => chip._hasFocus());\r\n    }\r\n    /** Syncs the chip-set's state with the individual chips. */\r\n    _syncChipsState() {\r\n        this._chips?.forEach(chip => {\r\n            chip._chipListDisabled = this._disabled;\r\n            chip._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\r\n    focus() { }\r\n    /** Handles keyboard events on the chip set. */\r\n    _handleKeydown(event) {\r\n        if (this._originatesFromChip(event)) {\r\n            this._keyManager.onKeydown(event);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to ensure all indexes are valid.\r\n     *\r\n     * @param index The index to be checked.\r\n     * @returns True if the index is valid for our list of chips.\r\n     */\r\n    _isValidIndex(index) {\r\n        return index >= 0 && index < this._chips.length;\r\n    }\r\n    /**\r\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\r\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\r\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n     */\r\n    _allowFocusEscape() {\r\n        const previous = this._elementRef.nativeElement.tabIndex;\r\n        if (previous !== -1) {\r\n            // Set the tabindex directly on the element, instead of going through\r\n            // the data binding, because we aren't guaranteed that change detection\r\n            // will run quickly enough to allow focus to escape.\r\n            this._elementRef.nativeElement.tabIndex = -1;\r\n            // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\r\n            // doesn't allow enough time for the focus to escape.\r\n            setTimeout(() => (this._elementRef.nativeElement.tabIndex = previous));\r\n        }\r\n    }\r\n    /**\r\n     * Gets a stream of events from all the chips within the set.\r\n     * The stream will automatically incorporate any newly-added chips.\r\n     */\r\n    _getChipStream(mappingFunction) {\r\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\r\n    }\r\n    /** Checks whether an event comes from inside a chip element. */\r\n    _originatesFromChip(event) {\r\n        let currentElement = event.target;\r\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\r\n            if (currentElement.classList.contains('mat-mdc-chip')) {\r\n                return true;\r\n            }\r\n            currentElement = currentElement.parentElement;\r\n        }\r\n        return false;\r\n    }\r\n    /** Sets up the chip set's focus management logic. */\r\n    _setUpFocusManagement() {\r\n        // Create a flat `QueryList` containing the actions of all of the chips.\r\n        // This allows us to navigate both within the chip and move to the next/previous\r\n        // one using the existing `ListKeyManager`.\r\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\r\n            const actions = [];\r\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\r\n            this._chipActions.reset(actions);\r\n            this._chipActions.notifyOnChanges();\r\n        });\r\n        this._keyManager = new FocusKeyManager(this._chipActions)\r\n            .withVerticalOrientation()\r\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\r\n            .withHomeAndEnd()\r\n            .skipPredicate(action => this._skipPredicate(action));\r\n        // Keep the manager active index in sync so that navigation picks\r\n        // up from the current chip if the user clicks into the list directly.\r\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\r\n            const action = chip._getSourceAction(document.activeElement);\r\n            if (action) {\r\n                this._keyManager.updateActiveItem(action);\r\n            }\r\n        });\r\n        this._dir?.change\r\n            .pipe(takeUntil(this._destroyed))\r\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\r\n    }\r\n    /**\r\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n     * non-interactive and disabled actions since the user can't do anything with them.\r\n     */\r\n    _skipPredicate(action) {\r\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\r\n        // chips.\r\n        return !action.isInteractive || action.disabled;\r\n    }\r\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\r\n    _trackChipSetChanges() {\r\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\r\n            if (this.disabled) {\r\n                // Since this happens after the content has been\r\n                // checked, we need to defer it to the next tick.\r\n                Promise.resolve().then(() => this._syncChipsState());\r\n            }\r\n            this._redirectDestroyedChipFocus();\r\n        });\r\n    }\r\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\r\n    _trackDestroyedFocusedChip() {\r\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\r\n            const chipArray = this._chips.toArray();\r\n            const chipIndex = chipArray.indexOf(event.chip);\r\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\r\n            // chip. We only save the index here, rather than move the focus immediately, because we want\r\n            // to wait until the chip is removed from the chip list before focusing the next one. This\r\n            // allows us to keep focus on the same index if the chip gets swapped out.\r\n            if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\r\n                this._lastDestroyedFocusedChipIndex = chipIndex;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Finds the next appropriate chip to move focus to,\r\n     * if the currently-focused chip is destroyed.\r\n     */\r\n    _redirectDestroyedChipFocus() {\r\n        if (this._lastDestroyedFocusedChipIndex == null) {\r\n            return;\r\n        }\r\n        if (this._chips.length) {\r\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\r\n            const chipToFocus = this._chips.toArray()[newIndex];\r\n            if (chipToFocus.disabled) {\r\n                // If we're down to one disabled chip, move focus back to the set.\r\n                if (this._chips.length === 1) {\r\n                    this.focus();\r\n                }\r\n                else {\r\n                    this._keyManager.setPreviousItemActive();\r\n                }\r\n            }\r\n            else {\r\n                chipToFocus.focus();\r\n            }\r\n        }\r\n        else {\r\n            this.focus();\r\n        }\r\n        this._lastDestroyedFocusedChipIndex = null;\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipSet, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipSet, isStandalone: true, selector: \"mat-chip-set\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], role: \"role\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], ngImport: i0, template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipSet, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-set', template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, host: {\r\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                        '[attr.role]': 'role',\r\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\r\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], role: [{\r\n                type: Input\r\n            }], tabIndex: [{\r\n                type: Input,\r\n                args: [{\r\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\r\n                    }]\r\n            }], _chips: [{\r\n                type: ContentChildren,\r\n                args: [MatChip, {\r\n                        // We need to use `descendants: true`, because Ivy will no longer match\r\n                        // indirect descendants if it's left as false.\r\n                        descendants: true,\r\n                    }]\r\n            }] } });\r\n\r\n/** Change event object that is emitted when the chip listbox value has changed. */\r\nclass MatChipListboxChange {\r\n    source;\r\n    value;\r\n    constructor(\r\n    /** Chip listbox that emitted the event. */\r\n    source, \r\n    /** Value of the chip listbox when the event was emitted. */\r\n    value) {\r\n        this.source = source;\r\n        this.value = value;\r\n    }\r\n}\r\n/**\r\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)].\r\n * @docs-private\r\n */\r\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => MatChipListbox),\r\n    multi: true,\r\n};\r\n/**\r\n * An extension of the MatChipSet component that supports chip selection.\r\n * Used with MatChipOption chips.\r\n */\r\nclass MatChipListbox extends MatChipSet {\r\n    /**\r\n     * Function when touched. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\r\n    _onTouched = () => { };\r\n    /**\r\n     * Function when changed. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\r\n    _onChange = () => { };\r\n    // TODO: MDC uses `grid` here\r\n    _defaultRole = 'listbox';\r\n    /** Default chip options. */\r\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\r\n    /** Whether the user should be allowed to select multiple chips. */\r\n    get multiple() {\r\n        return this._multiple;\r\n    }\r\n    set multiple(value) {\r\n        this._multiple = value;\r\n        this._syncListboxProperties();\r\n    }\r\n    _multiple = false;\r\n    /** The array of selected chips inside the chip listbox. */\r\n    get selected() {\r\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\r\n        return this.multiple ? selectedChips : selectedChips[0];\r\n    }\r\n    /** Orientation of the chip list. */\r\n    ariaOrientation = 'horizontal';\r\n    /**\r\n     * Whether or not this chip listbox is selectable.\r\n     *\r\n     * When a chip listbox is not selectable, the selected states for all\r\n     * the chips inside the chip listbox are always ignored.\r\n     */\r\n    get selectable() {\r\n        return this._selectable;\r\n    }\r\n    set selectable(value) {\r\n        this._selectable = value;\r\n        this._syncListboxProperties();\r\n    }\r\n    _selectable = true;\r\n    /**\r\n     * A function to compare the option values with the selected values. The first argument\r\n     * is a value from an option. The second is a value from the selection. A boolean\r\n     * should be returned.\r\n     */\r\n    compareWith = (o1, o2) => o1 === o2;\r\n    /** Whether this chip listbox is required. */\r\n    required = false;\r\n    /** Whether checkmark indicator for single-selection options is hidden. */\r\n    get hideSingleSelectionIndicator() {\r\n        return this._hideSingleSelectionIndicator;\r\n    }\r\n    set hideSingleSelectionIndicator(value) {\r\n        this._hideSingleSelectionIndicator = value;\r\n        this._syncListboxProperties();\r\n    }\r\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\r\n    /** Combined stream of all of the child chips' selection change events. */\r\n    get chipSelectionChanges() {\r\n        return this._getChipStream(chip => chip.selectionChange);\r\n    }\r\n    /** Combined stream of all of the child chips' blur events. */\r\n    get chipBlurChanges() {\r\n        return this._getChipStream(chip => chip._onBlur);\r\n    }\r\n    /** The value of the listbox, which is the combined value of the selected chips. */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        if (this._chips && this._chips.length) {\r\n            this._setSelectionByValue(value, false);\r\n        }\r\n        this._value = value;\r\n    }\r\n    _value;\r\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\r\n    change = new EventEmitter();\r\n    _chips = undefined;\r\n    ngAfterContentInit() {\r\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\r\n            if (this.value !== undefined) {\r\n                Promise.resolve().then(() => {\r\n                    this._setSelectionByValue(this.value, false);\r\n                });\r\n            }\r\n            // Update listbox selectable/multiple properties on chips\r\n            this._syncListboxProperties();\r\n        });\r\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\r\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\r\n            if (!this.multiple) {\r\n                this._chips.forEach(chip => {\r\n                    if (chip !== event.source) {\r\n                        chip._setSelectedState(false, false, false);\r\n                    }\r\n                });\r\n            }\r\n            if (event.isUserInput) {\r\n                this._propagateChanges();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\r\n     * are no selected chips.\r\n     */\r\n    focus() {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        const firstSelectedChip = this._getFirstSelectedChip();\r\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\r\n            firstSelectedChip.focus();\r\n        }\r\n        else if (this._chips.length > 0) {\r\n            this._keyManager.setFirstItemActive();\r\n        }\r\n        else {\r\n            this._elementRef.nativeElement.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    writeValue(value) {\r\n        if (value != null) {\r\n            this.value = value;\r\n        }\r\n        else {\r\n            this.value = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    /** Selects all chips with value. */\r\n    _setSelectionByValue(value, isUserInput = true) {\r\n        this._clearSelection();\r\n        if (Array.isArray(value)) {\r\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\r\n        }\r\n        else {\r\n            this._selectValue(value, isUserInput);\r\n        }\r\n    }\r\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\r\n    _blur() {\r\n        if (!this.disabled) {\r\n            // Wait to see if focus moves to an individual chip.\r\n            setTimeout(() => {\r\n                if (!this.focused) {\r\n                    this._markAsTouched();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    _keydown(event) {\r\n        if (event.keyCode === TAB) {\r\n            super._allowFocusEscape();\r\n        }\r\n    }\r\n    /** Marks the field as touched */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Emits change event to set the model value. */\r\n    _propagateChanges() {\r\n        let valueToEmit = null;\r\n        if (Array.isArray(this.selected)) {\r\n            valueToEmit = this.selected.map(chip => chip.value);\r\n        }\r\n        else {\r\n            valueToEmit = this.selected ? this.selected.value : undefined;\r\n        }\r\n        this._value = valueToEmit;\r\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\r\n        this._onChange(valueToEmit);\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /**\r\n     * Deselects every chip in the listbox.\r\n     * @param skip Chip that should not be deselected.\r\n     */\r\n    _clearSelection(skip) {\r\n        this._chips.forEach(chip => {\r\n            if (chip !== skip) {\r\n                chip.deselect();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Finds and selects the chip based on its value.\r\n     * @returns Chip that has the corresponding value.\r\n     */\r\n    _selectValue(value, isUserInput) {\r\n        const correspondingChip = this._chips.find(chip => {\r\n            return chip.value != null && this.compareWith(chip.value, value);\r\n        });\r\n        if (correspondingChip) {\r\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\r\n        }\r\n        return correspondingChip;\r\n    }\r\n    /** Syncs the chip-listbox selection state with the individual chips. */\r\n    _syncListboxProperties() {\r\n        if (this._chips) {\r\n            // Defer setting the value in order to avoid the \"Expression\r\n            // has changed after it was checked\" errors from Angular.\r\n            Promise.resolve().then(() => {\r\n                this._chips.forEach(chip => {\r\n                    chip._chipListMultiple = this.multiple;\r\n                    chip.chipListSelectable = this._selectable;\r\n                    chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\r\n                    chip._changeDetectorRef.markForCheck();\r\n                });\r\n            });\r\n        }\r\n    }\r\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\r\n    _getFirstSelectedChip() {\r\n        if (Array.isArray(this.selected)) {\r\n            return this.selected.length ? this.selected[0] : undefined;\r\n        }\r\n        else {\r\n            return this.selected;\r\n        }\r\n    }\r\n    /**\r\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\r\n     * non-interactive actions since the user can't do anything with them.\r\n     */\r\n    _skipPredicate(action) {\r\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\r\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\r\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\r\n        // exceptions for compound widgets.\r\n        //\r\n        // From [Developing a Keyboard Interface](\r\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\r\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\r\n        //   Listbox...\"\r\n        return !action.isInteractive;\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipListbox, isStandalone: true, selector: \"mat-chip-listbox\", inputs: { multiple: [\"multiple\", \"multiple\", booleanAttribute], ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: [\"selectable\", \"selectable\", booleanAttribute], compareWith: \"compareWith\", required: [\"required\", \"required\", booleanAttribute], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"(disabled || empty) ? -1 : tabIndex\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipListbox, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-listbox', template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, host: {\r\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\r\n                        '[attr.role]': 'role',\r\n                        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\r\n                        '[attr.aria-required]': 'role ? required : null',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[attr.aria-multiselectable]': 'multiple',\r\n                        '[attr.aria-orientation]': 'ariaOrientation',\r\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-list-required]': 'required',\r\n                        '(focus)': 'focus()',\r\n                        '(blur)': '_blur()',\r\n                        '(keydown)': '_keydown($event)',\r\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\r\n        }], propDecorators: { multiple: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], ariaOrientation: [{\r\n                type: Input,\r\n                args: ['aria-orientation']\r\n            }], selectable: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], compareWith: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], hideSingleSelectionIndicator: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], value: [{\r\n                type: Input\r\n            }], change: [{\r\n                type: Output\r\n            }], _chips: [{\r\n                type: ContentChildren,\r\n                args: [MatChipOption, {\r\n                        // We need to use `descendants: true`, because Ivy will no longer match\r\n                        // indirect descendants if it's left as false.\r\n                        descendants: true,\r\n                    }]\r\n            }] } });\r\n\r\n/** Change event object that is emitted when the chip grid value has changed. */\r\nclass MatChipGridChange {\r\n    source;\r\n    value;\r\n    constructor(\r\n    /** Chip grid that emitted the event. */\r\n    source, \r\n    /** Value of the chip grid when the event was emitted. */\r\n    value) {\r\n        this.source = source;\r\n        this.value = value;\r\n    }\r\n}\r\n/**\r\n * An extension of the MatChipSet component used with MatChipRow chips and\r\n * the matChipInputFor directive.\r\n */\r\nclass MatChipGrid extends MatChipSet {\r\n    ngControl = inject(NgControl, { optional: true, self: true });\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    controlType = 'mat-chip-grid';\r\n    /** The chip input to add more chips */\r\n    _chipInput;\r\n    _defaultRole = 'grid';\r\n    _errorStateTracker;\r\n    /**\r\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\r\n     */\r\n    _ariaDescribedbyIds = [];\r\n    /**\r\n     * Function when touched. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\r\n    _onTouched = () => { };\r\n    /**\r\n     * Function when changed. Set as part of ControlValueAccessor implementation.\r\n     * @docs-private\r\n     */\r\n    _onChange = () => { };\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get disabled() {\r\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = value;\r\n        this._syncChipsState();\r\n        this.stateChanges.next();\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get id() {\r\n        return this._chipInput.id;\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get empty() {\r\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get placeholder() {\r\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\r\n    }\r\n    set placeholder(value) {\r\n        this._placeholder = value;\r\n        this.stateChanges.next();\r\n    }\r\n    _placeholder;\r\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\r\n    get focused() {\r\n        return this._chipInput.focused || this._hasFocusedChip();\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get required() {\r\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\r\n    }\r\n    set required(value) {\r\n        this._required = value;\r\n        this.stateChanges.next();\r\n    }\r\n    _required;\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get shouldLabelFloat() {\r\n        return !this.empty || this.focused;\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    _value = [];\r\n    /** An object used to control when error messages are shown. */\r\n    get errorStateMatcher() {\r\n        return this._errorStateTracker.matcher;\r\n    }\r\n    set errorStateMatcher(value) {\r\n        this._errorStateTracker.matcher = value;\r\n    }\r\n    /** Combined stream of all of the child chips' blur events. */\r\n    get chipBlurChanges() {\r\n        return this._getChipStream(chip => chip._onBlur);\r\n    }\r\n    /** Emits when the chip grid value has been changed by the user. */\r\n    change = new EventEmitter();\r\n    /**\r\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\r\n     * to facilitate the two-way binding for the `value` input.\r\n     * @docs-private\r\n     */\r\n    valueChange = new EventEmitter();\r\n    _chips = undefined;\r\n    /**\r\n     * Emits whenever the component state changes and should cause the parent\r\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\r\n     * @docs-private\r\n     */\r\n    stateChanges = new Subject();\r\n    /** Whether the chip grid is in an error state. */\r\n    get errorState() {\r\n        return this._errorStateTracker.errorState;\r\n    }\r\n    set errorState(value) {\r\n        this._errorStateTracker.errorState = value;\r\n    }\r\n    constructor() {\r\n        super();\r\n        const parentForm = inject(NgForm, { optional: true });\r\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\r\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\r\n        if (this.ngControl) {\r\n            this.ngControl.valueAccessor = this;\r\n        }\r\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\r\n    }\r\n    ngAfterContentInit() {\r\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\r\n            this._blur();\r\n            this.stateChanges.next();\r\n        });\r\n        merge(this.chipFocusChanges, this._chips.changes)\r\n            .pipe(takeUntil(this._destroyed))\r\n            .subscribe(() => this.stateChanges.next());\r\n    }\r\n    ngAfterViewInit() {\r\n        super.ngAfterViewInit();\r\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        if (this.ngControl) {\r\n            // We need to re-evaluate this on every change detection cycle, because there are some\r\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\r\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\r\n            this.updateErrorState();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        super.ngOnDestroy();\r\n        this.stateChanges.complete();\r\n    }\r\n    /** Associates an HTML input element with this chip grid. */\r\n    registerInput(inputElement) {\r\n        this._chipInput = inputElement;\r\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    onContainerClick(event) {\r\n        if (!this.disabled && !this._originatesFromChip(event)) {\r\n            this.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Focuses the first chip in this chip grid, or the associated input when there\r\n     * are no eligible chips.\r\n     */\r\n    focus() {\r\n        if (this.disabled || this._chipInput.focused) {\r\n            return;\r\n        }\r\n        if (!this._chips.length || this._chips.first.disabled) {\r\n            // Delay until the next tick, because this can cause a \"changed after checked\"\r\n            // error if the input does something on focus (e.g. opens an autocomplete).\r\n            Promise.resolve().then(() => this._chipInput.focus());\r\n        }\r\n        else {\r\n            const activeItem = this._keyManager.activeItem;\r\n            if (activeItem) {\r\n                activeItem.focus();\r\n            }\r\n            else {\r\n                this._keyManager.setFirstItemActive();\r\n            }\r\n        }\r\n        this.stateChanges.next();\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    get describedByIds() {\r\n        return this._chipInput?.describedByIds || [];\r\n    }\r\n    /**\r\n     * Implemented as part of MatFormFieldControl.\r\n     * @docs-private\r\n     */\r\n    setDescribedByIds(ids) {\r\n        // We must keep this up to date to handle the case where ids are set\r\n        // before the chip input is registered.\r\n        this._ariaDescribedbyIds = ids;\r\n        this._chipInput?.setDescribedByIds(ids);\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    writeValue(value) {\r\n        // The user is responsible for creating the child chips, so we just store the value.\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    /**\r\n     * Implemented as part of ControlValueAccessor.\r\n     * @docs-private\r\n     */\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.stateChanges.next();\r\n    }\r\n    /** Refreshes the error state of the chip grid. */\r\n    updateErrorState() {\r\n        this._errorStateTracker.updateErrorState();\r\n    }\r\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\r\n    _blur() {\r\n        if (!this.disabled) {\r\n            // Check whether the focus moved to chip input.\r\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\r\n            // to chip input, do nothing.\r\n            // Timeout is needed to wait for the focus() event trigger on chip input.\r\n            setTimeout(() => {\r\n                if (!this.focused) {\r\n                    this._propagateChanges();\r\n                    this._markAsTouched();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\r\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\r\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\r\n     */\r\n    _allowFocusEscape() {\r\n        if (!this._chipInput.focused) {\r\n            super._allowFocusEscape();\r\n        }\r\n    }\r\n    /** Handles custom keyboard events. */\r\n    _handleKeydown(event) {\r\n        const keyCode = event.keyCode;\r\n        const activeItem = this._keyManager.activeItem;\r\n        if (keyCode === TAB) {\r\n            if (this._chipInput.focused &&\r\n                hasModifierKey(event, 'shiftKey') &&\r\n                this._chips.length &&\r\n                !this._chips.last.disabled) {\r\n                event.preventDefault();\r\n                if (activeItem) {\r\n                    this._keyManager.setActiveItem(activeItem);\r\n                }\r\n                else {\r\n                    this._focusLastChip();\r\n                }\r\n            }\r\n            else {\r\n                // Use the super method here since it doesn't check for the input\r\n                // focused state. This allows focus to escape if there's only one\r\n                // disabled chip left in the list.\r\n                super._allowFocusEscape();\r\n            }\r\n        }\r\n        else if (!this._chipInput.focused) {\r\n            // The up and down arrows are supposed to navigate between the individual rows in the grid.\r\n            // We do this by filtering the actions down to the ones that have the same `_isPrimary`\r\n            // flag as the active action and moving focus between them ourseles instead of delegating\r\n            // to the key manager. For more information, see #29359 and:\r\n            // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\r\n            if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\r\n                const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\r\n                const currentIndex = eligibleActions.indexOf(activeItem);\r\n                const delta = event.keyCode === UP_ARROW ? -1 : 1;\r\n                event.preventDefault();\r\n                if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\r\n                    this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\r\n                }\r\n            }\r\n            else {\r\n                super._handleKeydown(event);\r\n            }\r\n        }\r\n        this.stateChanges.next();\r\n    }\r\n    _focusLastChip() {\r\n        if (this._chips.length) {\r\n            this._chips.last.focus();\r\n        }\r\n    }\r\n    /** Emits change event to set the model value. */\r\n    _propagateChanges() {\r\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\r\n        this._value = valueToEmit;\r\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\r\n        this.valueChange.emit(valueToEmit);\r\n        this._onChange(valueToEmit);\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Mark the field as touched */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._changeDetectorRef.markForCheck();\r\n        this.stateChanges.next();\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipGrid, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipGrid, isStandalone: true, selector: \"mat-chip-grid\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"attr.tabindex\": \"(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipGrid, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-chip-grid', template: `\r\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `, host: {\r\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\r\n                        '[attr.role]': 'role',\r\n                        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[attr.aria-invalid]': 'errorState',\r\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\r\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\r\n                        '[class.mat-mdc-chip-list-required]': 'required',\r\n                        '(focus)': 'focus()',\r\n                        '(blur)': '_blur()',\r\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\r\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], placeholder: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], value: [{\r\n                type: Input\r\n            }], errorStateMatcher: [{\r\n                type: Input\r\n            }], change: [{\r\n                type: Output\r\n            }], valueChange: [{\r\n                type: Output\r\n            }], _chips: [{\r\n                type: ContentChildren,\r\n                args: [MatChipRow, {\r\n                        // We need to use `descendants: true`, because Ivy will no longer match\r\n                        // indirect descendants if it's left as false.\r\n                        descendants: true,\r\n                    }]\r\n            }] } });\r\n\r\n/**\r\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\r\n * May be placed inside or outside of a `<mat-chip-grid>`.\r\n */\r\nclass MatChipInput {\r\n    _elementRef = inject(ElementRef);\r\n    /** Whether the control is focused. */\r\n    focused = false;\r\n    /** Register input for chip list */\r\n    get chipGrid() {\r\n        return this._chipGrid;\r\n    }\r\n    set chipGrid(value) {\r\n        if (value) {\r\n            this._chipGrid = value;\r\n            this._chipGrid.registerInput(this);\r\n        }\r\n    }\r\n    _chipGrid;\r\n    /**\r\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\r\n     */\r\n    addOnBlur = false;\r\n    /**\r\n     * The list of key codes that will trigger a chipEnd event.\r\n     *\r\n     * Defaults to `[ENTER]`.\r\n     */\r\n    separatorKeyCodes;\r\n    /** Emitted when a chip is to be added. */\r\n    chipEnd = new EventEmitter();\r\n    /** The input's placeholder text. */\r\n    placeholder = '';\r\n    /** Unique id for the input. */\r\n    id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\r\n    /** Whether the input is disabled. */\r\n    get disabled() {\r\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = value;\r\n    }\r\n    _disabled = false;\r\n    /** Whether the input is readonly. */\r\n    readonly = false;\r\n    /** Whether the input should remain interactive when it is disabled. */\r\n    disabledInteractive;\r\n    /** Whether the input is empty. */\r\n    get empty() {\r\n        return !this.inputElement.value;\r\n    }\r\n    /** The native input element to which this directive is attached. */\r\n    inputElement;\r\n    constructor() {\r\n        const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\r\n        const formField = inject(MAT_FORM_FIELD, { optional: true });\r\n        this.inputElement = this._elementRef.nativeElement;\r\n        this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\r\n        this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\r\n        if (formField) {\r\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\r\n        }\r\n    }\r\n    ngOnChanges() {\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    ngOnDestroy() {\r\n        this.chipEnd.complete();\r\n    }\r\n    /** Utility method to make host definition/tests more clear. */\r\n    _keydown(event) {\r\n        if (this.empty && event.keyCode === BACKSPACE) {\r\n            // Ignore events where the user is holding down backspace\r\n            // so that we don't accidentally remove too many chips.\r\n            if (!event.repeat) {\r\n                this._chipGrid._focusLastChip();\r\n            }\r\n            event.preventDefault();\r\n        }\r\n        else {\r\n            this._emitChipEnd(event);\r\n        }\r\n    }\r\n    /** Checks to see if the blur should emit the (chipEnd) event. */\r\n    _blur() {\r\n        if (this.addOnBlur) {\r\n            this._emitChipEnd();\r\n        }\r\n        this.focused = false;\r\n        // Blur the chip list if it is not focused\r\n        if (!this._chipGrid.focused) {\r\n            this._chipGrid._blur();\r\n        }\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    _focus() {\r\n        this.focused = true;\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\r\n    _emitChipEnd(event) {\r\n        if (!event || (this._isSeparatorKey(event) && !event.repeat)) {\r\n            this.chipEnd.emit({\r\n                input: this.inputElement,\r\n                value: this.inputElement.value,\r\n                chipInput: this,\r\n            });\r\n            event?.preventDefault();\r\n        }\r\n    }\r\n    _onInput() {\r\n        // Let chip list know whenever the value changes.\r\n        this._chipGrid.stateChanges.next();\r\n    }\r\n    /** Focuses the input. */\r\n    focus() {\r\n        this.inputElement.focus();\r\n    }\r\n    /** Clears the input */\r\n    clear() {\r\n        this.inputElement.value = '';\r\n    }\r\n    /**\r\n     * Implemented as part of MatChipTextControl.\r\n     * @docs-private\r\n     */\r\n    get describedByIds() {\r\n        const element = this._elementRef.nativeElement;\r\n        const existingDescribedBy = element.getAttribute('aria-describedby');\r\n        return existingDescribedBy?.split(' ') || [];\r\n    }\r\n    setDescribedByIds(ids) {\r\n        const element = this._elementRef.nativeElement;\r\n        // Set the value directly in the DOM since this binding\r\n        // is prone to \"changed after checked\" errors.\r\n        if (ids.length) {\r\n            element.setAttribute('aria-describedby', ids.join(' '));\r\n        }\r\n        else {\r\n            element.removeAttribute('aria-describedby');\r\n        }\r\n    }\r\n    /** Checks whether a keycode is one of the configured separators. */\r\n    _isSeparatorKey(event) {\r\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\r\n    }\r\n    /** Gets the value to set on the `readonly` attribute. */\r\n    _getReadonlyAttribute() {\r\n        return this.readonly || (this.disabled && this.disabledInteractive) ? 'true' : null;\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipInput, isStandalone: true, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute], readonly: [\"readonly\", \"readonly\", booleanAttribute], disabledInteractive: [\"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled && !disabledInteractive ? \\\"\\\" : null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.aria-disabled\": \"disabled && disabledInteractive ? \\\"true\\\" : null\", \"attr.readonly\": \"_getReadonlyAttribute()\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipInput, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'input[matChipInputFor]',\r\n                    exportAs: 'matChipInput, matChipInputFor',\r\n                    host: {\r\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\r\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\r\n                        // the MDC chips were landed initially with it.\r\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\r\n                        '(keydown)': '_keydown($event)',\r\n                        '(blur)': '_blur()',\r\n                        '(focus)': '_focus()',\r\n                        '(input)': '_onInput()',\r\n                        '[id]': 'id',\r\n                        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\r\n                        '[attr.placeholder]': 'placeholder || null',\r\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\r\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\r\n                        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\r\n                        '[attr.readonly]': '_getReadonlyAttribute()',\r\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\r\n                    },\r\n                }]\r\n        }], ctorParameters: () => [], propDecorators: { chipGrid: [{\r\n                type: Input,\r\n                args: ['matChipInputFor']\r\n            }], addOnBlur: [{\r\n                type: Input,\r\n                args: [{ alias: 'matChipInputAddOnBlur', transform: booleanAttribute }]\r\n            }], separatorKeyCodes: [{\r\n                type: Input,\r\n                args: ['matChipInputSeparatorKeyCodes']\r\n            }], chipEnd: [{\r\n                type: Output,\r\n                args: ['matChipInputTokenEnd']\r\n            }], placeholder: [{\r\n                type: Input\r\n            }], id: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], readonly: [{\r\n                type: Input,\r\n                args: [{ transform: booleanAttribute }]\r\n            }], disabledInteractive: [{\r\n                type: Input,\r\n                args: [{ alias: 'matChipInputDisabledInteractive', transform: booleanAttribute }]\r\n            }] } });\r\n\r\nconst CHIP_DECLARATIONS = [\r\n    MatChip,\r\n    MatChipAvatar,\r\n    MatChipEditInput,\r\n    MatChipGrid,\r\n    MatChipInput,\r\n    MatChipListbox,\r\n    MatChipOption,\r\n    MatChipRemove,\r\n    MatChipRow,\r\n    MatChipSet,\r\n    MatChipTrailingIcon,\r\n];\r\nclass MatChipsModule {\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, imports: [MatCommonModule, MatRippleModule, MatChipAction, MatChip,\r\n            MatChipAvatar,\r\n            MatChipEditInput,\r\n            MatChipGrid,\r\n            MatChipInput,\r\n            MatChipListbox,\r\n            MatChipOption,\r\n            MatChipRemove,\r\n            MatChipRow,\r\n            MatChipSet,\r\n            MatChipTrailingIcon], exports: [MatCommonModule, MatChip,\r\n            MatChipAvatar,\r\n            MatChipEditInput,\r\n            MatChipGrid,\r\n            MatChipInput,\r\n            MatChipListbox,\r\n            MatChipOption,\r\n            MatChipRemove,\r\n            MatChipRow,\r\n            MatChipSet,\r\n            MatChipTrailingIcon] });\r\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, providers: [\r\n            ErrorStateMatcher,\r\n            {\r\n                provide: MAT_CHIPS_DEFAULT_OPTIONS,\r\n                useValue: {\r\n                    separatorKeyCodes: [ENTER],\r\n                },\r\n            },\r\n        ], imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\r\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\r\n                    providers: [\r\n                        ErrorStateMatcher,\r\n                        {\r\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\r\n                            useValue: {\r\n                                separatorKeyCodes: [ENTER],\r\n                            },\r\n                        },\r\n                    ],\r\n                }]\r\n        }] });\r\n\r\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\r\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}