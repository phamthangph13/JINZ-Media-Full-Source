{"ast":null,"code":"import { environment } from '../../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PackageService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/admin/packages`;\n  }\n  getPackages() {\n    return this.http.get(this.apiUrl);\n  }\n  getPackage(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createPackage(packageData) {\n    return this.http.post(this.apiUrl, packageData);\n  }\n  updatePackage(id, packageData) {\n    return this.http.put(`${this.apiUrl}/${id}`, packageData);\n  }\n  deletePackage(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  togglePackageStatus(id) {\n    return this.http.patch(`${this.apiUrl}/${id}/toggle-status`, {});\n  }\n  static #_ = this.ɵfac = function PackageService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || PackageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PackageService,\n    factory: PackageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","PackageService","constructor","http","apiUrl","getPackages","get","getPackage","id","createPackage","packageData","post","updatePackage","put","deletePackage","delete","togglePackageStatus","patch","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\winni\\OneDrive\\Desktop\\JINZ-Media-Full-Source\\frontend\\src\\app\\features\\package-management\\services\\package.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nexport interface Package {\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n  image: string | null;\r\n  type: 'monthly' | 'yearly' | 'lifetime';\r\n  price: number;\r\n  originalPrice?: number;\r\n  currency: 'VND' | 'USD';\r\n  duration?: {\r\n    value: number;\r\n    unit: 'days' | 'months' | 'years';\r\n  };\r\n  features: Array<{\r\n    serviceId: {\r\n      _id: string;\r\n      name: string;\r\n      description: string;\r\n      permission: string;\r\n      type: string;\r\n      category: string;\r\n    };\r\n    isUnlimited: boolean;\r\n    limit: number;\r\n  }>;\r\n  isActive: boolean;\r\n  isPopular: boolean;\r\n  displayOrder: number;\r\n  metadata?: {\r\n    color?: string;\r\n    icon?: string;\r\n    badge?: string;\r\n  };\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PackageService {\r\n  private apiUrl = `${environment.apiUrl}/admin/packages`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPackages(): Observable<{ success: boolean; data: Package[] }> {\r\n    return this.http.get<{ success: boolean; data: Package[] }>(this.apiUrl);\r\n  }\r\n\r\n  getPackage(id: string): Observable<{ success: boolean; data: Package }> {\r\n    return this.http.get<{ success: boolean; data: Package }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createPackage(packageData: FormData): Observable<{ success: boolean; data: Package }> {\r\n    return this.http.post<{ success: boolean; data: Package }>(this.apiUrl, packageData);\r\n  }\r\n\r\n  updatePackage(id: string, packageData: FormData): Observable<{ success: boolean; data: Package }> {\r\n    return this.http.put<{ success: boolean; data: Package }>(`${this.apiUrl}/${id}`, packageData);\r\n  }\r\n\r\n  deletePackage(id: string): Observable<{ success: boolean }> {\r\n    return this.http.delete<{ success: boolean }>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  togglePackageStatus(id: string): Observable<{ success: boolean; data: Package }> {\r\n    return this.http.patch<{ success: boolean; data: Package }>(`${this.apiUrl}/${id}/toggle-status`, {});\r\n  }\r\n} "],"mappings":"AAGA,SAASA,WAAW,QAAQ,sCAAsC;;;AA0ClE,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,iBAAiB;EAEhB;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAwC,IAAI,CAACF,MAAM,CAAC;EAC1E;EAEAG,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAsC,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACnF;EAEAC,aAAaA,CAACC,WAAqB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAsC,IAAI,CAACP,MAAM,EAAEM,WAAW,CAAC;EACtF;EAEAE,aAAaA,CAACJ,EAAU,EAAEE,WAAqB;IAC7C,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAsC,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,WAAW,CAAC;EAChG;EAEAI,aAAaA,CAACN,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAuB,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvE;EAEAQ,mBAAmBA,CAACR,EAAU;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACc,KAAK,CAAsC,GAAG,IAAI,CAACb,MAAM,IAAII,EAAE,gBAAgB,EAAE,EAAE,CAAC;EACvG;EAAC,QAAAU,CAAA,G;qCA3BUjB,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdtB,cAAc;IAAAuB,OAAA,EAAdvB,cAAc,CAAAwB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}