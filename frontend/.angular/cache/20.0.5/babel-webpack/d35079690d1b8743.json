{"ast":null,"code":"import { _IdGenerator } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Input, ElementRef, NgZone, Renderer2, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ChangeDetectorRef, viewChild, computed, contentChild, signal, afterRenderEffect, ContentChild, ContentChildren } from '@angular/core';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { startWith, map, pairwise, filter, takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\n\n/** The floating label for a `mat-form-field`. */\nconst _c0 = [\"notch\"];\nconst _c1 = [\"matFormFieldNotchedOutline\", \"\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"iconPrefixContainer\"];\nconst _c4 = [\"textPrefixContainer\"];\nconst _c5 = [\"iconSuffixContainer\"];\nconst _c6 = [\"textSuffixContainer\"];\nconst _c7 = [\"textField\"];\nconst _c8 = [\"*\", [[\"mat-label\"]], [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"]], [[\"\", \"matTextPrefix\", \"\"]], [[\"\", \"matTextSuffix\", \"\"]], [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"]], [[\"mat-error\"], [\"\", \"matError\", \"\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c9 = [\"*\", \"mat-label\", \"[matPrefix], [matIconPrefix]\", \"[matTextPrefix]\", \"[matTextSuffix]\", \"[matSuffix], [matIconSuffix]\", \"mat-error, [matError]\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nfunction MatFormField_ng_template_0_Conditional_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nfunction MatFormField_ng_template_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵconditionalCreate(2, MatFormField_ng_template_0_Conditional_0_Conditional_2_Template, 1, 0, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"floating\", ctx_r1._shouldLabelFloat())(\"monitorResize\", ctx_r1._hasOutline())(\"id\", ctx_r1._labelId);\n    i0.ɵɵattribute(\"for\", ctx_r1._control.disableAutomaticLabeling ? null : ctx_r1._control.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(!ctx_r1.hideRequiredMarker && ctx_r1._control.required ? 2 : -1);\n  }\n}\nfunction MatFormField_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, MatFormField_ng_template_0_Conditional_0_Template, 3, 5, \"label\", 19);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1._hasFloatingLabel() ? 0 : -1);\n  }\n}\nfunction MatFormField_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction MatFormField_Conditional_6_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_6_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_6_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵconditionalCreate(1, MatFormField_Conditional_6_Conditional_1_Template, 1, 1, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matFormFieldNotchedOutlineOpen\", ctx_r1._shouldLabelFloat());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!ctx_r1._forceDisplayInfixLabel() ? 1 : -1);\n  }\n}\nfunction MatFormField_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10, 2);\n    i0.ɵɵprojection(2, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11, 3);\n    i0.ɵɵprojection(2, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_10_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_10_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 4);\n    i0.ɵɵprojection(2, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15, 5);\n    i0.ɵɵprojection(2, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction MatFormField_Case_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 6);\n  }\n}\nfunction MatFormField_Case_18_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", ctx_r1._hintLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.hintLabel);\n  }\n}\nfunction MatFormField_Case_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, MatFormField_Case_18_Conditional_0_Template, 2, 2, \"mat-hint\", 21);\n    i0.ɵɵprojection(1, 7);\n    i0.ɵɵelement(2, \"div\", 22);\n    i0.ɵɵprojection(3, 8);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1.hintLabel ? 0 : -1);\n  }\n}\nclass MatLabel {\n  static ɵfac = function MatLabel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatLabel)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatLabel,\n    selectors: [[\"mat-label\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-label'\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Injection token that can be used to reference instances of `MatError`. It serves as\r\n * alternative token to the actual `MatError` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nclass MatError {\n  id = inject(_IdGenerator).getId('mat-mdc-error-');\n  constructor() {}\n  static ɵfac = function MatError_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatError)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatError,\n    selectors: [[\"mat-error\"], [\"\", \"matError\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-form-field-error\", \"mat-mdc-form-field-bottom-align\"],\n    hostVars: 1,\n    hostBindings: function MatError_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_ERROR,\n      useExisting: MatError\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatError, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-error, [matError]',\n      host: {\n        'class': 'mat-mdc-form-field-error mat-mdc-form-field-bottom-align',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MAT_ERROR,\n        useExisting: MatError\n      }]\n    }]\n  }], () => [], {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n  /** Whether to align the hint label at the start or end of the line. */\n  align = 'start';\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n  id = inject(_IdGenerator).getId('mat-mdc-hint-');\n  static ɵfac = function MatHint_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatHint)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatHint,\n    selectors: [[\"mat-hint\"]],\n    hostAttrs: [1, \"mat-mdc-form-field-hint\", \"mat-mdc-form-field-bottom-align\"],\n    hostVars: 4,\n    hostBindings: function MatHint_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"align\", null);\n        i0.ɵɵclassProp(\"mat-mdc-form-field-hint-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\",\n      id: \"id\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHint, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-hint',\n      host: {\n        'class': 'mat-mdc-form-field-hint mat-mdc-form-field-bottom-align',\n        '[class.mat-mdc-form-field-hint-end]': 'align === \"end\"',\n        '[id]': 'id',\n        // Remove align attribute to prevent it from interfering with layout.\n        '[attr.align]': 'null'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\r\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\r\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n  set _isTextSelector(value) {\n    this._isText = true;\n  }\n  _isText = false;\n  static ɵfac = function MatPrefix_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPrefix)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatPrefix,\n    selectors: [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"], [\"\", \"matTextPrefix\", \"\"]],\n    inputs: {\n      _isTextSelector: [0, \"matTextPrefix\", \"_isTextSelector\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_PREFIX,\n      useExisting: MatPrefix\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPrefix, [{\n    type: Directive,\n    args: [{\n      selector: '[matPrefix], [matIconPrefix], [matTextPrefix]',\n      providers: [{\n        provide: MAT_PREFIX,\n        useExisting: MatPrefix\n      }]\n    }]\n  }], null, {\n    _isTextSelector: [{\n      type: Input,\n      args: ['matTextPrefix']\n    }]\n  });\n})();\n\n/**\r\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\r\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n  set _isTextSelector(value) {\n    this._isText = true;\n  }\n  _isText = false;\n  static ɵfac = function MatSuffix_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSuffix)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSuffix,\n    selectors: [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"], [\"\", \"matTextSuffix\", \"\"]],\n    inputs: {\n      _isTextSelector: [0, \"matTextSuffix\", \"_isTextSelector\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SUFFIX,\n      useExisting: MatSuffix\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSuffix, [{\n    type: Directive,\n    args: [{\n      selector: '[matSuffix], [matIconSuffix], [matTextSuffix]',\n      providers: [{\n        provide: MAT_SUFFIX,\n        useExisting: MatSuffix\n      }]\n    }]\n  }], null, {\n    _isTextSelector: [{\n      type: Input,\n      args: ['matTextSuffix']\n    }]\n  });\n})();\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = new InjectionToken('FloatingLabelParent');\n/**\r\n * Internal directive that maintains a MDC floating label. This directive does not\r\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\r\n * including it just to measure the label width and toggle some classes.\r\n *\r\n * The use of a directive allows us to conditionally render a floating label in the\r\n * template without having to manually manage instantiation and destruction of the\r\n * floating label component based on.\r\n *\r\n * The component is responsible for setting up the floating label styles, measuring label\r\n * width for the outline notch, and providing inputs that can be used to toggle the\r\n * label's floating or required state.\r\n */\nclass MatFormFieldFloatingLabel {\n  _elementRef = inject(ElementRef);\n  /** Whether the label is floating. */\n  get floating() {\n    return this._floating;\n  }\n  set floating(value) {\n    this._floating = value;\n    if (this.monitorResize) {\n      this._handleResize();\n    }\n  }\n  _floating = false;\n  /** Whether to monitor for resize events on the floating label. */\n  get monitorResize() {\n    return this._monitorResize;\n  }\n  set monitorResize(value) {\n    this._monitorResize = value;\n    if (this._monitorResize) {\n      this._subscribeToResize();\n    } else {\n      this._resizeSubscription.unsubscribe();\n    }\n  }\n  _monitorResize = false;\n  /** The shared ResizeObserver. */\n  _resizeObserver = inject(SharedResizeObserver);\n  /** The Angular zone. */\n  _ngZone = inject(NgZone);\n  /** The parent form-field. */\n  _parent = inject(FLOATING_LABEL_PARENT);\n  /** The current resize event subscription. */\n  _resizeSubscription = new Subscription();\n  constructor() {}\n  ngOnDestroy() {\n    this._resizeSubscription.unsubscribe();\n  }\n  /** Gets the width of the label. Used for the outline notch. */\n  getWidth() {\n    return estimateScrollWidth(this._elementRef.nativeElement);\n  }\n  /** Gets the HTML element for the floating label. */\n  get element() {\n    return this._elementRef.nativeElement;\n  }\n  /** Handles resize events from the ResizeObserver. */\n  _handleResize() {\n    // In the case where the label grows in size, the following sequence of events occurs:\n    // 1. The label grows by 1px triggering the ResizeObserver\n    // 2. The notch is expanded to accommodate the entire label\n    // 3. The label expands to its full width, triggering the ResizeObserver again\n    //\n    // This is expected, but If we allow this to all happen within the same macro task it causes an\n    // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n    // the next macro task.\n    setTimeout(() => this._parent._handleLabelResized());\n  }\n  /** Subscribes to resize events. */\n  _subscribeToResize() {\n    this._resizeSubscription.unsubscribe();\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeSubscription = this._resizeObserver.observe(this._elementRef.nativeElement, {\n        box: 'border-box'\n      }).subscribe(() => this._handleResize());\n    });\n  }\n  static ɵfac = function MatFormFieldFloatingLabel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldFloatingLabel)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFormFieldFloatingLabel,\n    selectors: [[\"label\", \"matFormFieldFloatingLabel\", \"\"]],\n    hostAttrs: [1, \"mdc-floating-label\", \"mat-mdc-floating-label\"],\n    hostVars: 2,\n    hostBindings: function MatFormFieldFloatingLabel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-floating-label--float-above\", ctx.floating);\n      }\n    },\n    inputs: {\n      floating: \"floating\",\n      monitorResize: \"monitorResize\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldFloatingLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'label[matFormFieldFloatingLabel]',\n      host: {\n        'class': 'mdc-floating-label mat-mdc-floating-label',\n        '[class.mdc-floating-label--float-above]': 'floating'\n      }\n    }]\n  }], () => [], {\n    floating: [{\n      type: Input\n    }],\n    monitorResize: [{\n      type: Input\n    }]\n  });\n})();\n/**\r\n * Estimates the scroll width of an element.\r\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\r\n */\nfunction estimateScrollWidth(element) {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n  const clone = htmlEl.cloneNode(true);\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  clone.remove();\n  return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\r\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\r\n * directive allows us to conditionally render a line-ripple in the template without having\r\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\r\n *\r\n * The directive sets up the styles for the line-ripple and provides an API for activating\r\n * and deactivating the line-ripple.\r\n */\nclass MatFormFieldLineRipple {\n  _elementRef = inject(ElementRef);\n  _cleanupTransitionEnd;\n  constructor() {\n    const ngZone = inject(NgZone);\n    const renderer = inject(Renderer2);\n    ngZone.runOutsideAngular(() => {\n      this._cleanupTransitionEnd = renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionEnd);\n    });\n  }\n  activate() {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(DEACTIVATING_CLASS);\n    classList.add(ACTIVATE_CLASS);\n  }\n  deactivate() {\n    this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n  }\n  _handleTransitionEnd = event => {\n    const classList = this._elementRef.nativeElement.classList;\n    const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n    if (event.propertyName === 'opacity' && isDeactivating) {\n      classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n    }\n  };\n  ngOnDestroy() {\n    this._cleanupTransitionEnd();\n  }\n  static ɵfac = function MatFormFieldLineRipple_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldLineRipple)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFormFieldLineRipple,\n    selectors: [[\"div\", \"matFormFieldLineRipple\", \"\"]],\n    hostAttrs: [1, \"mdc-line-ripple\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldLineRipple, [{\n    type: Directive,\n    args: [{\n      selector: 'div[matFormFieldLineRipple]',\n      host: {\n        'class': 'mdc-line-ripple'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\r\n * Internal component that creates an instance of the MDC notched-outline component.\r\n *\r\n * The component sets up the HTML structure and styles for the notched-outline. It provides\r\n * inputs to toggle the notch state and width.\r\n */\nclass MatFormFieldNotchedOutline {\n  _elementRef = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  /** Whether the notch should be opened. */\n  open = false;\n  _notch;\n  ngAfterViewInit() {\n    const element = this._elementRef.nativeElement;\n    const label = element.querySelector('.mdc-floating-label');\n    if (label) {\n      element.classList.add('mdc-notched-outline--upgraded');\n      if (typeof requestAnimationFrame === 'function') {\n        label.style.transitionDuration = '0s';\n        this._ngZone.runOutsideAngular(() => {\n          requestAnimationFrame(() => label.style.transitionDuration = '');\n        });\n      }\n    } else {\n      element.classList.add('mdc-notched-outline--no-label');\n    }\n  }\n  _setNotchWidth(labelWidth) {\n    const notch = this._notch.nativeElement;\n    if (!this.open || !labelWidth) {\n      notch.style.width = '';\n    } else {\n      const NOTCH_ELEMENT_PADDING = 8;\n      const NOTCH_ELEMENT_BORDER = 1;\n      notch.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n    }\n  }\n  _setMaxWidth(prefixAndSuffixWidth) {\n    // Set this only on the notch to avoid style recalculations in other parts of the form field.\n    this._notch.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n  }\n  static ɵfac = function MatFormFieldNotchedOutline_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldNotchedOutline)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatFormFieldNotchedOutline,\n    selectors: [[\"div\", \"matFormFieldNotchedOutline\", \"\"]],\n    viewQuery: function MatFormFieldNotchedOutline_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notch = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mdc-notched-outline\"],\n    hostVars: 2,\n    hostBindings: function MatFormFieldNotchedOutline_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-notched-outline--notched\", ctx.open);\n      }\n    },\n    inputs: {\n      open: [0, \"matFormFieldNotchedOutlineOpen\", \"open\"]\n    },\n    attrs: _c1,\n    ngContentSelectors: _c2,\n    decls: 5,\n    vars: 0,\n    consts: [[\"notch\", \"\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__leading\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__notch\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__trailing\"]],\n    template: function MatFormFieldNotchedOutline_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"div\", 1);\n        i0.ɵɵelementStart(1, \"div\", 2, 0);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"div\", 3);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldNotchedOutline, [{\n    type: Component,\n    args: [{\n      selector: 'div[matFormFieldNotchedOutline]',\n      host: {\n        'class': 'mdc-notched-outline',\n        // Besides updating the notch state through the MDC component, we toggle this class through\n        // a host binding in order to ensure that the notched-outline renders correctly on the server.\n        '[class.mdc-notched-outline--notched]': 'open'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\"\n    }]\n  }], null, {\n    open: [{\n      type: Input,\n      args: ['matFormFieldNotchedOutlineOpen']\n    }],\n    _notch: [{\n      type: ViewChild,\n      args: ['notch']\n    }]\n  });\n})();\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n  /** The value of the control. */\n  value;\n  /**\r\n   * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\r\n   * needs to run change detection.\r\n   */\n  stateChanges;\n  /** The element ID for this control. */\n  id;\n  /** The placeholder for this control. */\n  placeholder;\n  /** Gets the AbstractControlDirective for this control. */\n  ngControl;\n  /** Whether the control is focused. */\n  focused;\n  /** Whether the control is empty. */\n  empty;\n  /** Whether the `MatFormField` label should try to float. */\n  shouldLabelFloat;\n  /** Whether the control is required. */\n  required;\n  /** Whether the control is disabled. */\n  disabled;\n  /** Whether the control is in an error state. */\n  errorState;\n  /**\r\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\r\n   * based on their control type. The form field will add a class,\r\n   * `mat-form-field-type-{{controlType}}` to its root element.\r\n   */\n  controlType;\n  /**\r\n   * Whether the input is currently in an autofilled state. If property is not present on the\r\n   * control it is assumed to be false.\r\n   */\n  autofilled;\n  /**\r\n   * Value of `aria-describedby` that should be merged with the described-by ids\r\n   * which are set by the form-field.\r\n   */\n  userAriaDescribedBy;\n  /**\r\n   * Whether to automatically assign the ID of the form field as the `for` attribute\r\n   * on the `<label>` inside the form field. Set this to true to prevent the form\r\n   * field from associating the label with non-native elements.\r\n   */\n  disableAutomaticLabeling;\n  /** Gets the list of element IDs that currently describe this control. */\n  describedByIds;\n  static ɵfac = function MatFormFieldControl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldControl)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFormFieldControl\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldControl, [{\n    type: Directive\n  }], null, null);\n})();\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\r\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\r\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\r\n * retention of the `MatFormField` class and its component metadata.\r\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\r\n * Injection token that can be used to configure the\r\n * default options for all form field within an app.\r\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\r\n * Whether the label for form fields should by default float `always`,\r\n * `never`, or `auto`.\r\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\r\n * Default transform for docked floating labels in a MDC text-field. This value has been\r\n * extracted from the MDC text-field styles because we programmatically modify the docked\r\n * label transform, but do not want to accidentally discard the default label transform.\r\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dir = inject(Directionality);\n  _platform = inject(Platform);\n  _idGenerator = inject(_IdGenerator);\n  _ngZone = inject(NgZone);\n  _defaults = inject(MAT_FORM_FIELD_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  _textField;\n  _iconPrefixContainer;\n  _textPrefixContainer;\n  _iconSuffixContainer;\n  _textSuffixContainer;\n  _floatingLabel;\n  _notchedOutline;\n  _lineRipple;\n  _iconPrefixContainerSignal = viewChild('iconPrefixContainer');\n  _textPrefixContainerSignal = viewChild('textPrefixContainer');\n  _iconSuffixContainerSignal = viewChild('iconSuffixContainer');\n  _textSuffixContainerSignal = viewChild('textSuffixContainer');\n  _prefixSuffixContainers = computed(() => {\n    return [this._iconPrefixContainerSignal(), this._textPrefixContainerSignal(), this._iconSuffixContainerSignal(), this._textSuffixContainerSignal()].map(container => container?.nativeElement).filter(e => e !== undefined);\n  });\n  _formFieldControl;\n  _prefixChildren;\n  _suffixChildren;\n  _errorChildren;\n  _hintChildren;\n  _labelChild = contentChild(MatLabel);\n  /** Whether the required marker should be hidden. */\n  get hideRequiredMarker() {\n    return this._hideRequiredMarker;\n  }\n  set hideRequiredMarker(value) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  _hideRequiredMarker = false;\n  /**\r\n   * Theme color of the form field. This API is supported in M2 themes only, it\r\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/form-field/styling.\r\n   *\r\n   * For information on applying color variants in M3, see\r\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\r\n   */\n  color = 'primary';\n  /** Whether the label should always float or float as the user types. */\n  get floatLabel() {\n    return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n  }\n  set floatLabel(value) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value;\n      // For backwards compatibility. Custom form field controls or directives might set\n      // the \"floatLabel\" input and expect the form field view to be updated automatically.\n      // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n      // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _floatLabel;\n  /** The form field appearance style. */\n  get appearance() {\n    return this._appearanceSignal();\n  }\n  set appearance(value) {\n    const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n        throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n      }\n    }\n    this._appearanceSignal.set(newAppearance);\n  }\n  _appearanceSignal = signal(DEFAULT_APPEARANCE);\n  /**\r\n   * Whether the form field should reserve space for one line of hint/error text (default)\r\n   * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\r\n   * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\r\n   */\n  get subscriptSizing() {\n    return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n  }\n  set subscriptSizing(value) {\n    this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n  }\n  _subscriptSizing = null;\n  /** Text for the form field hint. */\n  get hintLabel() {\n    return this._hintLabel;\n  }\n  set hintLabel(value) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  _hintLabel = '';\n  _hasIconPrefix = false;\n  _hasTextPrefix = false;\n  _hasIconSuffix = false;\n  _hasTextSuffix = false;\n  // Unique id for the internal form field label.\n  _labelId = this._idGenerator.getId('mat-mdc-form-field-label-');\n  // Unique id for the hint label.\n  _hintLabelId = this._idGenerator.getId('mat-mdc-hint-');\n  // Ids obtained from the error and hint fields\n  _describedByIds;\n  /** Gets the current form field control */\n  get _control() {\n    return this._explicitFormFieldControl || this._formFieldControl;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  _destroyed = new Subject();\n  _isFocused = null;\n  _explicitFormFieldControl;\n  _previousControl = null;\n  _previousControlValidatorFn = null;\n  _stateChanges;\n  _valueChanges;\n  _describedByChanges;\n  _animationsDisabled = _animationsDisabled();\n  constructor() {\n    const defaults = this._defaults;\n    if (defaults) {\n      if (defaults.appearance) {\n        this.appearance = defaults.appearance;\n      }\n      this._hideRequiredMarker = Boolean(defaults?.hideRequiredMarker);\n      if (defaults.color) {\n        this.color = defaults.color;\n      }\n    }\n    this._syncOutlineLabelOffset();\n  }\n  ngAfterViewInit() {\n    // Initial focus state sync. This happens rarely, but we want to account for\n    // it in case the form field control has \"focused\" set to true on init.\n    this._updateFocusState();\n    if (!this._animationsDisabled) {\n      this._ngZone.runOutsideAngular(() => {\n        // Enable animations after a certain amount of time so that they don't run on init.\n        setTimeout(() => {\n          this._elementRef.nativeElement.classList.add('mat-form-field-animations-enabled');\n        }, 300);\n      });\n    }\n    // Because the above changes a value used in the template after it was checked, we need\n    // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n    this._changeDetectorRef.detectChanges();\n  }\n  ngAfterContentInit() {\n    this._assertFormFieldControl();\n    this._initializeSubscript();\n    this._initializePrefixAndSuffix();\n  }\n  ngAfterContentChecked() {\n    this._assertFormFieldControl();\n    // if form field was being used with an input in first place and then replaced by other\n    // component such as select.\n    if (this._control !== this._previousControl) {\n      this._initializeControl(this._previousControl);\n      // keep a reference for last validator we had.\n      if (this._control.ngControl && this._control.ngControl.control) {\n        this._previousControlValidatorFn = this._control.ngControl.control.validator;\n      }\n      this._previousControl = this._control;\n    }\n    // make sure the the control has been initialized.\n    if (this._control.ngControl && this._control.ngControl.control) {\n      // get the validators for current control.\n      const validatorFn = this._control.ngControl.control.validator;\n      // if our current validatorFn isn't equal to it might be we are CD behind, marking the\n      // component will allow us to catch up.\n      if (validatorFn !== this._previousControlValidatorFn) {\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._outlineLabelOffsetResizeObserver?.disconnect();\n    this._stateChanges?.unsubscribe();\n    this._valueChanges?.unsubscribe();\n    this._describedByChanges?.unsubscribe();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\r\n   * Gets the id of the label element. If no label is present, returns `null`.\r\n   */\n  getLabelId = computed(() => this._hasFloatingLabel() ? this._labelId : null);\n  /**\r\n   * Gets an ElementRef for the element that a overlay attached to the form field\r\n   * should be positioned relative to.\r\n   */\n  getConnectedOverlayOrigin() {\n    return this._textField || this._elementRef;\n  }\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel() {\n    // This is for backwards compatibility only. Consumers of the form field might use\n    // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n    // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n    // animation. This is different in MDC where the label always animates, so this method\n    // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n    // the floating label state without animations. The non-MDC implementation was inconsistent\n    // because it always animates if \"floatLabel\" is set away from \"always\".\n    // TODO(devversion): consider removing this method when releasing the MDC form field.\n    if (this._hasFloatingLabel()) {\n      this.floatLabel = 'always';\n    }\n  }\n  /** Initializes the registered form field control. */\n  _initializeControl(previousControl) {\n    const control = this._control;\n    const classPrefix = 'mat-mdc-form-field-type-';\n    if (previousControl) {\n      this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n    }\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n    }\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    this._stateChanges?.unsubscribe();\n    this._stateChanges = control.stateChanges.subscribe(() => {\n      this._updateFocusState();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Updating the `aria-describedby` touches the DOM. Only do it if it actually needs to change.\n    this._describedByChanges?.unsubscribe();\n    this._describedByChanges = control.stateChanges.pipe(startWith([undefined, undefined]), map(() => [control.errorState, control.userAriaDescribedBy]), pairwise(), filter(([[prevErrorState, prevDescribedBy], [currentErrorState, currentDescribedBy]]) => {\n      return prevErrorState !== currentErrorState || prevDescribedBy !== currentDescribedBy;\n    })).subscribe(() => this._syncDescribedByIds());\n    this._valueChanges?.unsubscribe();\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      this._valueChanges = control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n  }\n  _checkPrefixAndSuffixTypes() {\n    this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n    this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n    this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n    this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n  }\n  /** Initializes the prefix and suffix containers. */\n  _initializePrefixAndSuffix() {\n    this._checkPrefixAndSuffixTypes();\n    // Mark the form field as dirty whenever the prefix or suffix children change. This\n    // is necessary because we conditionally display the prefix/suffix containers based\n    // on whether there is projected content.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._checkPrefixAndSuffixTypes();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\r\n   * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\r\n   * with the custom form field control. Also subscribes to hint and error changes in order\r\n   * to be able to validate and synchronize ids on change.\r\n   */\n  _initializeSubscript() {\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Initial mat-hint validation and subscript describedByIds sync.\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /** Throws an error if the form field's control is missing. */\n  _assertFormFieldControl() {\n    if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n  _updateFocusState() {\n    // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n    // certain DOM events are emitted. This is not possible in our implementation of the\n    // form field because we support abstract form field controls which are not necessarily\n    // of type input, nor do we have a reference to a native form field control element. Instead\n    // we handle the focus by checking if the abstract form field control focused state changes.\n    if (this._control.focused && !this._isFocused) {\n      this._isFocused = true;\n      this._lineRipple?.activate();\n    } else if (!this._control.focused && (this._isFocused || this._isFocused === null)) {\n      this._isFocused = false;\n      this._lineRipple?.deactivate();\n    }\n    this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', this._control.focused);\n  }\n  _outlineLabelOffsetResizeObserver = null;\n  /**\r\n   * The floating label in the docked state needs to account for prefixes. The horizontal offset\r\n   * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\r\n   * form field is added to the DOM. This method sets up all subscriptions which are needed to\r\n   * trigger the label offset update.\r\n   */\n  _syncOutlineLabelOffset() {\n    afterRenderEffect({\n      earlyRead: () => {\n        if (this._appearanceSignal() !== 'outline') {\n          this._outlineLabelOffsetResizeObserver?.disconnect();\n          return null;\n        }\n        // Setup a resize observer to monitor changes to the size of the prefix / suffix and\n        // readjust the label offset.\n        if (globalThis.ResizeObserver) {\n          this._outlineLabelOffsetResizeObserver ||= new globalThis.ResizeObserver(() => {\n            this._writeOutlinedLabelStyles(this._getOutlinedLabelOffset());\n          });\n          for (const el of this._prefixSuffixContainers()) {\n            this._outlineLabelOffsetResizeObserver.observe(el, {\n              box: 'border-box'\n            });\n          }\n        }\n        return this._getOutlinedLabelOffset();\n      },\n      write: labelStyles => this._writeOutlinedLabelStyles(labelStyles())\n    });\n  }\n  /** Whether the floating label should always float or not. */\n  _shouldAlwaysFloat() {\n    return this.floatLabel === 'always';\n  }\n  _hasOutline() {\n    return this.appearance === 'outline';\n  }\n  /**\r\n   * Whether the label should display in the infix. Labels in the outline appearance are\r\n   * displayed as part of the notched-outline and are horizontally offset to account for\r\n   * form field prefix content. This won't work in server side rendering since we cannot\r\n   * measure the width of the prefix container. To make the docked label appear as if the\r\n   * right offset has been calculated, we forcibly render the label inside the infix. Since\r\n   * the label is part of the infix, the label cannot overflow the prefix content.\r\n   */\n  _forceDisplayInfixLabel() {\n    return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n  }\n  _hasFloatingLabel = computed(() => !!this._labelChild());\n  _shouldLabelFloat() {\n    if (!this._hasFloatingLabel()) {\n      return false;\n    }\n    return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n  }\n  /**\r\n   * Determines whether a class from the AbstractControlDirective\r\n   * should be forwarded to the host element.\r\n   */\n  _shouldForward(prop) {\n    const control = this._control ? this._control.ngControl : null;\n    return control && control[prop];\n  }\n  /** Gets the type of subscript message to render (error or hint). */\n  _getSubscriptMessageType() {\n    return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n  }\n  /** Handle label resize events. */\n  _handleLabelResized() {\n    this._refreshOutlineNotchWidth();\n  }\n  /** Refreshes the width of the outline-notch, if present. */\n  _refreshOutlineNotchWidth() {\n    if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n      this._notchedOutline?._setNotchWidth(0);\n    } else {\n      this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n    }\n  }\n  /** Does any extra processing that is required when handling the hints. */\n  _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /**\r\n   * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\r\n   * label specified set through the input is being considered as \"start\" aligned.\r\n   *\r\n   * This method is a noop if Angular runs in production mode.\r\n   */\n  _validateHints() {\n    if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      let startHint;\n      let endHint;\n      this._hintChildren.forEach(hint => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n  /**\r\n   * Sets the list of element IDs that describe the child control. This allows the control to update\r\n   * its `aria-describedby` attribute accordingly.\r\n   */\n  _syncDescribedByIds() {\n    if (this._control) {\n      let ids = [];\n      // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n      if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n        ids.push(...this._control.userAriaDescribedBy.split(' '));\n      }\n      if (this._getSubscriptMessageType() === 'hint') {\n        const startHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'end') : null;\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids.push(...this._errorChildren.map(error => error.id));\n      }\n      const existingDescribedBy = this._control.describedByIds;\n      let toAssign;\n      // In some cases there might be some `aria-describedby` IDs that were assigned directly,\n      // like by the `AriaDescriber` (see #30011). Attempt to preserve them by taking the previous\n      // attribute value and filtering out the IDs that came from the previous `setDescribedByIds`\n      // call. Note the `|| ids` here allows us to avoid duplicating IDs on the first render.\n      if (existingDescribedBy) {\n        const exclude = this._describedByIds || ids;\n        toAssign = ids.concat(existingDescribedBy.filter(id => id && !exclude.includes(id)));\n      } else {\n        toAssign = ids;\n      }\n      this._control.setDescribedByIds(toAssign);\n      this._describedByIds = ids;\n    }\n  }\n  /**\r\n   * Calculates the horizontal offset of the label in the outline appearance. In the outline\r\n   * appearance, the notched-outline and label are not relative to the infix container because\r\n   * the outline intends to surround prefixes, suffixes and the infix. This means that the\r\n   * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\r\n   * horizontally offset the label by the width of the prefix container. The MDC text-field does\r\n   * not need to do this because they use a fixed width for prefixes. Hence, they can simply\r\n   * incorporate the horizontal offset into their default text-field styles.\r\n   */\n  _getOutlinedLabelOffset() {\n    const dir = this._dir.valueSignal();\n    if (!this._hasOutline() || !this._floatingLabel) {\n      return null;\n    }\n    // If no prefix is displayed, reset the outline label offset from potential\n    // previous label offset updates.\n    if (!this._iconPrefixContainer && !this._textPrefixContainer) {\n      return ['', null];\n    }\n    // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n    // the label offset update until the zone stabilizes.\n    if (!this._isAttachedToDom()) {\n      return null;\n    }\n    const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n    const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n    const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n    const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n    const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n    const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n    const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n    const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n    // If the directionality is RTL, the x-axis transform needs to be inverted. This\n    // is because `transformX` does not change based on the page directionality.\n    const negate = dir === 'rtl' ? '-1' : '1';\n    const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n    const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n    const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n    // Update the translateX of the floating label to account for the prefix container,\n    // but allow the CSS to override this setting via a CSS variable when the label is\n    // floating.\n    const floatingLabelTransform = 'var(--mat-mdc-form-field-label-transform, ' + `${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset}))`;\n    // Prevent the label from overlapping the suffix when in resting position.\n    const notchedOutlineWidth = iconPrefixContainerWidth + textPrefixContainerWidth + iconSuffixContainerWidth + textSuffixContainerWidth;\n    return [floatingLabelTransform, notchedOutlineWidth];\n  }\n  /** Writes the styles produced by `_getOutlineLabelOffset` synchronously to the DOM. */\n  _writeOutlinedLabelStyles(styles) {\n    if (styles !== null) {\n      const [floatingLabelTransform, notchedOutlineWidth] = styles;\n      if (this._floatingLabel) {\n        this._floatingLabel.element.style.transform = floatingLabelTransform;\n      }\n      if (notchedOutlineWidth !== null) {\n        this._notchedOutline?._setMaxWidth(notchedOutlineWidth);\n      }\n    }\n  }\n  /** Checks whether the form field is attached to the DOM. */\n  _isAttachedToDom() {\n    const element = this._elementRef.nativeElement;\n    if (element.getRootNode) {\n      const rootNode = element.getRootNode();\n      // If the element is inside the DOM the root node will be either the document\n      // or the closest shadow root, otherwise it'll be the element itself.\n      return rootNode && rootNode !== element;\n    }\n    // Otherwise fall back to checking if it's in the document. This doesn't account for\n    // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n    return document.documentElement.contains(element);\n  }\n  static ɵfac = function MatFormField_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormField)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatFormField,\n    selectors: [[\"mat-form-field\"]],\n    contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx._labelChild, MatLabel, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatHint, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formFieldControl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n      }\n    },\n    viewQuery: function MatFormField_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuerySignal(ctx._iconPrefixContainerSignal, _c3, 5);\n        i0.ɵɵviewQuerySignal(ctx._textPrefixContainerSignal, _c4, 5);\n        i0.ɵɵviewQuerySignal(ctx._iconSuffixContainerSignal, _c5, 5);\n        i0.ɵɵviewQuerySignal(ctx._textSuffixContainerSignal, _c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(MatFormFieldFloatingLabel, 5);\n        i0.ɵɵviewQuery(MatFormFieldNotchedOutline, 5);\n        i0.ɵɵviewQuery(MatFormFieldLineRipple, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance(4);\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textField = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconPrefixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textPrefixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconSuffixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textSuffixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._floatingLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notchedOutline = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lineRipple = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-form-field\"],\n    hostVars: 40,\n    hostBindings: function MatFormField_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-form-field-label-always-float\", ctx._shouldAlwaysFloat())(\"mat-mdc-form-field-has-icon-prefix\", ctx._hasIconPrefix)(\"mat-mdc-form-field-has-icon-suffix\", ctx._hasIconSuffix)(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-hide-placeholder\", ctx._hasFloatingLabel() && !ctx._shouldLabelFloat())(\"mat-focused\", ctx._control.focused)(\"mat-primary\", ctx.color !== \"accent\" && ctx.color !== \"warn\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"));\n      }\n    },\n    inputs: {\n      hideRequiredMarker: \"hideRequiredMarker\",\n      color: \"color\",\n      floatLabel: \"floatLabel\",\n      appearance: \"appearance\",\n      subscriptSizing: \"subscriptSizing\",\n      hintLabel: \"hintLabel\"\n    },\n    exportAs: [\"matFormField\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_FORM_FIELD,\n      useExisting: MatFormField\n    }, {\n      provide: FLOATING_LABEL_PARENT,\n      useExisting: MatFormField\n    }])],\n    ngContentSelectors: _c9,\n    decls: 19,\n    vars: 25,\n    consts: [[\"labelTemplate\", \"\"], [\"textField\", \"\"], [\"iconPrefixContainer\", \"\"], [\"textPrefixContainer\", \"\"], [\"textSuffixContainer\", \"\"], [\"iconSuffixContainer\", \"\"], [1, \"mat-mdc-text-field-wrapper\", \"mdc-text-field\", 3, \"click\"], [1, \"mat-mdc-form-field-focus-overlay\"], [1, \"mat-mdc-form-field-flex\"], [\"matFormFieldNotchedOutline\", \"\", 3, \"matFormFieldNotchedOutlineOpen\"], [1, \"mat-mdc-form-field-icon-prefix\"], [1, \"mat-mdc-form-field-text-prefix\"], [1, \"mat-mdc-form-field-infix\"], [3, \"ngTemplateOutlet\"], [1, \"mat-mdc-form-field-text-suffix\"], [1, \"mat-mdc-form-field-icon-suffix\"], [\"matFormFieldLineRipple\", \"\"], [1, \"mat-mdc-form-field-subscript-wrapper\", \"mat-mdc-form-field-bottom-align\"], [\"aria-atomic\", \"true\", \"aria-live\", \"polite\"], [\"matFormFieldFloatingLabel\", \"\", 3, \"floating\", \"monitorResize\", \"id\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-form-field-required-marker\", \"mdc-floating-label--required\"], [3, \"id\"], [1, \"mat-mdc-form-field-hint-spacer\"]],\n    template: function MatFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c8);\n        i0.ɵɵtemplate(0, MatFormField_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"div\", 6, 1);\n        i0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._control.onContainerClick($event));\n        });\n        i0.ɵɵconditionalCreate(4, MatFormField_Conditional_4_Template, 1, 0, \"div\", 7);\n        i0.ɵɵelementStart(5, \"div\", 8);\n        i0.ɵɵconditionalCreate(6, MatFormField_Conditional_6_Template, 2, 2, \"div\", 9);\n        i0.ɵɵconditionalCreate(7, MatFormField_Conditional_7_Template, 3, 0, \"div\", 10);\n        i0.ɵɵconditionalCreate(8, MatFormField_Conditional_8_Template, 3, 0, \"div\", 11);\n        i0.ɵɵelementStart(9, \"div\", 12);\n        i0.ɵɵconditionalCreate(10, MatFormField_Conditional_10_Template, 1, 1, null, 13);\n        i0.ɵɵprojection(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵconditionalCreate(12, MatFormField_Conditional_12_Template, 3, 0, \"div\", 14);\n        i0.ɵɵconditionalCreate(13, MatFormField_Conditional_13_Template, 3, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵconditionalCreate(14, MatFormField_Conditional_14_Template, 1, 0, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 17)(16, \"div\", 18);\n        i0.ɵɵconditionalCreate(17, MatFormField_Case_17_Template, 1, 0)(18, MatFormField_Case_18_Template, 4, 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_19_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"mdc-text-field--filled\", !ctx._hasOutline())(\"mdc-text-field--outlined\", ctx._hasOutline())(\"mdc-text-field--no-label\", !ctx._hasFloatingLabel())(\"mdc-text-field--disabled\", ctx._control.disabled)(\"mdc-text-field--invalid\", ctx._control.errorState);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(!ctx._hasOutline() && !ctx._control.disabled ? 4 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._hasOutline() ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasIconPrefix ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasTextPrefix ? 8 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(!ctx._hasOutline() || ctx._forceDisplayInfixLabel() ? 10 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._hasTextSuffix ? 12 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasIconSuffix ? 13 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(!ctx._hasOutline() ? 14 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"mat-mdc-form-field-subscript-dynamic-size\", ctx.subscriptSizing === \"dynamic\");\n        const subscriptMessageType_r4 = ctx._getSubscriptMessageType();\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"mat-mdc-form-field-error-wrapper\", subscriptMessageType_r4 === \"error\")(\"mat-mdc-form-field-hint-wrapper\", subscriptMessageType_r4 === \"hint\");\n        i0.ɵɵadvance();\n        i0.ɵɵconditional((tmp_19_0 = subscriptMessageType_r4) === \"error\" ? 17 : tmp_19_0 === \"hint\" ? 18 : -1);\n      }\n    },\n    dependencies: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n    styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormField, [{\n    type: Component,\n    args: [{\n      selector: 'mat-form-field',\n      exportAs: 'matFormField',\n      host: {\n        'class': 'mat-mdc-form-field',\n        '[class.mat-mdc-form-field-label-always-float]': '_shouldAlwaysFloat()',\n        '[class.mat-mdc-form-field-has-icon-prefix]': '_hasIconPrefix',\n        '[class.mat-mdc-form-field-has-icon-suffix]': '_hasIconSuffix',\n        // Note that these classes reuse the same names as the non-MDC version, because they can be\n        // considered a public API since custom form controls may use them to style themselves.\n        // See https://github.com/angular/components/pull/20502#discussion_r486124901.\n        '[class.mat-form-field-invalid]': '_control.errorState',\n        '[class.mat-form-field-disabled]': '_control.disabled',\n        '[class.mat-form-field-autofilled]': '_control.autofilled',\n        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n        '[class.mat-form-field-hide-placeholder]': '_hasFloatingLabel() && !_shouldLabelFloat()',\n        '[class.mat-focused]': '_control.focused',\n        '[class.mat-primary]': 'color !== \"accent\" && color !== \"warn\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_FORM_FIELD,\n        useExisting: MatFormField\n      }, {\n        provide: FLOATING_LABEL_PARENT,\n        useExisting: MatFormField\n      }],\n      imports: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n      template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\",\n      styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"]\n    }]\n  }], () => [], {\n    _textField: [{\n      type: ViewChild,\n      args: ['textField']\n    }],\n    _iconPrefixContainer: [{\n      type: ViewChild,\n      args: ['iconPrefixContainer']\n    }],\n    _textPrefixContainer: [{\n      type: ViewChild,\n      args: ['textPrefixContainer']\n    }],\n    _iconSuffixContainer: [{\n      type: ViewChild,\n      args: ['iconSuffixContainer']\n    }],\n    _textSuffixContainer: [{\n      type: ViewChild,\n      args: ['textSuffixContainer']\n    }],\n    _floatingLabel: [{\n      type: ViewChild,\n      args: [MatFormFieldFloatingLabel]\n    }],\n    _notchedOutline: [{\n      type: ViewChild,\n      args: [MatFormFieldNotchedOutline]\n    }],\n    _lineRipple: [{\n      type: ViewChild,\n      args: [MatFormFieldLineRipple]\n    }],\n    _formFieldControl: [{\n      type: ContentChild,\n      args: [MatFormFieldControl]\n    }],\n    _prefixChildren: [{\n      type: ContentChildren,\n      args: [MAT_PREFIX, {\n        descendants: true\n      }]\n    }],\n    _suffixChildren: [{\n      type: ContentChildren,\n      args: [MAT_SUFFIX, {\n        descendants: true\n      }]\n    }],\n    _errorChildren: [{\n      type: ContentChildren,\n      args: [MAT_ERROR, {\n        descendants: true\n      }]\n    }],\n    _hintChildren: [{\n      type: ContentChildren,\n      args: [MatHint, {\n        descendants: true\n      }]\n    }],\n    hideRequiredMarker: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    floatLabel: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    subscriptSizing: [{\n      type: Input\n    }],\n    hintLabel: [{\n      type: Input\n    }]\n  });\n})();\nexport { MatLabel as M, MAT_ERROR as a, MatError as b, MatHint as c, MAT_PREFIX as d, MatPrefix as e, MAT_SUFFIX as f, MatSuffix as g, MAT_FORM_FIELD as h, MAT_FORM_FIELD_DEFAULT_OPTIONS as i, MatFormField as j, MatFormFieldControl as k, getMatFormFieldPlaceholderConflictError as l, getMatFormFieldDuplicatedHintError as m, getMatFormFieldMissingControlError as n };","map":{"version":3,"names":["_IdGenerator","Directionality","coerceBooleanProperty","Platform","NgTemplateOutlet","i0","Directive","InjectionToken","inject","Input","ElementRef","NgZone","Renderer2","Component","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","ChangeDetectorRef","viewChild","computed","contentChild","signal","afterRenderEffect","ContentChild","ContentChildren","Subscription","Subject","merge","startWith","map","pairwise","filter","takeUntil","SharedResizeObserver","_","_animationsDisabled","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c7","_c8","_c9","MatFormField_ng_template_0_Conditional_0_Conditional_2_Template","rf","ctx","ɵɵelement","MatFormField_ng_template_0_Conditional_0_Template","ɵɵelementStart","ɵɵprojection","ɵɵconditionalCreate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵproperty","_shouldLabelFloat","_hasOutline","_labelId","ɵɵattribute","_control","disableAutomaticLabeling","id","ɵɵadvance","ɵɵconditional","hideRequiredMarker","required","MatFormField_ng_template_0_Template","_hasFloatingLabel","MatFormField_Conditional_4_Template","MatFormField_Conditional_6_Conditional_1_ng_template_0_Template","MatFormField_Conditional_6_Conditional_1_Template","ɵɵtemplate","labelTemplate_r3","ɵɵreference","MatFormField_Conditional_6_Template","_forceDisplayInfixLabel","MatFormField_Conditional_7_Template","MatFormField_Conditional_8_Template","MatFormField_Conditional_10_ng_template_0_Template","MatFormField_Conditional_10_Template","MatFormField_Conditional_12_Template","MatFormField_Conditional_13_Template","MatFormField_Conditional_14_Template","MatFormField_Case_17_Template","MatFormField_Case_18_Conditional_0_Template","ɵɵtext","_hintLabelId","ɵɵtextInterpolate","hintLabel","MatFormField_Case_18_Template","MatLabel","ɵfac","MatLabel_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","ngDevMode","ɵsetClassMetadata","args","selector","MAT_ERROR","MatError","getId","constructor","MatError_Factory","hostAttrs","hostVars","hostBindings","MatError_HostBindings","ɵɵdomProperty","inputs","features","ɵɵProvidersFeature","provide","useExisting","host","providers","MatHint","align","MatHint_Factory","MatHint_HostBindings","ɵɵclassProp","MAT_PREFIX","MatPrefix","_isTextSelector","value","_isText","MatPrefix_Factory","MAT_SUFFIX","MatSuffix","MatSuffix_Factory","FLOATING_LABEL_PARENT","MatFormFieldFloatingLabel","_elementRef","floating","_floating","monitorResize","_handleResize","_monitorResize","_subscribeToResize","_resizeSubscription","unsubscribe","_resizeObserver","_ngZone","_parent","ngOnDestroy","getWidth","estimateScrollWidth","nativeElement","element","setTimeout","_handleLabelResized","runOutsideAngular","observe","box","subscribe","MatFormFieldFloatingLabel_Factory","MatFormFieldFloatingLabel_HostBindings","htmlEl","offsetParent","scrollWidth","clone","cloneNode","style","setProperty","document","documentElement","appendChild","remove","ACTIVATE_CLASS","DEACTIVATING_CLASS","MatFormFieldLineRipple","_cleanupTransitionEnd","ngZone","renderer","listen","_handleTransitionEnd","activate","classList","add","deactivate","event","isDeactivating","contains","propertyName","MatFormFieldLineRipple_Factory","MatFormFieldNotchedOutline","open","_notch","ngAfterViewInit","label","querySelector","requestAnimationFrame","transitionDuration","_setNotchWidth","labelWidth","notch","width","NOTCH_ELEMENT_PADDING","NOTCH_ELEMENT_BORDER","_setMaxWidth","prefixAndSuffixWidth","MatFormFieldNotchedOutline_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","MatFormFieldNotchedOutline_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","MatFormFieldNotchedOutline_HostBindings","attrs","ngContentSelectors","decls","vars","consts","template","MatFormFieldNotchedOutline_Template","ɵɵprojectionDef","encapsulation","changeDetection","OnPush","None","MatFormFieldControl","stateChanges","placeholder","ngControl","focused","empty","shouldLabelFloat","disabled","errorState","controlType","autofilled","userAriaDescribedBy","describedByIds","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","Error","getMatFormFieldDuplicatedHintError","getMatFormFieldMissingControlError","MAT_FORM_FIELD","MAT_FORM_FIELD_DEFAULT_OPTIONS","DEFAULT_APPEARANCE","DEFAULT_FLOAT_LABEL","DEFAULT_SUBSCRIPT_SIZING","FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM","MatFormField","_changeDetectorRef","_dir","_platform","_idGenerator","_defaults","optional","_textField","_iconPrefixContainer","_textPrefixContainer","_iconSuffixContainer","_textSuffixContainer","_floatingLabel","_notchedOutline","_lineRipple","_iconPrefixContainerSignal","_textPrefixContainerSignal","_iconSuffixContainerSignal","_textSuffixContainerSignal","_prefixSuffixContainers","container","e","undefined","_formFieldControl","_prefixChildren","_suffixChildren","_errorChildren","_hintChildren","_labelChild","_hideRequiredMarker","color","floatLabel","_floatLabel","markForCheck","appearance","_appearanceSignal","newAppearance","set","subscriptSizing","_subscriptSizing","_hintLabel","_processHints","_hasIconPrefix","_hasTextPrefix","_hasIconSuffix","_hasTextSuffix","_describedByIds","_explicitFormFieldControl","_destroyed","_isFocused","_previousControl","_previousControlValidatorFn","_stateChanges","_valueChanges","_describedByChanges","defaults","Boolean","_syncOutlineLabelOffset","_updateFocusState","detectChanges","ngAfterContentInit","_assertFormFieldControl","_initializeSubscript","_initializePrefixAndSuffix","ngAfterContentChecked","_initializeControl","control","validator","validatorFn","_outlineLabelOffsetResizeObserver","disconnect","next","complete","getLabelId","getConnectedOverlayOrigin","_animateAndLockLabel","previousControl","classPrefix","pipe","prevErrorState","prevDescribedBy","currentErrorState","currentDescribedBy","_syncDescribedByIds","valueChanges","_checkPrefixAndSuffixTypes","find","p","s","changes","_validateHints","toggle","earlyRead","globalThis","ResizeObserver","_writeOutlinedLabelStyles","_getOutlinedLabelOffset","el","write","labelStyles","_shouldAlwaysFloat","isBrowser","length","_shouldForward","prop","_getSubscriptMessageType","_refreshOutlineNotchWidth","startHint","endHint","forEach","hint","ids","push","split","error","existingDescribedBy","toAssign","exclude","concat","includes","setDescribedByIds","dir","valueSignal","_isAttachedToDom","iconPrefixContainer","textPrefixContainer","iconSuffixContainer","textSuffixContainer","iconPrefixContainerWidth","getBoundingClientRect","textPrefixContainerWidth","iconSuffixContainerWidth","textSuffixContainerWidth","negate","prefixWidth","labelOffset","labelHorizontalOffset","floatingLabelTransform","notchedOutlineWidth","styles","transform","getRootNode","rootNode","MatFormField_Factory","contentQueries","MatFormField_ContentQueries","dirIndex","ɵɵcontentQuerySignal","ɵɵcontentQuery","ɵɵqueryAdvance","MatFormField_Query","ɵɵviewQuerySignal","MatFormField_HostBindings","exportAs","MatFormField_Template","_r1","ɵɵgetCurrentView","ɵɵtemplateRefExtractor","ɵɵlistener","MatFormField_Template_div_click_2_listener","$event","ɵɵrestoreView","ɵɵresetView","onContainerClick","tmp_19_0","subscriptMessageType_r4","dependencies","imports","descendants","M","a","b","c","d","f","g","h","i","j","k","l","m","n"],"sources":["C:/Users/winni/OneDrive/Desktop/JINZ-Media-Full-Source/frontend/node_modules/@angular/material/fesm2022/form-field-CFbrnFED.mjs"],"sourcesContent":["import { _IdGenerator } from '@angular/cdk/a11y';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { NgTemplateOutlet } from '@angular/common';\r\nimport * as i0 from '@angular/core';\r\nimport { Directive, InjectionToken, inject, Input, ElementRef, NgZone, Renderer2, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ChangeDetectorRef, viewChild, computed, contentChild, signal, afterRenderEffect, ContentChild, ContentChildren } from '@angular/core';\r\nimport { Subscription, Subject, merge } from 'rxjs';\r\nimport { startWith, map, pairwise, filter, takeUntil } from 'rxjs/operators';\r\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\r\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\r\n\r\n/** The floating label for a `mat-form-field`. */\r\nclass MatLabel {\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatLabel, isStandalone: true, selector: \"mat-label\", ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatLabel, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'mat-label',\r\n                }]\r\n        }] });\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `MatError`. It serves as\r\n * alternative token to the actual `MatError` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_ERROR = new InjectionToken('MatError');\r\n/** Single error message to be shown underneath the form-field. */\r\nclass MatError {\r\n    id = inject(_IdGenerator).getId('mat-mdc-error-');\r\n    constructor() { }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatError, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatError, isStandalone: true, selector: \"mat-error, [matError]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-form-field-error mat-mdc-form-field-bottom-align\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatError, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'mat-error, [matError]',\r\n                    host: {\r\n                        'class': 'mat-mdc-form-field-error mat-mdc-form-field-bottom-align',\r\n                        '[id]': 'id',\r\n                    },\r\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\r\n                }]\r\n        }], ctorParameters: () => [], propDecorators: { id: [{\r\n                type: Input\r\n            }] } });\r\n\r\n/** Hint text to be shown underneath the form field control. */\r\nclass MatHint {\r\n    /** Whether to align the hint label at the start or end of the line. */\r\n    align = 'start';\r\n    /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\r\n    id = inject(_IdGenerator).getId('mat-mdc-hint-');\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatHint, isStandalone: true, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-mdc-form-field-hint-end\": \"align === \\\"end\\\"\", \"id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-mdc-form-field-hint mat-mdc-form-field-bottom-align\" }, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatHint, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'mat-hint',\r\n                    host: {\r\n                        'class': 'mat-mdc-form-field-hint mat-mdc-form-field-bottom-align',\r\n                        '[class.mat-mdc-form-field-hint-end]': 'align === \"end\"',\r\n                        '[id]': 'id',\r\n                        // Remove align attribute to prevent it from interfering with layout.\r\n                        '[attr.align]': 'null',\r\n                    },\r\n                }]\r\n        }], propDecorators: { align: [{\r\n                type: Input\r\n            }], id: [{\r\n                type: Input\r\n            }] } });\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\r\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\r\n/** Prefix to be placed in front of the form field. */\r\nclass MatPrefix {\r\n    set _isTextSelector(value) {\r\n        this._isText = true;\r\n    }\r\n    _isText = false;\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatPrefix, isStandalone: true, selector: \"[matPrefix], [matIconPrefix], [matTextPrefix]\", inputs: { _isTextSelector: [\"matTextPrefix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatPrefix, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[matPrefix], [matIconPrefix], [matTextPrefix]',\r\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\r\n                }]\r\n        }], propDecorators: { _isTextSelector: [{\r\n                type: Input,\r\n                args: ['matTextPrefix']\r\n            }] } });\r\n\r\n/**\r\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\r\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\r\n * retention of the class and its directive metadata.\r\n */\r\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\r\n/** Suffix to be placed at the end of the form field. */\r\nclass MatSuffix {\r\n    set _isTextSelector(value) {\r\n        this._isText = true;\r\n    }\r\n    _isText = false;\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatSuffix, isStandalone: true, selector: \"[matSuffix], [matIconSuffix], [matTextSuffix]\", inputs: { _isTextSelector: [\"matTextSuffix\", \"_isTextSelector\"] }, providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSuffix, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[matSuffix], [matIconSuffix], [matTextSuffix]',\r\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\r\n                }]\r\n        }], propDecorators: { _isTextSelector: [{\r\n                type: Input,\r\n                args: ['matTextSuffix']\r\n            }] } });\r\n\r\n/** An injion token for the parent form-field. */\r\nconst FLOATING_LABEL_PARENT = new InjectionToken('FloatingLabelParent');\r\n/**\r\n * Internal directive that maintains a MDC floating label. This directive does not\r\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\r\n * including it just to measure the label width and toggle some classes.\r\n *\r\n * The use of a directive allows us to conditionally render a floating label in the\r\n * template without having to manually manage instantiation and destruction of the\r\n * floating label component based on.\r\n *\r\n * The component is responsible for setting up the floating label styles, measuring label\r\n * width for the outline notch, and providing inputs that can be used to toggle the\r\n * label's floating or required state.\r\n */\r\nclass MatFormFieldFloatingLabel {\r\n    _elementRef = inject(ElementRef);\r\n    /** Whether the label is floating. */\r\n    get floating() {\r\n        return this._floating;\r\n    }\r\n    set floating(value) {\r\n        this._floating = value;\r\n        if (this.monitorResize) {\r\n            this._handleResize();\r\n        }\r\n    }\r\n    _floating = false;\r\n    /** Whether to monitor for resize events on the floating label. */\r\n    get monitorResize() {\r\n        return this._monitorResize;\r\n    }\r\n    set monitorResize(value) {\r\n        this._monitorResize = value;\r\n        if (this._monitorResize) {\r\n            this._subscribeToResize();\r\n        }\r\n        else {\r\n            this._resizeSubscription.unsubscribe();\r\n        }\r\n    }\r\n    _monitorResize = false;\r\n    /** The shared ResizeObserver. */\r\n    _resizeObserver = inject(SharedResizeObserver);\r\n    /** The Angular zone. */\r\n    _ngZone = inject(NgZone);\r\n    /** The parent form-field. */\r\n    _parent = inject(FLOATING_LABEL_PARENT);\r\n    /** The current resize event subscription. */\r\n    _resizeSubscription = new Subscription();\r\n    constructor() { }\r\n    ngOnDestroy() {\r\n        this._resizeSubscription.unsubscribe();\r\n    }\r\n    /** Gets the width of the label. Used for the outline notch. */\r\n    getWidth() {\r\n        return estimateScrollWidth(this._elementRef.nativeElement);\r\n    }\r\n    /** Gets the HTML element for the floating label. */\r\n    get element() {\r\n        return this._elementRef.nativeElement;\r\n    }\r\n    /** Handles resize events from the ResizeObserver. */\r\n    _handleResize() {\r\n        // In the case where the label grows in size, the following sequence of events occurs:\r\n        // 1. The label grows by 1px triggering the ResizeObserver\r\n        // 2. The notch is expanded to accommodate the entire label\r\n        // 3. The label expands to its full width, triggering the ResizeObserver again\r\n        //\r\n        // This is expected, but If we allow this to all happen within the same macro task it causes an\r\n        // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\r\n        // the next macro task.\r\n        setTimeout(() => this._parent._handleLabelResized());\r\n    }\r\n    /** Subscribes to resize events. */\r\n    _subscribeToResize() {\r\n        this._resizeSubscription.unsubscribe();\r\n        this._ngZone.runOutsideAngular(() => {\r\n            this._resizeSubscription = this._resizeObserver\r\n                .observe(this._elementRef.nativeElement, { box: 'border-box' })\r\n                .subscribe(() => this._handleResize());\r\n        });\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldFloatingLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldFloatingLabel, isStandalone: true, selector: \"label[matFormFieldFloatingLabel]\", inputs: { floating: \"floating\", monitorResize: \"monitorResize\" }, host: { properties: { \"class.mdc-floating-label--float-above\": \"floating\" }, classAttribute: \"mdc-floating-label mat-mdc-floating-label\" }, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldFloatingLabel, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'label[matFormFieldFloatingLabel]',\r\n                    host: {\r\n                        'class': 'mdc-floating-label mat-mdc-floating-label',\r\n                        '[class.mdc-floating-label--float-above]': 'floating',\r\n                    },\r\n                }]\r\n        }], ctorParameters: () => [], propDecorators: { floating: [{\r\n                type: Input\r\n            }], monitorResize: [{\r\n                type: Input\r\n            }] } });\r\n/**\r\n * Estimates the scroll width of an element.\r\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\r\n */\r\nfunction estimateScrollWidth(element) {\r\n    // Check the offsetParent. If the element inherits display: none from any\r\n    // parent, the offsetParent property will be null (see\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\r\n    // This check ensures we only clone the node when necessary.\r\n    const htmlEl = element;\r\n    if (htmlEl.offsetParent !== null) {\r\n        return htmlEl.scrollWidth;\r\n    }\r\n    const clone = htmlEl.cloneNode(true);\r\n    clone.style.setProperty('position', 'absolute');\r\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\r\n    document.documentElement.appendChild(clone);\r\n    const scrollWidth = clone.scrollWidth;\r\n    clone.remove();\r\n    return scrollWidth;\r\n}\r\n\r\n/** Class added when the line ripple is active. */\r\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\r\n/** Class added when the line ripple is being deactivated. */\r\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\r\n/**\r\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\r\n * directive allows us to conditionally render a line-ripple in the template without having\r\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\r\n *\r\n * The directive sets up the styles for the line-ripple and provides an API for activating\r\n * and deactivating the line-ripple.\r\n */\r\nclass MatFormFieldLineRipple {\r\n    _elementRef = inject(ElementRef);\r\n    _cleanupTransitionEnd;\r\n    constructor() {\r\n        const ngZone = inject(NgZone);\r\n        const renderer = inject(Renderer2);\r\n        ngZone.runOutsideAngular(() => {\r\n            this._cleanupTransitionEnd = renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionEnd);\r\n        });\r\n    }\r\n    activate() {\r\n        const classList = this._elementRef.nativeElement.classList;\r\n        classList.remove(DEACTIVATING_CLASS);\r\n        classList.add(ACTIVATE_CLASS);\r\n    }\r\n    deactivate() {\r\n        this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\r\n    }\r\n    _handleTransitionEnd = (event) => {\r\n        const classList = this._elementRef.nativeElement.classList;\r\n        const isDeactivating = classList.contains(DEACTIVATING_CLASS);\r\n        if (event.propertyName === 'opacity' && isDeactivating) {\r\n            classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\r\n        }\r\n    };\r\n    ngOnDestroy() {\r\n        this._cleanupTransitionEnd();\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldLineRipple, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldLineRipple, isStandalone: true, selector: \"div[matFormFieldLineRipple]\", host: { classAttribute: \"mdc-line-ripple\" }, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldLineRipple, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'div[matFormFieldLineRipple]',\r\n                    host: {\r\n                        'class': 'mdc-line-ripple',\r\n                    },\r\n                }]\r\n        }], ctorParameters: () => [] });\r\n\r\n/**\r\n * Internal component that creates an instance of the MDC notched-outline component.\r\n *\r\n * The component sets up the HTML structure and styles for the notched-outline. It provides\r\n * inputs to toggle the notch state and width.\r\n */\r\nclass MatFormFieldNotchedOutline {\r\n    _elementRef = inject(ElementRef);\r\n    _ngZone = inject(NgZone);\r\n    /** Whether the notch should be opened. */\r\n    open = false;\r\n    _notch;\r\n    ngAfterViewInit() {\r\n        const element = this._elementRef.nativeElement;\r\n        const label = element.querySelector('.mdc-floating-label');\r\n        if (label) {\r\n            element.classList.add('mdc-notched-outline--upgraded');\r\n            if (typeof requestAnimationFrame === 'function') {\r\n                label.style.transitionDuration = '0s';\r\n                this._ngZone.runOutsideAngular(() => {\r\n                    requestAnimationFrame(() => (label.style.transitionDuration = ''));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            element.classList.add('mdc-notched-outline--no-label');\r\n        }\r\n    }\r\n    _setNotchWidth(labelWidth) {\r\n        const notch = this._notch.nativeElement;\r\n        if (!this.open || !labelWidth) {\r\n            notch.style.width = '';\r\n        }\r\n        else {\r\n            const NOTCH_ELEMENT_PADDING = 8;\r\n            const NOTCH_ELEMENT_BORDER = 1;\r\n            notch.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\r\n        }\r\n    }\r\n    _setMaxWidth(prefixAndSuffixWidth) {\r\n        // Set this only on the notch to avoid style recalculations in other parts of the form field.\r\n        this._notch.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldNotchedOutline, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldNotchedOutline, isStandalone: true, selector: \"div[matFormFieldNotchedOutline]\", inputs: { open: [\"matFormFieldNotchedOutlineOpen\", \"open\"] }, host: { properties: { \"class.mdc-notched-outline--notched\": \"open\" }, classAttribute: \"mdc-notched-outline\" }, viewQueries: [{ propertyName: \"_notch\", first: true, predicate: [\"notch\"], descendants: true }], ngImport: i0, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldNotchedOutline, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'div[matFormFieldNotchedOutline]', host: {\r\n                        'class': 'mdc-notched-outline',\r\n                        // Besides updating the notch state through the MDC component, we toggle this class through\r\n                        // a host binding in order to ensure that the notched-outline renders correctly on the server.\r\n                        '[class.mdc-notched-outline--notched]': 'open',\r\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\" }]\r\n        }], propDecorators: { open: [{\r\n                type: Input,\r\n                args: ['matFormFieldNotchedOutlineOpen']\r\n            }], _notch: [{\r\n                type: ViewChild,\r\n                args: ['notch']\r\n            }] } });\r\n\r\n/** An interface which allows a control to work inside of a `MatFormField`. */\r\nclass MatFormFieldControl {\r\n    /** The value of the control. */\r\n    value;\r\n    /**\r\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\r\n     * needs to run change detection.\r\n     */\r\n    stateChanges;\r\n    /** The element ID for this control. */\r\n    id;\r\n    /** The placeholder for this control. */\r\n    placeholder;\r\n    /** Gets the AbstractControlDirective for this control. */\r\n    ngControl;\r\n    /** Whether the control is focused. */\r\n    focused;\r\n    /** Whether the control is empty. */\r\n    empty;\r\n    /** Whether the `MatFormField` label should try to float. */\r\n    shouldLabelFloat;\r\n    /** Whether the control is required. */\r\n    required;\r\n    /** Whether the control is disabled. */\r\n    disabled;\r\n    /** Whether the control is in an error state. */\r\n    errorState;\r\n    /**\r\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\r\n     * based on their control type. The form field will add a class,\r\n     * `mat-form-field-type-{{controlType}}` to its root element.\r\n     */\r\n    controlType;\r\n    /**\r\n     * Whether the input is currently in an autofilled state. If property is not present on the\r\n     * control it is assumed to be false.\r\n     */\r\n    autofilled;\r\n    /**\r\n     * Value of `aria-describedby` that should be merged with the described-by ids\r\n     * which are set by the form-field.\r\n     */\r\n    userAriaDescribedBy;\r\n    /**\r\n     * Whether to automatically assign the ID of the form field as the `for` attribute\r\n     * on the `<label>` inside the form field. Set this to true to prevent the form\r\n     * field from associating the label with non-native elements.\r\n     */\r\n    disableAutomaticLabeling;\r\n    /** Gets the list of element IDs that currently describe this control. */\r\n    describedByIds;\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatFormFieldControl, isStandalone: true, ngImport: i0 });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\r\n            type: Directive\r\n        }] });\r\n\r\n/** @docs-private */\r\nfunction getMatFormFieldPlaceholderConflictError() {\r\n    return Error('Placeholder attribute and child element were both specified.');\r\n}\r\n/** @docs-private */\r\nfunction getMatFormFieldDuplicatedHintError(align) {\r\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\r\n}\r\n/** @docs-private */\r\nfunction getMatFormFieldMissingControlError() {\r\n    return Error('mat-form-field must contain a MatFormFieldControl.');\r\n}\r\n\r\n/**\r\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\r\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\r\n * retention of the `MatFormField` class and its component metadata.\r\n */\r\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\r\n/**\r\n * Injection token that can be used to configure the\r\n * default options for all form field within an app.\r\n */\r\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\r\n/** Default appearance used by the form field. */\r\nconst DEFAULT_APPEARANCE = 'fill';\r\n/**\r\n * Whether the label for form fields should by default float `always`,\r\n * `never`, or `auto`.\r\n */\r\nconst DEFAULT_FLOAT_LABEL = 'auto';\r\n/** Default way that the subscript element height is set. */\r\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\r\n/**\r\n * Default transform for docked floating labels in a MDC text-field. This value has been\r\n * extracted from the MDC text-field styles because we programmatically modify the docked\r\n * label transform, but do not want to accidentally discard the default label transform.\r\n */\r\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\r\n/** Container for form controls that applies Material Design styling and behavior. */\r\nclass MatFormField {\r\n    _elementRef = inject(ElementRef);\r\n    _changeDetectorRef = inject(ChangeDetectorRef);\r\n    _dir = inject(Directionality);\r\n    _platform = inject(Platform);\r\n    _idGenerator = inject(_IdGenerator);\r\n    _ngZone = inject(NgZone);\r\n    _defaults = inject(MAT_FORM_FIELD_DEFAULT_OPTIONS, {\r\n        optional: true,\r\n    });\r\n    _textField;\r\n    _iconPrefixContainer;\r\n    _textPrefixContainer;\r\n    _iconSuffixContainer;\r\n    _textSuffixContainer;\r\n    _floatingLabel;\r\n    _notchedOutline;\r\n    _lineRipple;\r\n    _iconPrefixContainerSignal = viewChild('iconPrefixContainer');\r\n    _textPrefixContainerSignal = viewChild('textPrefixContainer');\r\n    _iconSuffixContainerSignal = viewChild('iconSuffixContainer');\r\n    _textSuffixContainerSignal = viewChild('textSuffixContainer');\r\n    _prefixSuffixContainers = computed(() => {\r\n        return [\r\n            this._iconPrefixContainerSignal(),\r\n            this._textPrefixContainerSignal(),\r\n            this._iconSuffixContainerSignal(),\r\n            this._textSuffixContainerSignal(),\r\n        ]\r\n            .map(container => container?.nativeElement)\r\n            .filter(e => e !== undefined);\r\n    });\r\n    _formFieldControl;\r\n    _prefixChildren;\r\n    _suffixChildren;\r\n    _errorChildren;\r\n    _hintChildren;\r\n    _labelChild = contentChild(MatLabel);\r\n    /** Whether the required marker should be hidden. */\r\n    get hideRequiredMarker() {\r\n        return this._hideRequiredMarker;\r\n    }\r\n    set hideRequiredMarker(value) {\r\n        this._hideRequiredMarker = coerceBooleanProperty(value);\r\n    }\r\n    _hideRequiredMarker = false;\r\n    /**\r\n     * Theme color of the form field. This API is supported in M2 themes only, it\r\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/form-field/styling.\r\n     *\r\n     * For information on applying color variants in M3, see\r\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\r\n     */\r\n    color = 'primary';\r\n    /** Whether the label should always float or float as the user types. */\r\n    get floatLabel() {\r\n        return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\r\n    }\r\n    set floatLabel(value) {\r\n        if (value !== this._floatLabel) {\r\n            this._floatLabel = value;\r\n            // For backwards compatibility. Custom form field controls or directives might set\r\n            // the \"floatLabel\" input and expect the form field view to be updated automatically.\r\n            // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\r\n            // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    _floatLabel;\r\n    /** The form field appearance style. */\r\n    get appearance() {\r\n        return this._appearanceSignal();\r\n    }\r\n    set appearance(value) {\r\n        const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\r\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\r\n            if (newAppearance !== 'fill' && newAppearance !== 'outline') {\r\n                throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\r\n            }\r\n        }\r\n        this._appearanceSignal.set(newAppearance);\r\n    }\r\n    _appearanceSignal = signal(DEFAULT_APPEARANCE);\r\n    /**\r\n     * Whether the form field should reserve space for one line of hint/error text (default)\r\n     * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\r\n     * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\r\n     */\r\n    get subscriptSizing() {\r\n        return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\r\n    }\r\n    set subscriptSizing(value) {\r\n        this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\r\n    }\r\n    _subscriptSizing = null;\r\n    /** Text for the form field hint. */\r\n    get hintLabel() {\r\n        return this._hintLabel;\r\n    }\r\n    set hintLabel(value) {\r\n        this._hintLabel = value;\r\n        this._processHints();\r\n    }\r\n    _hintLabel = '';\r\n    _hasIconPrefix = false;\r\n    _hasTextPrefix = false;\r\n    _hasIconSuffix = false;\r\n    _hasTextSuffix = false;\r\n    // Unique id for the internal form field label.\r\n    _labelId = this._idGenerator.getId('mat-mdc-form-field-label-');\r\n    // Unique id for the hint label.\r\n    _hintLabelId = this._idGenerator.getId('mat-mdc-hint-');\r\n    // Ids obtained from the error and hint fields\r\n    _describedByIds;\r\n    /** Gets the current form field control */\r\n    get _control() {\r\n        return this._explicitFormFieldControl || this._formFieldControl;\r\n    }\r\n    set _control(value) {\r\n        this._explicitFormFieldControl = value;\r\n    }\r\n    _destroyed = new Subject();\r\n    _isFocused = null;\r\n    _explicitFormFieldControl;\r\n    _previousControl = null;\r\n    _previousControlValidatorFn = null;\r\n    _stateChanges;\r\n    _valueChanges;\r\n    _describedByChanges;\r\n    _animationsDisabled = _animationsDisabled();\r\n    constructor() {\r\n        const defaults = this._defaults;\r\n        if (defaults) {\r\n            if (defaults.appearance) {\r\n                this.appearance = defaults.appearance;\r\n            }\r\n            this._hideRequiredMarker = Boolean(defaults?.hideRequiredMarker);\r\n            if (defaults.color) {\r\n                this.color = defaults.color;\r\n            }\r\n        }\r\n        this._syncOutlineLabelOffset();\r\n    }\r\n    ngAfterViewInit() {\r\n        // Initial focus state sync. This happens rarely, but we want to account for\r\n        // it in case the form field control has \"focused\" set to true on init.\r\n        this._updateFocusState();\r\n        if (!this._animationsDisabled) {\r\n            this._ngZone.runOutsideAngular(() => {\r\n                // Enable animations after a certain amount of time so that they don't run on init.\r\n                setTimeout(() => {\r\n                    this._elementRef.nativeElement.classList.add('mat-form-field-animations-enabled');\r\n                }, 300);\r\n            });\r\n        }\r\n        // Because the above changes a value used in the template after it was checked, we need\r\n        // to trigger CD or the change might not be reflected if there is no other CD scheduled.\r\n        this._changeDetectorRef.detectChanges();\r\n    }\r\n    ngAfterContentInit() {\r\n        this._assertFormFieldControl();\r\n        this._initializeSubscript();\r\n        this._initializePrefixAndSuffix();\r\n    }\r\n    ngAfterContentChecked() {\r\n        this._assertFormFieldControl();\r\n        // if form field was being used with an input in first place and then replaced by other\r\n        // component such as select.\r\n        if (this._control !== this._previousControl) {\r\n            this._initializeControl(this._previousControl);\r\n            // keep a reference for last validator we had.\r\n            if (this._control.ngControl && this._control.ngControl.control) {\r\n                this._previousControlValidatorFn = this._control.ngControl.control.validator;\r\n            }\r\n            this._previousControl = this._control;\r\n        }\r\n        // make sure the the control has been initialized.\r\n        if (this._control.ngControl && this._control.ngControl.control) {\r\n            // get the validators for current control.\r\n            const validatorFn = this._control.ngControl.control.validator;\r\n            // if our current validatorFn isn't equal to it might be we are CD behind, marking the\r\n            // component will allow us to catch up.\r\n            if (validatorFn !== this._previousControlValidatorFn) {\r\n                this._changeDetectorRef.markForCheck();\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._outlineLabelOffsetResizeObserver?.disconnect();\r\n        this._stateChanges?.unsubscribe();\r\n        this._valueChanges?.unsubscribe();\r\n        this._describedByChanges?.unsubscribe();\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /**\r\n     * Gets the id of the label element. If no label is present, returns `null`.\r\n     */\r\n    getLabelId = computed(() => (this._hasFloatingLabel() ? this._labelId : null));\r\n    /**\r\n     * Gets an ElementRef for the element that a overlay attached to the form field\r\n     * should be positioned relative to.\r\n     */\r\n    getConnectedOverlayOrigin() {\r\n        return this._textField || this._elementRef;\r\n    }\r\n    /** Animates the placeholder up and locks it in position. */\r\n    _animateAndLockLabel() {\r\n        // This is for backwards compatibility only. Consumers of the form field might use\r\n        // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\r\n        // form field because setting \"floatLabel\" to \"always\" caused the label to float without\r\n        // animation. This is different in MDC where the label always animates, so this method\r\n        // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\r\n        // the floating label state without animations. The non-MDC implementation was inconsistent\r\n        // because it always animates if \"floatLabel\" is set away from \"always\".\r\n        // TODO(devversion): consider removing this method when releasing the MDC form field.\r\n        if (this._hasFloatingLabel()) {\r\n            this.floatLabel = 'always';\r\n        }\r\n    }\r\n    /** Initializes the registered form field control. */\r\n    _initializeControl(previousControl) {\r\n        const control = this._control;\r\n        const classPrefix = 'mat-mdc-form-field-type-';\r\n        if (previousControl) {\r\n            this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\r\n        }\r\n        if (control.controlType) {\r\n            this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\r\n        }\r\n        // Subscribe to changes in the child control state in order to update the form field UI.\r\n        this._stateChanges?.unsubscribe();\r\n        this._stateChanges = control.stateChanges.subscribe(() => {\r\n            this._updateFocusState();\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        // Updating the `aria-describedby` touches the DOM. Only do it if it actually needs to change.\r\n        this._describedByChanges?.unsubscribe();\r\n        this._describedByChanges = control.stateChanges\r\n            .pipe(startWith([undefined, undefined]), map(() => [control.errorState, control.userAriaDescribedBy]), pairwise(), filter(([[prevErrorState, prevDescribedBy], [currentErrorState, currentDescribedBy]]) => {\r\n            return prevErrorState !== currentErrorState || prevDescribedBy !== currentDescribedBy;\r\n        }))\r\n            .subscribe(() => this._syncDescribedByIds());\r\n        this._valueChanges?.unsubscribe();\r\n        // Run change detection if the value changes.\r\n        if (control.ngControl && control.ngControl.valueChanges) {\r\n            this._valueChanges = control.ngControl.valueChanges\r\n                .pipe(takeUntil(this._destroyed))\r\n                .subscribe(() => this._changeDetectorRef.markForCheck());\r\n        }\r\n    }\r\n    _checkPrefixAndSuffixTypes() {\r\n        this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\r\n        this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\r\n        this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\r\n        this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\r\n    }\r\n    /** Initializes the prefix and suffix containers. */\r\n    _initializePrefixAndSuffix() {\r\n        this._checkPrefixAndSuffixTypes();\r\n        // Mark the form field as dirty whenever the prefix or suffix children change. This\r\n        // is necessary because we conditionally display the prefix/suffix containers based\r\n        // on whether there is projected content.\r\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\r\n            this._checkPrefixAndSuffixTypes();\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n    /**\r\n     * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\r\n     * with the custom form field control. Also subscribes to hint and error changes in order\r\n     * to be able to validate and synchronize ids on change.\r\n     */\r\n    _initializeSubscript() {\r\n        // Re-validate when the number of hints changes.\r\n        this._hintChildren.changes.subscribe(() => {\r\n            this._processHints();\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        // Update the aria-described by when the number of errors changes.\r\n        this._errorChildren.changes.subscribe(() => {\r\n            this._syncDescribedByIds();\r\n            this._changeDetectorRef.markForCheck();\r\n        });\r\n        // Initial mat-hint validation and subscript describedByIds sync.\r\n        this._validateHints();\r\n        this._syncDescribedByIds();\r\n    }\r\n    /** Throws an error if the form field's control is missing. */\r\n    _assertFormFieldControl() {\r\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            throw getMatFormFieldMissingControlError();\r\n        }\r\n    }\r\n    _updateFocusState() {\r\n        // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\r\n        // certain DOM events are emitted. This is not possible in our implementation of the\r\n        // form field because we support abstract form field controls which are not necessarily\r\n        // of type input, nor do we have a reference to a native form field control element. Instead\r\n        // we handle the focus by checking if the abstract form field control focused state changes.\r\n        if (this._control.focused && !this._isFocused) {\r\n            this._isFocused = true;\r\n            this._lineRipple?.activate();\r\n        }\r\n        else if (!this._control.focused && (this._isFocused || this._isFocused === null)) {\r\n            this._isFocused = false;\r\n            this._lineRipple?.deactivate();\r\n        }\r\n        this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', this._control.focused);\r\n    }\r\n    _outlineLabelOffsetResizeObserver = null;\r\n    /**\r\n     * The floating label in the docked state needs to account for prefixes. The horizontal offset\r\n     * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\r\n     * form field is added to the DOM. This method sets up all subscriptions which are needed to\r\n     * trigger the label offset update.\r\n     */\r\n    _syncOutlineLabelOffset() {\r\n        afterRenderEffect({\r\n            earlyRead: () => {\r\n                if (this._appearanceSignal() !== 'outline') {\r\n                    this._outlineLabelOffsetResizeObserver?.disconnect();\r\n                    return null;\r\n                }\r\n                // Setup a resize observer to monitor changes to the size of the prefix / suffix and\r\n                // readjust the label offset.\r\n                if (globalThis.ResizeObserver) {\r\n                    this._outlineLabelOffsetResizeObserver ||= new globalThis.ResizeObserver(() => {\r\n                        this._writeOutlinedLabelStyles(this._getOutlinedLabelOffset());\r\n                    });\r\n                    for (const el of this._prefixSuffixContainers()) {\r\n                        this._outlineLabelOffsetResizeObserver.observe(el, { box: 'border-box' });\r\n                    }\r\n                }\r\n                return this._getOutlinedLabelOffset();\r\n            },\r\n            write: labelStyles => this._writeOutlinedLabelStyles(labelStyles()),\r\n        });\r\n    }\r\n    /** Whether the floating label should always float or not. */\r\n    _shouldAlwaysFloat() {\r\n        return this.floatLabel === 'always';\r\n    }\r\n    _hasOutline() {\r\n        return this.appearance === 'outline';\r\n    }\r\n    /**\r\n     * Whether the label should display in the infix. Labels in the outline appearance are\r\n     * displayed as part of the notched-outline and are horizontally offset to account for\r\n     * form field prefix content. This won't work in server side rendering since we cannot\r\n     * measure the width of the prefix container. To make the docked label appear as if the\r\n     * right offset has been calculated, we forcibly render the label inside the infix. Since\r\n     * the label is part of the infix, the label cannot overflow the prefix content.\r\n     */\r\n    _forceDisplayInfixLabel() {\r\n        return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\r\n    }\r\n    _hasFloatingLabel = computed(() => !!this._labelChild());\r\n    _shouldLabelFloat() {\r\n        if (!this._hasFloatingLabel()) {\r\n            return false;\r\n        }\r\n        return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\r\n    }\r\n    /**\r\n     * Determines whether a class from the AbstractControlDirective\r\n     * should be forwarded to the host element.\r\n     */\r\n    _shouldForward(prop) {\r\n        const control = this._control ? this._control.ngControl : null;\r\n        return control && control[prop];\r\n    }\r\n    /** Gets the type of subscript message to render (error or hint). */\r\n    _getSubscriptMessageType() {\r\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\r\n            ? 'error'\r\n            : 'hint';\r\n    }\r\n    /** Handle label resize events. */\r\n    _handleLabelResized() {\r\n        this._refreshOutlineNotchWidth();\r\n    }\r\n    /** Refreshes the width of the outline-notch, if present. */\r\n    _refreshOutlineNotchWidth() {\r\n        if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\r\n            this._notchedOutline?._setNotchWidth(0);\r\n        }\r\n        else {\r\n            this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\r\n        }\r\n    }\r\n    /** Does any extra processing that is required when handling the hints. */\r\n    _processHints() {\r\n        this._validateHints();\r\n        this._syncDescribedByIds();\r\n    }\r\n    /**\r\n     * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\r\n     * label specified set through the input is being considered as \"start\" aligned.\r\n     *\r\n     * This method is a noop if Angular runs in production mode.\r\n     */\r\n    _validateHints() {\r\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\r\n            let startHint;\r\n            let endHint;\r\n            this._hintChildren.forEach((hint) => {\r\n                if (hint.align === 'start') {\r\n                    if (startHint || this.hintLabel) {\r\n                        throw getMatFormFieldDuplicatedHintError('start');\r\n                    }\r\n                    startHint = hint;\r\n                }\r\n                else if (hint.align === 'end') {\r\n                    if (endHint) {\r\n                        throw getMatFormFieldDuplicatedHintError('end');\r\n                    }\r\n                    endHint = hint;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Sets the list of element IDs that describe the child control. This allows the control to update\r\n     * its `aria-describedby` attribute accordingly.\r\n     */\r\n    _syncDescribedByIds() {\r\n        if (this._control) {\r\n            let ids = [];\r\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\r\n            if (this._control.userAriaDescribedBy &&\r\n                typeof this._control.userAriaDescribedBy === 'string') {\r\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\r\n            }\r\n            if (this._getSubscriptMessageType() === 'hint') {\r\n                const startHint = this._hintChildren\r\n                    ? this._hintChildren.find(hint => hint.align === 'start')\r\n                    : null;\r\n                const endHint = this._hintChildren\r\n                    ? this._hintChildren.find(hint => hint.align === 'end')\r\n                    : null;\r\n                if (startHint) {\r\n                    ids.push(startHint.id);\r\n                }\r\n                else if (this._hintLabel) {\r\n                    ids.push(this._hintLabelId);\r\n                }\r\n                if (endHint) {\r\n                    ids.push(endHint.id);\r\n                }\r\n            }\r\n            else if (this._errorChildren) {\r\n                ids.push(...this._errorChildren.map(error => error.id));\r\n            }\r\n            const existingDescribedBy = this._control.describedByIds;\r\n            let toAssign;\r\n            // In some cases there might be some `aria-describedby` IDs that were assigned directly,\r\n            // like by the `AriaDescriber` (see #30011). Attempt to preserve them by taking the previous\r\n            // attribute value and filtering out the IDs that came from the previous `setDescribedByIds`\r\n            // call. Note the `|| ids` here allows us to avoid duplicating IDs on the first render.\r\n            if (existingDescribedBy) {\r\n                const exclude = this._describedByIds || ids;\r\n                toAssign = ids.concat(existingDescribedBy.filter(id => id && !exclude.includes(id)));\r\n            }\r\n            else {\r\n                toAssign = ids;\r\n            }\r\n            this._control.setDescribedByIds(toAssign);\r\n            this._describedByIds = ids;\r\n        }\r\n    }\r\n    /**\r\n     * Calculates the horizontal offset of the label in the outline appearance. In the outline\r\n     * appearance, the notched-outline and label are not relative to the infix container because\r\n     * the outline intends to surround prefixes, suffixes and the infix. This means that the\r\n     * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\r\n     * horizontally offset the label by the width of the prefix container. The MDC text-field does\r\n     * not need to do this because they use a fixed width for prefixes. Hence, they can simply\r\n     * incorporate the horizontal offset into their default text-field styles.\r\n     */\r\n    _getOutlinedLabelOffset() {\r\n        const dir = this._dir.valueSignal();\r\n        if (!this._hasOutline() || !this._floatingLabel) {\r\n            return null;\r\n        }\r\n        // If no prefix is displayed, reset the outline label offset from potential\r\n        // previous label offset updates.\r\n        if (!this._iconPrefixContainer && !this._textPrefixContainer) {\r\n            return ['', null];\r\n        }\r\n        // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\r\n        // the label offset update until the zone stabilizes.\r\n        if (!this._isAttachedToDom()) {\r\n            return null;\r\n        }\r\n        const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\r\n        const textPrefixContainer = this._textPrefixContainer?.nativeElement;\r\n        const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\r\n        const textSuffixContainer = this._textSuffixContainer?.nativeElement;\r\n        const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\r\n        const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\r\n        const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\r\n        const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\r\n        // If the directionality is RTL, the x-axis transform needs to be inverted. This\r\n        // is because `transformX` does not change based on the page directionality.\r\n        const negate = dir === 'rtl' ? '-1' : '1';\r\n        const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\r\n        const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\r\n        const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\r\n        // Update the translateX of the floating label to account for the prefix container,\r\n        // but allow the CSS to override this setting via a CSS variable when the label is\r\n        // floating.\r\n        const floatingLabelTransform = 'var(--mat-mdc-form-field-label-transform, ' +\r\n            `${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset}))`;\r\n        // Prevent the label from overlapping the suffix when in resting position.\r\n        const notchedOutlineWidth = iconPrefixContainerWidth +\r\n            textPrefixContainerWidth +\r\n            iconSuffixContainerWidth +\r\n            textSuffixContainerWidth;\r\n        return [floatingLabelTransform, notchedOutlineWidth];\r\n    }\r\n    /** Writes the styles produced by `_getOutlineLabelOffset` synchronously to the DOM. */\r\n    _writeOutlinedLabelStyles(styles) {\r\n        if (styles !== null) {\r\n            const [floatingLabelTransform, notchedOutlineWidth] = styles;\r\n            if (this._floatingLabel) {\r\n                this._floatingLabel.element.style.transform = floatingLabelTransform;\r\n            }\r\n            if (notchedOutlineWidth !== null) {\r\n                this._notchedOutline?._setMaxWidth(notchedOutlineWidth);\r\n            }\r\n        }\r\n    }\r\n    /** Checks whether the form field is attached to the DOM. */\r\n    _isAttachedToDom() {\r\n        const element = this._elementRef.nativeElement;\r\n        if (element.getRootNode) {\r\n            const rootNode = element.getRootNode();\r\n            // If the element is inside the DOM the root node will be either the document\r\n            // or the closest shadow root, otherwise it'll be the element itself.\r\n            return rootNode && rootNode !== element;\r\n        }\r\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\r\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\r\n        return document.documentElement.contains(element);\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatFormField, isStandalone: true, selector: \"mat-form-field\", inputs: { hideRequiredMarker: \"hideRequiredMarker\", color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", subscriptSizing: \"subscriptSizing\", hintLabel: \"hintLabel\" }, host: { properties: { \"class.mat-mdc-form-field-label-always-float\": \"_shouldAlwaysFloat()\", \"class.mat-mdc-form-field-has-icon-prefix\": \"_hasIconPrefix\", \"class.mat-mdc-form-field-has-icon-suffix\": \"_hasIconSuffix\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-hide-placeholder\": \"_hasFloatingLabel() && !_shouldLabelFloat()\", \"class.mat-focused\": \"_control.focused\", \"class.mat-primary\": \"color !== \\\"accent\\\" && color !== \\\"warn\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\" }, classAttribute: \"mat-mdc-form-field\" }, providers: [\r\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\r\n            { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\r\n        ], queries: [{ propertyName: \"_labelChild\", first: true, predicate: MatLabel, descendants: true, isSignal: true }, { propertyName: \"_formFieldControl\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: MatHint, descendants: true }], viewQueries: [{ propertyName: \"_iconPrefixContainerSignal\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textPrefixContainerSignal\", first: true, predicate: [\"textPrefixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_iconSuffixContainerSignal\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textSuffixContainerSignal\", first: true, predicate: [\"textSuffixContainer\"], descendants: true, isSignal: true }, { propertyName: \"_textField\", first: true, predicate: [\"textField\"], descendants: true }, { propertyName: \"_iconPrefixContainer\", first: true, predicate: [\"iconPrefixContainer\"], descendants: true }, { propertyName: \"_textPrefixContainer\", first: true, predicate: [\"textPrefixContainer\"], descendants: true }, { propertyName: \"_iconSuffixContainer\", first: true, predicate: [\"iconSuffixContainer\"], descendants: true }, { propertyName: \"_textSuffixContainer\", first: true, predicate: [\"textSuffixContainer\"], descendants: true }, { propertyName: \"_floatingLabel\", first: true, predicate: MatFormFieldFloatingLabel, descendants: true }, { propertyName: \"_notchedOutline\", first: true, predicate: MatFormFieldNotchedOutline, descendants: true }, { propertyName: \"_lineRipple\", first: true, predicate: MatFormFieldLineRipple, descendants: true }], exportAs: [\"matFormField\"], ngImport: i0, template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"], dependencies: [{ kind: \"directive\", type: MatFormFieldFloatingLabel, selector: \"label[matFormFieldFloatingLabel]\", inputs: [\"floating\", \"monitorResize\"] }, { kind: \"component\", type: MatFormFieldNotchedOutline, selector: \"div[matFormFieldNotchedOutline]\", inputs: [\"matFormFieldNotchedOutlineOpen\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: MatFormFieldLineRipple, selector: \"div[matFormFieldLineRipple]\" }, { kind: \"directive\", type: MatHint, selector: \"mat-hint\", inputs: [\"align\", \"id\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatFormField, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', host: {\r\n                        'class': 'mat-mdc-form-field',\r\n                        '[class.mat-mdc-form-field-label-always-float]': '_shouldAlwaysFloat()',\r\n                        '[class.mat-mdc-form-field-has-icon-prefix]': '_hasIconPrefix',\r\n                        '[class.mat-mdc-form-field-has-icon-suffix]': '_hasIconSuffix',\r\n                        // Note that these classes reuse the same names as the non-MDC version, because they can be\r\n                        // considered a public API since custom form controls may use them to style themselves.\r\n                        // See https://github.com/angular/components/pull/20502#discussion_r486124901.\r\n                        '[class.mat-form-field-invalid]': '_control.errorState',\r\n                        '[class.mat-form-field-disabled]': '_control.disabled',\r\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\r\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\r\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\r\n                        '[class.mat-form-field-hide-placeholder]': '_hasFloatingLabel() && !_shouldLabelFloat()',\r\n                        '[class.mat-focused]': '_control.focused',\r\n                        '[class.mat-primary]': 'color !== \"accent\" && color !== \"warn\"',\r\n                        '[class.mat-accent]': 'color === \"accent\"',\r\n                        '[class.mat-warn]': 'color === \"warn\"',\r\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\r\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\r\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\r\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\r\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\r\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\r\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\r\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\r\n                        { provide: MAT_FORM_FIELD, useExisting: MatFormField },\r\n                        { provide: FLOATING_LABEL_PARENT, useExisting: MatFormField },\r\n                    ], imports: [\r\n                        MatFormFieldFloatingLabel,\r\n                        MatFormFieldNotchedOutline,\r\n                        NgTemplateOutlet,\r\n                        MatFormFieldLineRipple,\r\n                        MatHint,\r\n                    ], template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\", styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"] }]\r\n        }], ctorParameters: () => [], propDecorators: { _textField: [{\r\n                type: ViewChild,\r\n                args: ['textField']\r\n            }], _iconPrefixContainer: [{\r\n                type: ViewChild,\r\n                args: ['iconPrefixContainer']\r\n            }], _textPrefixContainer: [{\r\n                type: ViewChild,\r\n                args: ['textPrefixContainer']\r\n            }], _iconSuffixContainer: [{\r\n                type: ViewChild,\r\n                args: ['iconSuffixContainer']\r\n            }], _textSuffixContainer: [{\r\n                type: ViewChild,\r\n                args: ['textSuffixContainer']\r\n            }], _floatingLabel: [{\r\n                type: ViewChild,\r\n                args: [MatFormFieldFloatingLabel]\r\n            }], _notchedOutline: [{\r\n                type: ViewChild,\r\n                args: [MatFormFieldNotchedOutline]\r\n            }], _lineRipple: [{\r\n                type: ViewChild,\r\n                args: [MatFormFieldLineRipple]\r\n            }], _formFieldControl: [{\r\n                type: ContentChild,\r\n                args: [MatFormFieldControl]\r\n            }], _prefixChildren: [{\r\n                type: ContentChildren,\r\n                args: [MAT_PREFIX, { descendants: true }]\r\n            }], _suffixChildren: [{\r\n                type: ContentChildren,\r\n                args: [MAT_SUFFIX, { descendants: true }]\r\n            }], _errorChildren: [{\r\n                type: ContentChildren,\r\n                args: [MAT_ERROR, { descendants: true }]\r\n            }], _hintChildren: [{\r\n                type: ContentChildren,\r\n                args: [MatHint, { descendants: true }]\r\n            }], hideRequiredMarker: [{\r\n                type: Input\r\n            }], color: [{\r\n                type: Input\r\n            }], floatLabel: [{\r\n                type: Input\r\n            }], appearance: [{\r\n                type: Input\r\n            }], subscriptSizing: [{\r\n                type: Input\r\n            }], hintLabel: [{\r\n                type: Input\r\n            }] } });\r\n\r\nexport { MatLabel as M, MAT_ERROR as a, MatError as b, MatHint as c, MAT_PREFIX as d, MatPrefix as e, MAT_SUFFIX as f, MatSuffix as g, MAT_FORM_FIELD as h, MAT_FORM_FIELD_DEFAULT_OPTIONS as i, MatFormField as j, MatFormFieldControl as k, getMatFormFieldPlaceholderConflictError as l, getMatFormFieldDuplicatedHintError as m, getMatFormFieldMissingControlError as n };\r\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}