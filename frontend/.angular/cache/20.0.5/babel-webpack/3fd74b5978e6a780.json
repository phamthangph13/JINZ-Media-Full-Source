{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\n\n/**\r\n * Injection token used to inject the document into Directionality.\r\n * This is used so that the value can be faked in tests.\r\n *\r\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\r\n * tests in Safari to fail.\r\n *\r\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\r\n * themselves use things like `querySelector` in test code.\r\n *\r\n * This token is defined in a separate file from Directionality as a workaround for\r\n * https://github.com/angular/angular/issues/22559\r\n *\r\n * @docs-private\r\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/**\r\n * @docs-private\r\n * @deprecated No longer used, will be removed.\r\n * @breaking-change 21.0.0\r\n */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\r\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\r\n * Exposes the current direction and a stream of direction changes.\r\n */\nclass Directionality {\n  /** The current 'ltr' or 'rtl' value. */\n  get value() {\n    return this.valueSignal();\n  }\n  /**\r\n   * The current 'ltr' or 'rtl' value.\r\n   */\n  valueSignal = signal('ltr');\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  change = new EventEmitter();\n  constructor() {\n    const _document = inject(DIR_DOCUMENT, {\n      optional: true\n    });\n    if (_document) {\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\n    }\n  }\n  ngOnDestroy() {\n    this.change.complete();\n  }\n  static ɵfac = function Directionality_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Directionality)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Directionality,\n    factory: Directionality.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Directionality, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };","map":{"version":3,"names":["i0","InjectionToken","inject","DOCUMENT","signal","EventEmitter","Injectable","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","value","toLowerCase","navigator","language","test","Directionality","valueSignal","change","constructor","_document","optional","bodyDir","body","dir","htmlDir","documentElement","set","ngOnDestroy","complete","ɵfac","Directionality_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","ngDevMode","ɵsetClassMetadata","type","args","D","_","a"],"sources":["C:/Users/winni/OneDrive/Desktop/JINZ-Media-Full-Source/frontend/node_modules/@angular/cdk/fesm2022/directionality-CChdj3az.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\r\nimport { InjectionToken, inject, DOCUMENT, signal, EventEmitter, Injectable } from '@angular/core';\r\n\r\n/**\r\n * Injection token used to inject the document into Directionality.\r\n * This is used so that the value can be faked in tests.\r\n *\r\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\r\n * tests in Safari to fail.\r\n *\r\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\r\n * themselves use things like `querySelector` in test code.\r\n *\r\n * This token is defined in a separate file from Directionality as a workaround for\r\n * https://github.com/angular/angular/issues/22559\r\n *\r\n * @docs-private\r\n */\r\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\r\n    providedIn: 'root',\r\n    factory: DIR_DOCUMENT_FACTORY,\r\n});\r\n/**\r\n * @docs-private\r\n * @deprecated No longer used, will be removed.\r\n * @breaking-change 21.0.0\r\n */\r\nfunction DIR_DOCUMENT_FACTORY() {\r\n    return inject(DOCUMENT);\r\n}\r\n\r\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\r\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\r\n/** Resolves a string value to a specific direction. */\r\nfunction _resolveDirectionality(rawValue) {\r\n    const value = rawValue?.toLowerCase() || '';\r\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\r\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\r\n    }\r\n    return value === 'rtl' ? 'rtl' : 'ltr';\r\n}\r\n/**\r\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\r\n * Exposes the current direction and a stream of direction changes.\r\n */\r\nclass Directionality {\r\n    /** The current 'ltr' or 'rtl' value. */\r\n    get value() {\r\n        return this.valueSignal();\r\n    }\r\n    /**\r\n     * The current 'ltr' or 'rtl' value.\r\n     */\r\n    valueSignal = signal('ltr');\r\n    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\r\n    change = new EventEmitter();\r\n    constructor() {\r\n        const _document = inject(DIR_DOCUMENT, { optional: true });\r\n        if (_document) {\r\n            const bodyDir = _document.body ? _document.body.dir : null;\r\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\r\n            this.valueSignal.set(_resolveDirectionality(bodyDir || htmlDir || 'ltr'));\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.change.complete();\r\n    }\r\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\r\n}\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: Directionality, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }], ctorParameters: () => [] });\r\n\r\nexport { Directionality as D, _resolveDirectionality as _, DIR_DOCUMENT as a };\r\n\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,cAAc,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,YAAY,EAAEC,UAAU,QAAQ,eAAe;;AAElG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAG,IAAIN,cAAc,CAAC,aAAa,EAAE;EACnDO,UAAU,EAAE,MAAM;EAClBC,OAAO,EAAEC;AACb,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoBA,CAAA,EAAG;EAC5B,OAAOR,MAAM,CAACC,QAAQ,CAAC;AAC3B;;AAEA;AACA,MAAMQ,kBAAkB,GAAG,oHAAoH;AAC/I;AACA,SAASC,sBAAsBA,CAACC,QAAQ,EAAE;EACtC,MAAMC,KAAK,GAAGD,QAAQ,EAAEE,WAAW,CAAC,CAAC,IAAI,EAAE;EAC3C,IAAID,KAAK,KAAK,MAAM,IAAI,OAAOE,SAAS,KAAK,WAAW,IAAIA,SAAS,EAAEC,QAAQ,EAAE;IAC7E,OAAON,kBAAkB,CAACO,IAAI,CAACF,SAAS,CAACC,QAAQ,CAAC,GAAG,KAAK,GAAG,KAAK;EACtE;EACA,OAAOH,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA,MAAMK,cAAc,CAAC;EACjB;EACA,IAAIL,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACM,WAAW,CAAC,CAAC;EAC7B;EACA;AACJ;AACA;EACIA,WAAW,GAAGhB,MAAM,CAAC,KAAK,CAAC;EAC3B;EACAiB,MAAM,GAAG,IAAIhB,YAAY,CAAC,CAAC;EAC3BiB,WAAWA,CAAA,EAAG;IACV,MAAMC,SAAS,GAAGrB,MAAM,CAACK,YAAY,EAAE;MAAEiB,QAAQ,EAAE;IAAK,CAAC,CAAC;IAC1D,IAAID,SAAS,EAAE;MACX,MAAME,OAAO,GAAGF,SAAS,CAACG,IAAI,GAAGH,SAAS,CAACG,IAAI,CAACC,GAAG,GAAG,IAAI;MAC1D,MAAMC,OAAO,GAAGL,SAAS,CAACM,eAAe,GAAGN,SAAS,CAACM,eAAe,CAACF,GAAG,GAAG,IAAI;MAChF,IAAI,CAACP,WAAW,CAACU,GAAG,CAAClB,sBAAsB,CAACa,OAAO,IAAIG,OAAO,IAAI,KAAK,CAAC,CAAC;IAC7E;EACJ;EACAG,WAAWA,CAAA,EAAG;IACV,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC;EAC1B;EACA,OAAOC,IAAI,YAAAC,uBAAAC,iBAAA;IAAA,YAAAA,iBAAA,IAAwFhB,cAAc;EAAA;EACjH,OAAOiB,KAAK,kBAD6EpC,EAAE,CAAAqC,kBAAA;IAAAC,KAAA,EACYnB,cAAc;IAAAV,OAAA,EAAdU,cAAc,CAAAc,IAAA;IAAAzB,UAAA,EAAc;EAAM;AAC7I;AACA;EAAA,QAAA+B,SAAA,oBAAAA,SAAA,KAH6FvC,EAAE,CAAAwC,iBAAA,CAGJrB,cAAc,EAAc,CAAC;IAC5GsB,IAAI,EAAEnC,UAAU;IAChBoC,IAAI,EAAE,CAAC;MAAElC,UAAU,EAAE;IAAO,CAAC;EACjC,CAAC,CAAC,EAAkB,MAAM,EAAE;AAAA;AAEpC,SAASW,cAAc,IAAIwB,CAAC,EAAE/B,sBAAsB,IAAIgC,CAAC,EAAErC,YAAY,IAAIsC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}